
================================================================================

--------------------------------------------------------------------------------
[ Basic test for allocators ]
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Stack allocator
data_t::data_t(123): m_val=123
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data=000000158BACF820, data->m_val=123, array=000000158BACF830, array[0].m_val=456, stack.maxSize()=1024, stack.size()=96, stack.remain()=928

--------------------------------------------------------------------------------
Smart stack allocator
p1=000000158BACF800, p2=000000158BACF814, p3=000000158BACF828, stack.maxSize()=1024, stack.size()=0, stack.remain()=1024

--------------------------------------------------------------------------------
Poly allocator
data_t::data_t(123): m_val=123
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(123): m_val=123
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data=000000158BACF818, data->m_val=123, array=000000158BACF838, array[0].m_val=0, data2=000000158BACF870, data2->m_val=123, array2=000000158BACF890, array2[0].m_val=0, stack.maxSize()=1024, stack.size()=168, stack.remain()=856

================================================================================

================================================================================

--------------------------------------------------------------------------------
[ Test for stackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
stackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=218, remain=806, count=13
-----------------------------------------
> stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
> stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
> stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
> stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
> stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
> stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
> stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
> stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
> stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
> stack.free(p14);	p14=000000158BACF910, size=218, remain=806, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=218, remain=806, count=0
-----------------------------------------
> void* p100 = stack.alloc(10);	p100=000000158BACF91C, size=230, remain=794, count=1
> void* p101 = stack.alloc(20);	p101=000000158BACF928, size=252, remain=772, count=2
> void* p102 = stack.alloc(30);	p102=000000158BACF93C, size=282, remain=742, count=3
> stack.rewind(100);	size=100, remain=924, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=20, remain=1004, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
smartStackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=218, remain=806, count=13
-----------------------------------------
> stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
> stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
> stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
> stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
> stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
> stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
> stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
> stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
> stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
> stack.free(p14);	p14=000000158BACF910, size=0, remain=1024, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p100 = stack.alloc(10);	p100=000000158BACF840, size=10, remain=1014, count=1
> void* p101 = stack.alloc(20);	p101=000000158BACF84C, size=32, remain=992, count=2
> void* p102 = stack.alloc(30);	p102=000000158BACF860, size=62, remain=962, count=3
> stack.rewind(100);	size=62, remain=962, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=12, remain=1012, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
stackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACEC18, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
smartStackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF038, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
stackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACDFB8, maxSize=1032, size=0, remain=1032, count=0
-----------------------------------------
> long long* p = stack.newDefault();	p=000000158BACDFB8, size=8, remain=1024, count=1
> stack.deleteDefault(p);	p=000000158BACDFB8, size=8, remain=1024, count=0

----------------------------------------
smartStackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACDB98, maxSize=1032, size=0, remain=1032, count=0
-----------------------------------------
> long long* p = stack.newDefault();	p=000000158BACDB98, size=8, remain=1024, count=1
> stack.deleteDefault(p);	p=000000158BACDB98, size=0, remain=1032, count=0

--------------------------------------------------------------------------------
[ Test for lfStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
lfStackAllocator<> stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=218, remain=806, count=13
-------------------------------------------
> stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
> stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
> stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
> stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
> stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
> stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
> stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
> stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
> stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
> stack.free(p14);	p14=000000158BACF910, size=218, remain=806, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=218, remain=806, count=0
-------------------------------------------
> void* p100 = stack.alloc(10);	p100=000000158BACF91C, size=230, remain=794, count=1
> void* p101 = stack.alloc(20);	p101=000000158BACF928, size=252, remain=772, count=2
> void* p102 = stack.alloc(30);	p102=000000158BACF93C, size=282, remain=742, count=3
> stack.rewind(100);	size=100, remain=924, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=20, remain=1004, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfSmartStackAllocator stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=218, remain=806, count=13
-------------------------------------------
> stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
> stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
> stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
> stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
> stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
> stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
> stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
> stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
> stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
> stack.free(p14);	p14=000000158BACF910, size=0, remain=1024, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p100 = stack.alloc(10);	p100=000000158BACF840, size=10, remain=1014, count=1
> void* p101 = stack.alloc(20);	p101=000000158BACF84C, size=32, remain=992, count=2
> void* p102 = stack.alloc(30);	p102=000000158BACF860, size=62, remain=962, count=3
> stack.rewind(100);	size=62, remain=962, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=12, remain=1012, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfStackAllocator_withBuff<1024> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACE7F8, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfSmartStackAllocator_withBuff<1024> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACE3D8, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfStackAllocator_withType<long long, 128> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACD358, maxSize=1032, size=0, remain=1032, count=0
-------------------------------------------
> long long* p = stack.newDefault();	p=000000158BACD358, size=8, remain=1024, count=1
> stack.deleteDefault(p);	p=000000158BACD358, size=8, remain=1024, count=0

----------------------------------------
lfSmartStackAllocator_withType<long long, 128> stack;
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACD778, maxSize=1032, size=0, remain=1032, count=0
-------------------------------------------
> long long* p = stack.newDefault();	p=000000158BACD778, size=8, remain=1024, count=1
> stack.deleteDefault(p);	p=000000158BACD778, size=0, remain=1032, count=0

--------------------------------------------------------------------------------
[ Test for scoepdStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
stackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=000000158BACF840, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF8A4, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF8A5, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF8A6, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF8A8, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8C0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8CC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8D0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8E8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8F0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF900, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF910, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF940, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF970, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF8A4, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF8A5, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF8A6, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF8A8, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF8C0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8CC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8D0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8E8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8F0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF900, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF910, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF940, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF970, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF8A4, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF8B0, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8C4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF8A4, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF8C4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=100, remain=924, count=1
-----------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF910, size=218, remain=806, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF840, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF84C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF860, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF840, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF860, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
smartStackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=000000158BACF840, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF8A4, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF8A5, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF8A6, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF8A8, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8C0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8CC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8D0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8E8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8F0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF900, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF910, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF940, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF970, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF8A4, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF8A5, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF8A6, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF8A8, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF8C0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8CC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8D0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8E8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8F0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF900, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF910, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF940, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF970, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF8A4, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF8B0, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8C4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF8A4, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF8C4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=100, remain=924, count=1
-----------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF910, size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF840, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF84C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF860, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF840, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF860, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
lfStackAllocator<> stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=000000158BACF840, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF8A4, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF8A5, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF8A6, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF8A8, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8C0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8CC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8D0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8E8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8F0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF900, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF910, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF940, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF970, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF8A4, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF8A5, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF8A6, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF8A8, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF8C0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8CC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8D0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8E8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8F0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF900, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF910, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF940, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF970, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF8A4, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF8B0, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8C4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF8A4, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF8C4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=100, remain=924, count=1
-------------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF910, size=218, remain=806, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF840, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF84C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF860, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF840, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF860, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfSmartStackAllocator stack(buff);
----------------------------------------

stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=000000158BACF840, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF8A4, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF8A5, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF8A6, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF8A8, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8C0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8CC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8D0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8E8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8F0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF900, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF910, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF940, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF970, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF8A4, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF8A5, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF8A6, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF8A8, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF8C0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8CC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8D0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8E8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8F0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF900, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF910, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF940, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF970, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF8A4, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF8B0, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8C4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF8A4, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF8C4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=000000158BACF840, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=100, remain=924, count=1
-------------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF840, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF841, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF842, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF844, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF860, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF86C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF870, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF888, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF890, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8A0, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8B0, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8E0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF910, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF840, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF841, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF842, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF844, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF860, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF86C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF870, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF888, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF890, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8A0, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8B0, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8E0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF910, size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF840, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF84C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF860, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF840, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF860, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=000000158BACF840, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
stack.clear();
stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfStackAllocator -----
buff=000000158BACF840, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

--------------------------------------------------------------------------------
[ Test for dualStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
> dualStackAllocator<lock_type> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------

----------------------------------------
> smartDualStackAllocator<lock_type> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------

----------------------------------------
> dualStackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF018, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------

----------------------------------------
> smartDualStackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACEBE8, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------

----------------------------------------
> dualStackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACD6F8, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> long long* p1 = stack.newDefault();	p1=000000158BACD6F8, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=000000158BACD6F8, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=000000158BACDAF8, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=000000158BACD700, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=000000158BACD6F8, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=000000158BACDAF8, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=000000158BACD700, size=32(ASC=16,DESC=16), remain=1000, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=000000158BACDAF0, size=32(ASC=16,DESC=16), remain=1000, count=0(ASC=0,DESC=0)

----------------------------------------
> smartDualStackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACD228, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> long long* p1 = stack.newDefault();	p1=000000158BACD228, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=000000158BACD228, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=000000158BACD628, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=000000158BACD230, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=000000158BACD228, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=000000158BACD628, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=000000158BACD230, size=16(ASC=0,DESC=16), remain=1016, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=000000158BACD620, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0)

--------------------------------------------------------------------------------
[ Test for lfDualStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
> lfDualStackAllocator<> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------

----------------------------------------
> lfSmartDualStackAllocator stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------

----------------------------------------
> lfDualStackAllocator_withBuff<1024> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACE7B8, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------

----------------------------------------
> lfSmartDualStackAllocator_withBuff<1024> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACE388, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------

----------------------------------------
> lfDualStackAllocator_withType<long long, 128> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACDB28, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> long long* p1 = stack.newDefault();	p1=000000158BACDB28, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=000000158BACDB28, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=000000158BACDF28, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=000000158BACDB30, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=000000158BACDB28, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=000000158BACDF28, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=000000158BACDB30, size=32(ASC=16,DESC=16), remain=1000, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=000000158BACDF20, size=32(ASC=16,DESC=16), remain=1000, count=0(ASC=0,DESC=0)

----------------------------------------
> lfSmartDualStackAllocator_withType<long long, 128> stack;
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACDF58, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> long long* p1 = stack.newDefault();	p1=000000158BACDF58, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=000000158BACDF58, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=000000158BACE358, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=000000158BACDF60, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=000000158BACDF58, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=000000158BACE358, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=000000158BACDF60, size=16(ASC=0,DESC=16), remain=1016, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=000000158BACE350, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0)

--------------------------------------------------------------------------------
[ Test for scoepdStackAllocator / scoepdDualStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
> dualStackAllocator<lock_type> stack(buff);
----------------------------------------

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=000000158BACF820, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF820, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF884, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF885, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF886, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF888, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8A0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8AC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8B0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8C8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8D0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8E0, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8F0, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF920, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF950, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=000000158BACF820, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF884, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF885, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF886, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF888, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF8A0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8AC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8B0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8C8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8D0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8E0, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8F0, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF920, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF950, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=000000158BACF820, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF884, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF890, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8A4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.rewind(p100);	size=0, remain=924, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=000000158BACF820, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF884, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF8A4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=000000158BACF820, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clear();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF820, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=000000158BACF820, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218, remain=806, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=0 (INIT: buff=000000158BACF820, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.rewind(p100);	size=0, remain=1024, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=000000158BACF820, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=000000158BACF820, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=000000158BACF840, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=000000158BACF820, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clear();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=000000158BACF820, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=000000158BACFBBC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF884, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF885, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF886, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF888, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8A0, size=38(ASC=38,DESC=0), remain=786, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8AC, size=44(ASC=44,DESC=0), remain=780, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8B0, size=68(ASC=68,DESC=0), remain=756, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8C8, size=72(ASC=72,DESC=0), remain=752, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8D0, size=92(ASC=92,DESC=0), remain=732, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8E0, size=108(ASC=108,DESC=0), remain=716, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8F0, size=156(ASC=156,DESC=0), remain=668, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF920, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF884, size=214(ASC=214,DESC=0), remain=610, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF885, size=214(ASC=214,DESC=0), remain=610, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF886, size=214(ASC=214,DESC=0), remain=610, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF888, size=214(ASC=214,DESC=0), remain=610, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF8A0, size=214(ASC=214,DESC=0), remain=610, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8AC, size=214(ASC=214,DESC=0), remain=610, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8B0, size=214(ASC=214,DESC=0), remain=610, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8C8, size=214(ASC=214,DESC=0), remain=610, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8D0, size=214(ASC=214,DESC=0), remain=610, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8E0, size=214(ASC=214,DESC=0), remain=610, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8F0, size=214(ASC=214,DESC=0), remain=610, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF920, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF890, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8A4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF890, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFBAC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF898, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFB90, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF884, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFBA4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------

----------------------------------------
> smartDualStackAllocator<lock_type> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=000000158BACF820, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=000000158BACFBBC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF884, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF885, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF886, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF888, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8A0, size=38(ASC=38,DESC=0), remain=786, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8AC, size=44(ASC=44,DESC=0), remain=780, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8B0, size=68(ASC=68,DESC=0), remain=756, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8C8, size=72(ASC=72,DESC=0), remain=752, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8D0, size=92(ASC=92,DESC=0), remain=732, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8E0, size=108(ASC=108,DESC=0), remain=716, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8F0, size=156(ASC=156,DESC=0), remain=668, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF920, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF884, size=214(ASC=214,DESC=0), remain=610, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF885, size=214(ASC=214,DESC=0), remain=610, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF886, size=214(ASC=214,DESC=0), remain=610, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF888, size=214(ASC=214,DESC=0), remain=610, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF8A0, size=214(ASC=214,DESC=0), remain=610, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8AC, size=214(ASC=214,DESC=0), remain=610, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8B0, size=214(ASC=214,DESC=0), remain=610, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8C8, size=214(ASC=214,DESC=0), remain=610, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8D0, size=214(ASC=214,DESC=0), remain=610, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8E0, size=214(ASC=214,DESC=0), remain=610, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8F0, size=214(ASC=214,DESC=0), remain=610, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF920, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF890, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8A4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF890, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFBAC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF898, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFB90, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF884, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFBA4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for dualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------

----------------------------------------
> lfDualStackAllocator<> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=000000158BACF820, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=000000158BACFBBC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF884, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF885, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF886, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF888, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8A0, size=38(ASC=38,DESC=0), remain=786, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8AC, size=44(ASC=44,DESC=0), remain=780, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8B0, size=68(ASC=68,DESC=0), remain=756, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8C8, size=72(ASC=72,DESC=0), remain=752, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8D0, size=92(ASC=92,DESC=0), remain=732, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8E0, size=108(ASC=108,DESC=0), remain=716, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8F0, size=156(ASC=156,DESC=0), remain=668, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF920, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF884, size=214(ASC=214,DESC=0), remain=610, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF885, size=214(ASC=214,DESC=0), remain=610, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF886, size=214(ASC=214,DESC=0), remain=610, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF888, size=214(ASC=214,DESC=0), remain=610, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF8A0, size=214(ASC=214,DESC=0), remain=610, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8AC, size=214(ASC=214,DESC=0), remain=610, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8B0, size=214(ASC=214,DESC=0), remain=610, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8C8, size=214(ASC=214,DESC=0), remain=610, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8D0, size=214(ASC=214,DESC=0), remain=610, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8E0, size=214(ASC=214,DESC=0), remain=610, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8F0, size=214(ASC=214,DESC=0), remain=610, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF920, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF890, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8A4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF890, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFBAC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF898, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFB90, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF884, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFBA4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count2(ASC=1,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------

----------------------------------------
> lfSmartDualStackAllocator stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACF82C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACF82D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACF82E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=000000158BACF830, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=14(ASC=14,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACF82C, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=000000158BACF82D, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=000000158BACF82E, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=000000158BACF830, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=000000158BACFC10, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=000000158BACFC0F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=000000158BACFC0E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=000000158BACFC0C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=14(ASC=0,DESC=14)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=000000158BACFC10, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=000000158BACFC0F, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=000000158BACFC0E, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=000000158BACFC0C, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=000000158BACF820, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=000000158BACFBBC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF884, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF885, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF886, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF888, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF8A0, size=38(ASC=38,DESC=0), remain=786, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF8AC, size=44(ASC=44,DESC=0), remain=780, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF8B0, size=68(ASC=68,DESC=0), remain=756, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF8C8, size=72(ASC=72,DESC=0), remain=752, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF8D0, size=92(ASC=92,DESC=0), remain=732, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF8E0, size=108(ASC=108,DESC=0), remain=716, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF8F0, size=156(ASC=156,DESC=0), remain=668, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF920, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=204(ASC=204,DESC=0), remain=620, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF884, size=214(ASC=214,DESC=0), remain=610, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF885, size=214(ASC=214,DESC=0), remain=610, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF886, size=214(ASC=214,DESC=0), remain=610, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF888, size=214(ASC=214,DESC=0), remain=610, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF8A0, size=214(ASC=214,DESC=0), remain=610, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF8AC, size=214(ASC=214,DESC=0), remain=610, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF8B0, size=214(ASC=214,DESC=0), remain=610, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF8C8, size=214(ASC=214,DESC=0), remain=610, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF8D0, size=214(ASC=214,DESC=0), remain=610, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF8E0, size=214(ASC=214,DESC=0), remain=610, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF8F0, size=214(ASC=214,DESC=0), remain=610, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF920, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=214(ASC=214,DESC=0), remain=610, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF950, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=214(ASC=214,DESC=0), remain=610, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF890, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF8A4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF890, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFBAC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF898, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFB90, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF884, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFBB0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF884, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFBA4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count2(ASC=1,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACFC1C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACFC1B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACFC1A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACFC18, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACFBFC, size=36(ASC=0,DESC=36), remain=988, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACFBDC, size=68(ASC=0,DESC=68), remain=956, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACFBC0, size=96(ASC=0,DESC=96), remain=928, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACFBB0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACFB80, size=160(ASC=0,DESC=160), remain=864, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACFB50, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=0,DESC=208), remain=816, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACFB44, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=220(ASC=0,DESC=220), remain=804, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACFC1C, size=220(ASC=0,DESC=220), remain=804, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=000000158BACFC1B, size=220(ASC=0,DESC=220), remain=804, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=000000158BACFC1A, size=220(ASC=0,DESC=220), remain=804, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=000000158BACFC18, size=220(ASC=0,DESC=220), remain=804, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=000000158BACFC00, size=220(ASC=0,DESC=220), remain=804, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACFBFC, size=220(ASC=0,DESC=220), remain=804, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACFBE0, size=220(ASC=0,DESC=220), remain=804, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACFBDC, size=220(ASC=0,DESC=220), remain=804, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACFBC0, size=220(ASC=0,DESC=220), remain=804, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACFBB0, size=220(ASC=0,DESC=220), remain=804, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACFB80, size=220(ASC=0,DESC=220), remain=804, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACFB50, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=220(ASC=0,DESC=220), remain=804, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=000000158BACFB44, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACFC14, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACFC00, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACFBE0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF82C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC14, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=000000158BACF820, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=000000158BACF821, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=000000158BACF822, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=000000158BACF824, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=000000158BACF840, size=42(ASC=42,DESC=0), remain=982, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=000000158BACF84C, size=48(ASC=48,DESC=0), remain=976, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=000000158BACF850, size=72(ASC=72,DESC=0), remain=952, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=000000158BACF868, size=76(ASC=76,DESC=0), remain=948, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=000000158BACF870, size=96(ASC=96,DESC=0), remain=928, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=000000158BACF880, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=000000158BACF890, size=160(ASC=160,DESC=0), remain=864, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=000000158BACF8C0, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=0000000000000000, size=208(ASC=208,DESC=0), remain=816, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=000000158BACF8F0, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=218(ASC=218,DESC=0), remain=806, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=000000158BACF820, size=218(ASC=218,DESC=0), remain=806, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=000000158BACF821, size=218(ASC=218,DESC=0), remain=806, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=000000158BACF822, size=218(ASC=218,DESC=0), remain=806, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=000000158BACF824, size=218(ASC=218,DESC=0), remain=806, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=000000158BACF840, size=218(ASC=218,DESC=0), remain=806, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=000000158BACF84C, size=218(ASC=218,DESC=0), remain=806, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=000000158BACF850, size=218(ASC=218,DESC=0), remain=806, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=000000158BACF868, size=218(ASC=218,DESC=0), remain=806, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=000000158BACF870, size=218(ASC=218,DESC=0), remain=806, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=000000158BACF880, size=218(ASC=218,DESC=0), remain=806, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=000000158BACF890, size=218(ASC=218,DESC=0), remain=806, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=000000158BACF8C0, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=0000000000000000, size=218(ASC=218,DESC=0), remain=806, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=000000158BACF8F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=000000158BACF82C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=000000158BACF840, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=000000158BACF82C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=000000158BACFC10, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=000000158BACF830, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=000000158BACFBF8, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=000000158BACF820, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=000000158BACFC14, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=000000158BACF820, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=000000158BACFC08, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=000000158BACF820, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfDualStackAllocator -----
buff=000000158BACF820, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------

================================================================================

--------------------------------------------------------------------------------
[ Test for monoAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
monoAllocator<lock_type> mono(buff);
----------------------------------------

mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for monoAllocator -----
buff=000000158BACF830, maxSize=1024, size=0, remain=1024, isAllocated=false
----------------------------------------
> void* p1 = mono.alloc(1);	p1=000000158BACF830, size=1, remain=1023, isAllocated=true
> mono.free(p1);	p1=000000158BACF830, size=0, remain=1024, isAllocated=false
> void* p2 = mono.alloc(1, 1);	p2=000000158BACF830, size=1, remain=1023, isAllocated=true
> void* p3 = mono.alloc(1, 1);	p3=0000000000000000, size=1, remain=1023, isAllocated=true
> mono.free(p2);	p2=000000158BACF830, size=0, remain=1024, isAllocated=false
> mono.free(p3);	p3=0000000000000000, size=0, remain=1024, isAllocated=false
> void* p4 = mono.alloc(1);	p4=000000158BACF830, size=1, remain=1023, isAllocated=true
> mono.free(p4);	p4=000000158BACF830, size=0, remain=1024, isAllocated=false
> void* p5 = mono.alloc(10, 32);	p5=000000158BACF840, size=26, remain=998, isAllocated=true
> mono.free(p5);	p5=000000158BACF840, size=0, remain=1024, isAllocated=false
> int* p6 = mono.template newObj<int>();	p6=000000158BACF830, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p6);	p6=000000158BACF830, size=0, remain=1024, isAllocated=false
> double* p7 = mono.template newArray<double>(3);	p7=000000158BACF830, size=24, remain=1000, isAllocated=true
> mono.deleteArray(p7, 3);	p7=000000158BACF830, size=0, remain=1024, isAllocated=false
> int* p8 = mono.template newObj<int>();	p8=000000158BACF830, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p8);	p8=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
> data_t* p9 = mono.template newObj<data_t>();	p9=000000158BACF830, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=0
> mono.deleteObj(p9);	p9=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(123): m_val=123
> data_t* p10 = mono.template newObj<data_t>(123);	p10=000000158BACF830, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=123
> mono.deleteObj(p10);	p10=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = mono.template newArray<data_t>(3);	p11=000000158BACF830, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> mono.deleteArray(p11, 3);	p11=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = mono.template newArray<data_t>(3, 456);	p12=000000158BACF830, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> mono.deleteArray(p12, 3);	p12=000000158BACF830, size=0, remain=1024, isAllocated=false
> void* p13 = mono.alloc(2000);	p13=0000000000000000, size=0, remain=1024, isAllocated=false
> mono.free(p13);	p13=0000000000000000, size=0, remain=1024, isAllocated=false
> void* p14 = mono.alloc(10);	p14=000000158BACF830, size=10, remain=1014, isAllocated=true
> mono.free(p14);	p14=000000158BACF830, size=0, remain=1024, isAllocated=false
mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for monoAllocator -----
buff=000000158BACF830, maxSize=1024, size=0, remain=1024, isAllocated=false
----------------------------------------

----------------------------------------
monoAllocator_withBuff<1024, lock_type> mono;
----------------------------------------

mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for monoAllocator -----
buff=000000158BACEC18, maxSize=1024, size=0, remain=1024, isAllocated=false
----------------------------------------

----------------------------------------
monoAllocator_withType<long long, 128, lock_type> mono;
----------------------------------------

mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for monoAllocator -----
buff=000000158BACE7F8, maxSize=1032, size=0, remain=1032, isAllocated=false
----------------------------------------
> long long* p = mono.newDefault();	p=000000158BACE7F8, size=8, remain=1024, isAllocated=true
> mono.deleteDefault(p);	p=000000158BACE7F8, size=0, remain=1032, isAllocated=false

--------------------------------------------------------------------------------
[ Test for lfMonoAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
lfMonoAllocator mono(buff);
----------------------------------------

mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfMonoAllocator -----
buff=000000158BACF830, maxSize=1024, size=0, remain=1024, isAllocated=false
------------------------------------------
> void* p1 = mono.alloc(1);	p1=000000158BACF830, size=1, remain=1023, isAllocated=true
> mono.free(p1);	p1=000000158BACF830, size=0, remain=1024, isAllocated=false
> void* p2 = mono.alloc(1, 1);	p2=000000158BACF830, size=1, remain=1023, isAllocated=true
> void* p3 = mono.alloc(1, 1);	p3=0000000000000000, size=1, remain=1023, isAllocated=true
> mono.free(p2);	p2=000000158BACF830, size=0, remain=1024, isAllocated=false
> mono.free(p3);	p3=0000000000000000, size=0, remain=1024, isAllocated=false
> void* p4 = mono.alloc(1);	p4=000000158BACF830, size=1, remain=1023, isAllocated=true
> mono.free(p4);	p4=000000158BACF830, size=0, remain=1024, isAllocated=false
> void* p5 = mono.alloc(10, 32);	p5=000000158BACF840, size=26, remain=998, isAllocated=true
> mono.free(p5);	p5=000000158BACF840, size=0, remain=1024, isAllocated=false
> int* p6 = mono.template newObj<int>();	p6=000000158BACF830, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p6);	p6=000000158BACF830, size=0, remain=1024, isAllocated=false
> double* p7 = mono.template newArray<double>(3);	p7=000000158BACF830, size=24, remain=1000, isAllocated=true
> mono.deleteArray(p7, 3);	p7=000000158BACF830, size=0, remain=1024, isAllocated=false
> int* p8 = mono.template newObj<int>();	p8=000000158BACF830, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p8);	p8=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
> data_t* p9 = mono.template newObj<data_t>();	p9=000000158BACF830, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=0
> mono.deleteObj(p9);	p9=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(123): m_val=123
> data_t* p10 = mono.template newObj<data_t>(123);	p10=000000158BACF830, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=123
> mono.deleteObj(p10);	p10=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = mono.template newArray<data_t>(3);	p11=000000158BACF830, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> mono.deleteArray(p11, 3);	p11=000000158BACF830, size=0, remain=1024, isAllocated=false
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = mono.template newArray<data_t>(3, 456);	p12=000000158BACF830, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> mono.deleteArray(p12, 3);	p12=000000158BACF830, size=0, remain=1024, isAllocated=false
> void* p13 = mono.alloc(2000);	p13=0000000000000000, size=0, remain=1024, isAllocated=false
> mono.free(p13);	p13=0000000000000000, size=0, remain=1024, isAllocated=false
> void* p14 = mono.alloc(10);	p14=000000158BACF830, size=10, remain=1014, isAllocated=true
> mono.free(p14);	p14=000000158BACF830, size=0, remain=1024, isAllocated=false
mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfMonoAllocator -----
buff=000000158BACF830, maxSize=1024, size=0, remain=1024, isAllocated=false
------------------------------------------

----------------------------------------
lfMonoAllocator_withBuff<1024> mono;
----------------------------------------

mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfMonoAllocator -----
buff=000000158BACF030, maxSize=1024, size=0, remain=1024, isAllocated=false
------------------------------------------

----------------------------------------
lfMonoAllocator_withType<long long, 128> mono;
----------------------------------------

mono.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfMonoAllocator -----
buff=000000158BACE3D0, maxSize=1032, size=0, remain=1032, isAllocated=false
------------------------------------------
> long long* p = mono.newDefault();	p=000000158BACE3D0, size=8, remain=1024, isAllocated=true
> mono.deleteDefault(p);	p=000000158BACE3D0, size=0, remain=1032, isAllocated=false

================================================================================

--------------------------------------------------------------------------------
[ Test for poolAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
poolAllocator<16, lock_type> pool(buff, sizeof(buff), 32, 8);
----------------------------------------

pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=0
----------------------------------------
> void* p1 = pool.alloc(1);	p1=000000158BACF830, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=000000158BACF850, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=000000158BACF870, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=000000158BACF890, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=0000000000000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=000000158BACF8B0, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=000000158BACF8D0, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=000000158BACF8F0, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=000000158BACF930, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=0000000000000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=0000000000000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=0000000000000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=000000158BACF950, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=000000158BACF950, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=000000158BACF990, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=000000158BACF9B0, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=000000158BACF9D0, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=000000158BACF9F0, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=000000158BACFA10, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=0000000000000000, size=512, remain=512, pool=16/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
----------------------------------------
> pool.free(p1);	p1=000000158BACF830, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=000000158BACF850, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=000000158BACF870, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=000000158BACF890, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=0000000000000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=000000158BACF8B0, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=000000158BACF8D0, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=000000158BACF8F0, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=000000158BACF930, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=0000000000000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=000000158BACF950, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=000000158BACF970, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=000000158BACF990, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=000000158BACF9B0, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=000000158BACF9D0, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=000000158BACF9F0, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=000000158BACFA10, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=0000000000000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
----------------------------------------
> void* p1 = pool.alloc(1);	p1=000000158BACFA10, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=000000158BACF9F0, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=000000158BACF9D0, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=000000158BACF9B0, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=0000000000000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=000000158BACF990, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=000000158BACF970, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=000000158BACF950, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=000000158BACF930, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=000000158BACF910, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=0000000000000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=0000000000000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=0000000000000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=000000158BACF8F0, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=000000158BACF8F0, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=000000158BACF8B0, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=000000158BACF890, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=000000158BACF870, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=000000158BACF850, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=000000158BACF830, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=0000000000000000, size=512, remain=512, pool=16/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
----------------------------------------
> pool.free(p1);	p1=000000158BACFA10, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=000000158BACF9F0, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=000000158BACF9D0, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=000000158BACF9B0, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=0000000000000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=000000158BACF990, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=000000158BACF970, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=000000158BACF950, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=000000158BACF930, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=000000158BACF910, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=0000000000000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=000000158BACF8F0, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=000000158BACF8D0, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=000000158BACF8B0, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=000000158BACF890, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=000000158BACF870, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=000000158BACF850, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=000000158BACF830, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=0000000000000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
----------------------------------------
> void* p1 = pool.alloc(1);	p1=000000158BACF830, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=000000158BACF850, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=000000158BACF870, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=000000158BACF890, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=0000000000000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=000000158BACF8B0, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=000000158BACF8D0, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=000000158BACF8F0, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=000000158BACF930, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=0000000000000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=0000000000000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=0000000000000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=000000158BACF950, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=000000158BACF950, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=000000158BACF990, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=000000158BACF9B0, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=000000158BACF9D0, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=000000158BACF9F0, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=000000158BACFA10, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=0000000000000000, size=512, remain=512, pool=16/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
----------------------------------------
> pool.free(p1);	p1=000000158BACF830, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=000000158BACF850, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=000000158BACF870, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=000000158BACF890, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=0000000000000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=000000158BACF8B0, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=000000158BACF8D0, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=000000158BACF8F0, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=000000158BACF930, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=0000000000000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=000000158BACF950, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=000000158BACF970, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=000000158BACF990, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=000000158BACF9B0, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=000000158BACF9D0, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=000000158BACF9F0, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=000000158BACFA10, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=0000000000000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
----------------------------------------

----------------------------------------
poolAllocator_withBuff<32, 16, 8, lock_type> pool;
----------------------------------------

pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACF220, offset=0, maxSize=520, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=520, vacantHead=0
----------------------------------------

----------------------------------------
poolAllocator_withType<block_type, 16, lock_type> pool;
----------------------------------------

pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for poolAllocator -----
buff=000000158BACED90, offset=0, maxSize=520, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=520, vacantHead=0
----------------------------------------
> block_type* p = pool.newDefault();	p=000000158BACED90, size=32, remain=488, pool=1/16
> pool.deleteDefault(p);	p=000000158BACED90, size=0, remain=520, pool=0/16

--------------------------------------------------------------------------------
[ Test for lfPoolAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
lfPoolAllocator<16> pool(buff, sizeof(buff), 32, 8);
----------------------------------------

pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=0
------------------------------------------
> void* p1 = pool.alloc(1);	p1=000000158BACF830, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=000000158BACF850, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=000000158BACF870, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=000000158BACF890, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=0000000000000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=000000158BACF8B0, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=000000158BACF8D0, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=000000158BACF8F0, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=000000158BACF930, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=0000000000000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=0000000000000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=0000000000000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=000000158BACF950, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=000000158BACF950, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=000000158BACF990, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=000000158BACF9B0, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=000000158BACF9D0, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=000000158BACF9F0, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=000000158BACFA10, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=0000000000000000, size=512, remain=512, pool=16/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
------------------------------------------
> pool.free(p1);	p1=000000158BACF830, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=000000158BACF850, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=000000158BACF870, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=000000158BACF890, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=0000000000000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=000000158BACF8B0, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=000000158BACF8D0, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=000000158BACF8F0, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=000000158BACF930, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=0000000000000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=000000158BACF950, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=000000158BACF970, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=000000158BACF990, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=000000158BACF9B0, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=000000158BACF9D0, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=000000158BACF9F0, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=000000158BACFA10, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=0000000000000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
------------------------------------------
> void* p1 = pool.alloc(1);	p1=000000158BACFA10, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=000000158BACF9F0, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=000000158BACF9D0, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=000000158BACF9B0, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=0000000000000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=000000158BACF990, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=000000158BACF970, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=000000158BACF950, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=000000158BACF930, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=000000158BACF910, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=0000000000000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=0000000000000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=0000000000000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=000000158BACF8F0, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=000000158BACF8F0, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=000000158BACF8B0, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=000000158BACF890, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=000000158BACF870, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=000000158BACF850, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=000000158BACF830, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=0000000000000000, size=512, remain=512, pool=16/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
------------------------------------------
> pool.free(p1);	p1=000000158BACFA10, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=000000158BACF9F0, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=000000158BACF9D0, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=000000158BACF9B0, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=0000000000000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=000000158BACF990, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=000000158BACF970, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=000000158BACF950, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=000000158BACF930, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=000000158BACF910, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=0000000000000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=000000158BACF8F0, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=000000158BACF8D0, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=000000158BACF8B0, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=000000158BACF890, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=000000158BACF870, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=000000158BACF850, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=000000158BACF830, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=0000000000000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
------------------------------------------
> void* p1 = pool.alloc(1);	p1=000000158BACF830, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=000000158BACF850, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=000000158BACF870, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=000000158BACF890, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=0000000000000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=000000158BACF8B0, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=000000158BACF8D0, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=000000158BACF8F0, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=000000158BACF930, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=0000000000000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=0000000000000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=0000000000000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=000000158BACF950, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=000000158BACF950, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=000000158BACF990, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=000000158BACF9B0, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=000000158BACF9D0, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=000000158BACF9F0, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=000000158BACFA10, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=0000000000000000, size=512, remain=512, pool=16/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
------------------------------------------
> pool.free(p1);	p1=000000158BACF830, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=000000158BACF850, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=000000158BACF870, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=000000158BACF890, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=0000000000000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=000000158BACF8B0, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=000000158BACF8D0, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=000000158BACF8F0, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=000000158BACF910, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=000000158BACF930, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=0000000000000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=0000000000000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=000000158BACF950, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=000000158BACF970, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=000000158BACF990, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=000000158BACF9B0, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=000000158BACF9D0, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=000000158BACF9F0, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=000000158BACFA10, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=0000000000000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACF830, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
------------------------------------------

----------------------------------------
lfPoolAllocator_withBuff<32, 16, 8> pool;
----------------------------------------

pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACEFE0, offset=0, maxSize=520, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=520, vacantHead=0
------------------------------------------

----------------------------------------
lfPoolAllocator_withType<block_type, 16> pool;
----------------------------------------

pool.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for lfPoolAllocator -----
buff=000000158BACEB50, offset=0, maxSize=520, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=520, vacantHead=0
------------------------------------------
> block_type* p = pool.newDefault();	p=000000158BACEB50, size=32, remain=488, pool=1/16
> pool.deleteDefault(p);	p=000000158BACEB50, size=0, remain=520, pool=0/16

================================================================================

--------------------------------------------------------------------------------
[ Test for stdAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
stdAllocator<lock_type> std_allocator;
----------------------------------------

std_allocator.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> void* p1 = std_allocator.alloc(1);	p1=000000158BC190B0, size=0, remain=0
> void* p2 = std_allocator.alloc(1, 1);	p2=000000158BC190D0, size=0, remain=0
> void* p3 = std_allocator.alloc(1, 1);	p3=000000158BC190F0, size=0, remain=0
> void* p4 = std_allocator.alloc(1);	p4=000000158BC19110, size=0, remain=0
> void* p5 = std_allocator.alloc(10, 32);	p5=000000158BC18600, size=0, remain=0
> int* p6 = std_allocator.template newObj<int>();	p6=000000158BC19130, size=0, remain=0
> double* p7 = std_allocator.template newArray<double>(3);	p7=000000158BC186C0, size=0, remain=0
> int* p8 = std_allocator.template newObj<int>();	p8=000000158BC19150, size=0, remain=0
data_t::data_t(): m_val=0
> data_t* p9 = std_allocator.template newObj<data_t>();	p9=000000158BC18640, size=0, remain=0
> int* p10 = std_allocator.template newObj<int>();	p10=000000158BC19170, size=0, remain=0
data_t::data_t(123): m_val=123
> data_t* p11 = std_allocator.template newObj<data_t>(123);	p11=000000158BC18820, size=0, remain=0
> int* p12 = std_allocator.template newObj<int>();	p12=000000158BC1CF00, size=0, remain=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p13 = std_allocator.template newArray<data_t>(3);	p13=000000158BC1CF20, size=0, remain=0
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p14 = std_allocator.template newArray<data_t>(3, 456);	p14=000000158BC1CF60, size=0, remain=0
> void* p15 = std_allocator.alloc(2000);	p15=000000158BC1CFA0, size=0, remain=0
> void* p16 = std_allocator.alloc(10);	p16=000000158BC187E0, size=0, remain=0
> data2_t* p17 = std_allocator.template newObj<data2_t>();	p17=000000158BC18FC0, size=0, remain=0
> int* p18 = std_allocator.template newObj<int>();	p18=000000158BC1D780, size=0, remain=0
> data2_t* p19 = std_allocator.template newObj<data2_t>();	p19=000000158BC18F00, size=0, remain=0
> int* p20 = std_allocator.template newObj<int>();	p20=000000158BC1D7A0, size=0, remain=0
> data2_t* p21 = std_allocator.template newObj<data2_t>();	p21=000000158BC18F60, size=0, remain=0
std_allocator.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> std_allocator.free(p1);	p1=000000158BC190B0, size=0, remain=0
> std_allocator.free(p2);	p2=000000158BC190D0, size=0, remain=0
> std_allocator.free(p3);	p3=000000158BC190F0, size=0, remain=0
> std_allocator.free(p4);	p4=000000158BC19110, size=0, remain=0
> std_allocator.free(p5);	p5=000000158BC18600, size=0, remain=0
> std_allocator.deleteObj(p6);	p6=000000158BC19130, size=0, remain=0
> std_allocator.deleteArray(p7, 3);	p7=000000158BC186C0, size=0, remain=0
> std_allocator.deleteObj(p8);	p8=000000158BC19150, size=0, remain=0
data_t::~data_t(): m_val=0
> std_allocator.deleteObj(p9);	p9=000000158BC18640, size=0, remain=0
> std_allocator.deleteObj(p10);	p10=000000158BC19170, size=0, remain=0
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=1869762652
data_t::~data_t(): m_val=-1950250912
> std_allocator.deleteArray(p11, 3);	p11=000000158BC18820, size=0, remain=0
> std_allocator.deleteArray(p12, 3);	p12=000000158BC1CF00, size=0, remain=0
> std_allocator.free(p13);	p13=000000158BC1CF20, size=0, remain=0
> std_allocator.free(p14);	p14=000000158BC1CF60, size=0, remain=0
> std_allocator.free(p15);	p15=000000158BC1CFA0, size=0, remain=0
> std_allocator.free(p16);	p16=000000158BC187E0, size=0, remain=0
> std_allocator.free(p17);	p17=000000158BC18FC0, size=0, remain=0
> std_allocator.free(p18);	p18=000000158BC1D780, size=0, remain=0
> std_allocator.free(p19);	p19=000000158BC18F00, size=0, remain=0
> std_allocator.free(p20);	p20=000000158BC1D7A0, size=0, remain=0
> std_allocator.free(p21);	p21=000000158BC18F60, size=0, remain=0
std_allocator.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------

----------------------------------------
stdAlignAllocator<lock_type> std_allocator;
----------------------------------------

std_allocator.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> void* p1 = std_allocator.alloc(1);	p1=000000158BC186E8, size=0, remain=0
> void* p2 = std_allocator.alloc(1, 1);	p2=000000158BC18568, size=0, remain=0
> void* p3 = std_allocator.alloc(1, 1);	p3=000000158BC18768, size=0, remain=0
> void* p4 = std_allocator.alloc(1);	p4=000000158BC18608, size=0, remain=0
> void* p5 = std_allocator.alloc(10, 32);	p5=000000158BC190C0, size=0, remain=0
> int* p6 = std_allocator.template newObj<int>();	p6=000000158BC187E8, size=0, remain=0
> double* p7 = std_allocator.template newArray<double>(3);	p7=000000158BC18FF8, size=0, remain=0
> int* p8 = std_allocator.template newObj<int>();	p8=000000158BC185A8, size=0, remain=0
data_t::data_t(): m_val=0
> data_t* p9 = std_allocator.template newObj<data_t>();	p9=000000158BC18F40, size=0, remain=0
> int* p10 = std_allocator.template newObj<int>();	p10=000000158BC187A8, size=0, remain=0
data_t::data_t(123): m_val=123
> data_t* p11 = std_allocator.template newObj<data_t>(123);	p11=000000158BC18E50, size=0, remain=0
> int* p12 = std_allocator.template newObj<int>();	p12=000000158BC18708, size=0, remain=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p13 = std_allocator.template newArray<data_t>(3);	p13=000000158BC19100, size=0, remain=0
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p14 = std_allocator.template newArray<data_t>(3, 456);	p14=000000158BC19150, size=0, remain=0
> void* p15 = std_allocator.alloc(2000);	p15=000000158BC1CF08, size=0, remain=0
> void* p16 = std_allocator.alloc(10);	p16=000000158BC18E18, size=0, remain=0
> data2_t* p17 = std_allocator.template newObj<data2_t>();	p17=000000158BC1D700, size=0, remain=0
> int* p18 = std_allocator.template newObj<int>();	p18=000000158BC18808, size=0, remain=0
> data2_t* p19 = std_allocator.template newObj<data2_t>();	p19=000000158BC1D760, size=0, remain=0
> int* p20 = std_allocator.template newObj<int>();	p20=000000158BC186A8, size=0, remain=0
> data2_t* p21 = std_allocator.template newObj<data2_t>();	p21=000000158BC1DBC0, size=0, remain=0
std_allocator.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> std_allocator.free(p1);	p1=000000158BC186E8, size=0, remain=0
> std_allocator.free(p2);	p2=000000158BC18568, size=0, remain=0
> std_allocator.free(p3);	p3=000000158BC18768, size=0, remain=0
> std_allocator.free(p4);	p4=000000158BC18608, size=0, remain=0
> std_allocator.free(p5);	p5=000000158BC190C0, size=0, remain=0
> std_allocator.deleteObj(p6);	p6=000000158BC187E8, size=0, remain=0
> std_allocator.deleteArray(p7, 3);	p7=000000158BC18FF8, size=0, remain=0
> std_allocator.deleteObj(p8);	p8=000000158BC185A8, size=0, remain=0
data_t::~data_t(): m_val=0
> std_allocator.deleteObj(p9);	p9=000000158BC18F40, size=0, remain=0
> std_allocator.deleteObj(p10);	p10=000000158BC187A8, size=0, remain=0
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=1868852841
data_t::~data_t(): m_val=1750299237
> std_allocator.deleteArray(p11, 3);	p11=000000158BC18E50, size=0, remain=0
> std_allocator.deleteArray(p12, 3);	p12=000000158BC18708, size=0, remain=0
> std_allocator.free(p13);	p13=000000158BC19100, size=0, remain=0
> std_allocator.free(p14);	p14=000000158BC19150, size=0, remain=0
> std_allocator.free(p15);	p15=000000158BC1CF08, size=0, remain=0
> std_allocator.free(p16);	p16=000000158BC18E18, size=0, remain=0
> std_allocator.free(p17);	p17=000000158BC1D700, size=0, remain=0
> std_allocator.free(p18);	p18=000000158BC18808, size=0, remain=0
> std_allocator.free(p19);	p19=000000158BC1D760, size=0, remain=0
> std_allocator.free(p20);	p20=000000158BC186A8, size=0, remain=0
> std_allocator.free(p21);	p21=000000158BC1DBC0, size=0, remain=0
std_allocator.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------

================================================================================

--------------------------------------------------
[ Test for polyAllocator with new/delete operator ]

> auto adapter = s_stackAllocator.adapter()
> polyAllocator poly_allocator(adapter);
poly_allocator: name="stackAllocator", mode="ManualClear"
stack:size=0,count=0, pool:size=0,pool=0
> data_t* p101 = new data_t;
data_t::data_t(): m_val=0
> data_t* p102 = new data_t[2];
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p103 = new data_t[3];
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
stack:size=128,count=3, pool:size=0,pool=0
***** BEGIN BLOCK *****
> auto nested_adapter = s_poolAllocator.adapter()
> polyAllocator nested_poly_allocator(nested_adapter);
nested_poly_allocator: name="poolAllocator", mode="-"
stack:size=128,count=3, pool:size=0,pool=0
> data_t* p201 = new data_t;
data_t::data_t(): m_val=0
> data_t* p202 = new data_t[2];
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p203 = new(std::nothrow) data_t[3];
stack:size=128,count=3, pool:size=96,pool=2
> delete p201;
data_t::~data_t(): m_val=0
> delete[] p202;
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> delete[] p203;
stack:size=128,count=3, pool:size=0,pool=0
***** END BLOCK *****
> data_t* p104 = new data_t;
data_t::data_t(): m_val=0
stack:size=144,count=4, pool:size=0,pool=0
> delete p101;
data_t::~data_t(): m_val=0
> delete[] p102;
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> delete[] p103;
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> delete p104;
data_t::~data_t(): m_val=0
----- Debug-info for scopedStackAllocator -----
maxSize=880, size=0, remain=880, count=0 (INIT: buff=00007FF7B095DA08, size=144, count=0)
-----------------------------------------------
data_t::data_t(): m_val=0
----- Debug-info for scopedStackAllocator -----
maxSize=880, size=16, remain=864, count=1 (INIT: buff=00007FF7B095DA08, size=144, count=0)
-----------------------------------------------
data_t::~data_t(): m_val=0
----- Debug-info for scopedStackAllocator -----
maxSize=880, size=16, remain=864, count=0 (INIT: buff=00007FF7B095DA08, size=144, count=0)
-----------------------------------------------
stack:size=144,count=0, pool:size=0,pool=0

--------------------------------------------------
[ Test for polyAllocator with STL ]

> smartStackAllocator_withBuff<2048> stack;
***** BEGIN BLOCK *****
> auto adapter = stack.adapter();
> polyAllocator poly(adapter);
> std::vector<data_t> array;
> data_t data;
data_t::data_t(): m_val=0
> array.push_back(data);
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF018, maxSize=2048, size=96, remain=1952, count=1
-----------------------------------------
***** END BLOCK *****
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.debugInfo(message, sizeof(message)); std::printf("%s\n", message);
----- Debug-info for stackAllocator -----
buff=000000158BACF018, maxSize=2048, size=0, remain=2048, count=0
-----------------------------------------

--------------------------------------------------
[ Test for polyAllocator with GASHA_NEW/GASHA_DELETE ]

> smartStackAllocator_withBuff<2048> stack;
> auto adapter = stack.adapter();
> polyAllocator poly(adapter);
> debugAllocationObserver observer;
> poly.setDebugObserver(observer);
> data_t* p1 = GASHA_NEW(data_t);
data_t::data_t(): m_val=0
> data_t* p2 = GASHA_NEW(data_t[2]);
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p3 = GASHA_NEW_ARRAY(data_t, 3);
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> GASHA_DELETE_ARRAY(p3);
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> GASHA_DELETE_ARRAY(p2);
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> GASHA_DELETE(p1);
data_t::~data_t(): m_val=0
> std::vector<data_t> array;
> data_t data;
data_t::data_t(): m_val=0
> array.push_back(data);
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
***** BEGIN BLOCK *****
> auto nested_adapter = s_poolAllocator.adapter()
> polyAllocator nested_poly_allocator(nested_adapter);
***** END BLOCK *****
> poly.resetDebugObserver();
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0

--------------------------------------------------
[ Test for polyAllocator adapters ]

> stackAllocator<> stack_allocator(buff);
> auto adapter = stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> lfStackAllocator<> lf_stack_allocator(buff);
> auto adapter = lf_stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = lf_stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> dualStackAllocator<> dual_stack_allocator(buff);
> auto adapter = dual_stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = dual_stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> lfDualStackAllocator<> lf_dual_stack_allocator(buff);
> auto adapter = lf_dual_stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = lf_dual_stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> monoAllocator<> mono_allocator(buff);
> auto adapter = mono_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> lfMonoAllocator lf_mono_allocator(buff);
> auto adapter = lf_mono_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> stdAllocator<> std_allocator;
> auto adapter = std_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> stdAlignAllocator<> std_align_allocator;
> auto adapter = std_align_allocator.adapter();
> polyAllocator poly_allocator(adapter);

================================================================================

--------------------------------------------------------------------------------
[ Test for performance of single thread ]
--------------------------------------------------------------------------------

------------------------------------------------------------
"smartStackAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.005000400	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.033002400	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.085025300	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"lfSmartStackAllocator" : 1000000 * times allocate & free
* elapsed time = 0.027999800	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<>::scopedAllocator" : 1000000 * times allocate & free
* elapsed time = 0.004979800	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"polyAllocator with smartStackAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.008001000	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartDualStackAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.005000900	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.034001900	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.086005000	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"lfSmartDualStackAllocator" : 1000000 * times allocate & free
* elapsed time = 0.034001600	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<>::scopedAllocator" : 1000000 * times allocate & free
* elapsed time = 0.005027600	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartDualStackAllocator<>::scopedDualAllocator" : 1000000 * times allocate & free
* elapsed time = 0.003973600	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"polyAllocator with smartDualStackAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.008017900	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"monoAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.002000600	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"monoAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.032004800	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"monoAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.081983700	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"lfMonoAllocator" : 1000000 * times allocate & free
* elapsed time = 0.021001300	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"polyAllocator with monoAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.005000300	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"poolAllocator<1024>" : 1000000 * times allocate & free
* elapsed time = 0.022001000	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"poolAllocator<1024, spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.037002800	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"poolAllocator<1024, std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.093005100	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"lfPoolAllocator<1024>" : 1000000 * times allocate & free
* elapsed time = 0.061003200	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"polyAllocator with poolAllocator<1024>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.017001200	maxSize=16384, size=0, remain=16384, pool=0/512

------------------------------------------------------------
"stdAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.048002800	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.063003000	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.093007700	maxSize=0, size=0, remain=0

------------------------------------------------------------
"polyAllocator with stdAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.052002800	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.051003200	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.064003500	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.090005600	maxSize=0, size=0, remain=0

------------------------------------------------------------
"polyAllocator with stdAlignAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.053002900	maxSize=0, size=0, remain=0

--------------------------------------------------------------------------------
[ Test for performance of multi threada ]
--------------------------------------------------------------------------------

------------------------------------------------------------
"smartStackAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.344020500	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.448025700	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"lfSmartStackAllocator" : 100000 * times allocate & free
* elapsed time = 0.293042200	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartDualStackAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.388999100	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.438027100	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"lfSmartDualStackAllocator" : 100000 * times allocate & free
* elapsed time = 0.289024100	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"monoAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.318011300	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"monoAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.386021000	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"lfMonoAllocator" : 100000 * times allocate & free
* elapsed time = 0.299037000	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"poolAllocator<1024, spinLock>" : 100000 * times allocate & free
* elapsed time = 0.356030900	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"poolAllocator<1024, std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.601007600	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"lfPoolAllocator<1024>" : 100000 * times allocate & free
* elapsed time = 0.303037300	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"stdAllocator<>" : 100000 * times allocate & free
* elapsed time = 0.288017900	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.317018700	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.387027700	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<>" : 100000 * times allocate & free
* elapsed time = 0.316995300	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.326038000	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.454006900	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<>" : 100000 * times allocate & free
* elapsed time = 0.301045800	maxSize=0, size=0, remain=0

================================================================================

--------------------------------------------------------------------------------
[ Examination for new/delete operators ]
--------------------------------------------------------------------------------
new st_n: sizeof(st_n)=1, alignof(st_n)=1, real_size=1
new st_n[2]: sizeof(st_n)=1, alignof(st_n)=1, real_size=6
new st_a1: sizeof(st_a1)=1, alignof(st_a1)=1, real_size=1
new st_a1[2]: sizeof(st_a1)=1, alignof(st_a1)=1, real_size=6
new st_a2: sizeof(st_a2)=2, alignof(st_a2)=2, real_size=2
new st_a2[2]: sizeof(st_a2)=2, alignof(st_a2)=2, real_size=8
new st_a4: sizeof(st_a4)=4, alignof(st_a4)=4, real_size=4
new st_a4[2]: sizeof(st_a4)=4, alignof(st_a4)=4, real_size=12
new st_a8: sizeof(st_a8)=8, alignof(st_a8)=8, real_size=8
new st_a8[2]: sizeof(st_a8)=8, alignof(st_a8)=8, real_size=24
new st_a16: sizeof(st_a16)=16, alignof(st_a16)=16, real_size=16
new st_a16[2]: sizeof(st_a16)=16, alignof(st_a16)=16, real_size=48
new st_a32: sizeof(st_a32)=32, alignof(st_a32)=32, real_size=32
new st_a32[2]: sizeof(st_a32)=32, alignof(st_a32)=32, real_size=80
new st_a64: sizeof(st_a64)=64, alignof(st_a64)=64, real_size=64
new st_a64[2]: sizeof(st_a64)=64, alignof(st_a64)=64, real_size=144
new st_a128: sizeof(st_a128)=128, alignof(st_a128)=128, real_size=128
new st_a128[2]: sizeof(st_a128)=128, alignof(st_a128)=128, real_size=272
- end -
