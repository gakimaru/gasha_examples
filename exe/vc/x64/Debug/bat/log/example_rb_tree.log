--- Make table ---
[ 5:1000] [10:1001] [ 4:1002] [ 1:1003] [ 4:1004] [10:1005] [ 8:1006] [ 4:1007] [ 8:1008] [ 4:1009] [ 2:1010] [ 7:1011] [ 7:1012] [10:1013] [ 9:1014] [ 7:1015] [ 7:1016] [ 9:1017] [ 5:1018] [ 4:1019] 
20 registered.
*elapsed_time=0.000000000 sec
--- Show tree (count=20) ---
depth_max=5 (limit for showing=4)
                      .----------------------{ 4:B}----------------------.                      
          .----------{ 4:B}----------.                    .----------{ 8:R}----------.          
         [ 1:B}----.             [ 4:B]             .----{ 7:B}----.        .----{10:B}----.    
               [ 2:R]                            .-{ 4:R}-.  .-{ 7:R}-.  .-{ 9:R}-.    [10:B}-. 
                                                [ 4:B][ 5:B}[ 7:B][ 7:B][ 8:B][ 9:B]      [10:R]
*elapsed_time=0.000000000 sec
--- Show nodes count (count=20) ---
depth_max=5, width_max=32
    0:[ 1] blacks=3, reds=0, total=3 (illegal=0)
    4:[ 2] blacks=3, reds=1, total=4 (illegal=0)
    8:[ 4] blacks=3, reds=0, total=3 (illegal=0)
   16:[ 4] blacks=3, reds=2, total=5 (illegal=0)
   18:[ 5] blacks=3, reds=2, total=5 (illegal=0)
   19:[ 5] blacks=3, reds=3, total=6 (illegal=0)
   20:[ 7] blacks=3, reds=2, total=5 (illegal=0)
   22:[ 7] blacks=3, reds=2, total=5 (illegal=0)
   24:[ 8] blacks=3, reds=2, total=5 (illegal=0)
   26:[ 9] blacks=3, reds=2, total=5 (illegal=0)
   28:[10] blacks=3, reds=1, total=4 (illegal=0)
   30:[10] blacks=3, reds=2, total=5 (illegal=0)
max: blacks=3, reds=3, total=6
min: blacks=3, reds=0, total=3
diff:blacks=0, reds=3, total=3 (illegal=0)
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=20) ---
[ 1:1003] [ 2:1010] [ 4:1002] [ 4:1004] [ 4:1007] [ 4:1009] [ 4:1019] [ 5:1000] [ 5:1018] [ 7:1011] [ 7:1012] [ 7:1015] [ 7:1016] [ 8:1006] [ 8:1008] [ 9:1014] [ 9:1017] [10:1001] [10:1005] [10:1013] 
*elapsed_time=0.000000000 sec
--- Show nodes descending (count=20) ---
[10:1013] [10:1005] [10:1001] [ 9:1017] [ 9:1014] [ 8:1008] [ 8:1006] [ 7:1016] [ 7:1015] [ 7:1012] [ 7:1011] [ 5:1018] [ 5:1000] [ 4:1019] [ 4:1009] [ 4:1007] [ 4:1004] [ 4:1002] [ 2:1010] [ 1:1003] 
*elapsed_time=0.000000000 sec

--------------------[iterator operattion:begin]
[constructor]
constructor
ite:key=1, value=1003
rite:key=10, value=1013
ite2_end:key=1, value=1003
rite2_end:key=10, value=1013
ite_end - ite = 20
ite - ite_end = -20
rite_end - rite = 20
rite - rite_end = -20
ite2 - ite = 20
ite - ite2 = -20
rite2 - rite = 20
rite - rite2 = -20
[copy operator]
ite:key=1, value=1003
rite:key=10, value=1013
ite2_end:key=1, value=1003
rite2_end:key=10, value=1013
[rite.base()]
ite2_end: key=1, value=1003
[++ite,--ie_end]
ite:key=2, value=1010
rite:key=10, value=1005
ite_end:key=10, value=1013
rite_end:key=1, value=1003
[--ite,++ite_end]
ite:key=1, value=1003
rite:key=10, value=1013
[ite[0]]
ite:key=1, value=1003
rite:key=10, value=1013
[ite[1]]
ite:key=2, value=1010
rite:key=10, value=1005
[ite[2]]
ite:key=4, value=1004
rite:key=9, value=1017
[ite+=3]
ite:key=4, value=1019
rite:key=8, value=1006
[ite-=3]
ite:key=4, value=1004
rite:key=9, value=1017
ite_end - ite = 17
ite - ite_end = -17
rite_end - rite = 17
rite - rite_end = -17
[ite2-=2]
ite2 - ite = 15
ite - ite2 = -15
rite2 - rite = 15
rite - rite2 = -15
[++ite_end]
ite_end - ite = 0
ite - ite_end = 0
rite_end - rite = 0
rite - rite_end = 0
--------------------[iterator operattion:end]
--------------------[lock operation:begin]
.lockScoped() ... OK
.lockSharedScoped() ... OK
.lockUnique() ... OK
.lockUnique(with_lock) ... OK
.lockUnique(with_lock_shared) ... OK
.lockUnique(try_lock) ... OK
.lockUnique(try_lock_shared) ... OK
.lockUnique(adopt_lock) ... OK
.lockUnique(adopt_shared_lock) ... OK
.lockUnique(defer_lock) ... OK
--------------------[lock operation:end]
--- Search each key nodes ---
 1(1):[ 1] 
 2(1):[ 2] 
 4(5):[ 4] [ 4] [ 4] [ 4] [ 4] 
 5(2):[ 5] [ 5] 
 7(4):[ 7] [ 7] [ 7] [ 7] 
 8(2):[ 8] [ 8] 
 9(2):[ 9] [ 9] 
10(3):[10] [10] [10] 
*elapsed_time=0.000499800 sec
--- Search each nearest key nodes for smaller ---
 3:[ 2] [ 4] [ 4] [ 4] 
 6:[ 5] [ 7] [ 7] [ 7] 
*elapsed_time=0.000000000 sec
--- Search each nearest key nodes for larger ---
 3:[ 4] [ 4] [ 4] [ 4] 
 6:[ 7] [ 7] [ 7] [ 7] 
*elapsed_time=0.000000000 sec
--- Remove nodes ---
[10] [ 5] [ 9] [ 4] [ 4] 5 removed.
*elapsed_time=0.000000000 sec
--- Show tree (count=15) ---
depth_max=4 (limit for showing=4)
                      .----------------------{ 8:B}----------------------.                      
          .----------{ 4:R}----------.                    .----------{ 9:B}----------.          
    .----{ 4:B}----.        .----{ 7:B}----.             [ 8:B]                  [10:B}----.    
 .-{ 2:B]      [ 4:B]      [ 5:B]    .-{ 7:R}-.                                        [10:R]   
[ 1:R]                              [ 7:B][ 7:B]                                                
*elapsed_time=0.000000000 sec
--- Show nodes count (count=15) ---
depth_max=4, width_max=16
    0:[ 1] blacks=3, reds=2, total=5 (illegal=0)
    1:[ 2] blacks=3, reds=1, total=4 (illegal=0)
    2:[ 4] blacks=3, reds=1, total=4 (illegal=0)
    4:[ 5] blacks=3, reds=1, total=4 (illegal=0)
    6:[ 7] blacks=3, reds=2, total=5 (illegal=0)
    7:[ 7] blacks=3, reds=2, total=5 (illegal=0)
    8:[ 8] blacks=3, reds=0, total=3 (illegal=0)
   12:[10] blacks=3, reds=0, total=3 (illegal=0)
   14:[10] blacks=3, reds=1, total=4 (illegal=0)
max: blacks=3, reds=2, total=5
min: blacks=3, reds=0, total=3
diff:blacks=0, reds=2, total=2 (illegal=0)
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=15) ---
[ 1:1003] [ 2:1010] [ 4:1007] [ 4:1009] [ 4:1019] [ 5:1018] [ 7:1011] [ 7:1012] [ 7:1015] [ 7:1016] [ 8:1006] [ 8:1008] [ 9:1017] [10:1005] [10:1013] 
*elapsed_time=0.000000000 sec
--- Remove each key nodes ---
[ 1] [ 2] [ 4] [ 5] [ 7] [ 8] [ 9] [10] 8 removed.
*elapsed_time=0.000000000 sec
--- Show tree (count=7) ---
depth_max=3 (limit for showing=4)
          .----------{ 7:B}----------.          
    .----{ 7:R}----.             [ 8:B}----.    
 .-{ 4:B]      [ 7:B]                  [10:R]   
[ 4:R]                                          
*elapsed_time=0.000000000 sec
--- Show nodes count (count=7) ---
depth_max=3, width_max=8
    0:[ 4] blacks=2, reds=2, total=4 (illegal=0)
    1:[ 4] blacks=2, reds=1, total=3 (illegal=0)
    2:[ 7] blacks=2, reds=1, total=3 (illegal=0)
    4:[ 8] blacks=2, reds=0, total=2 (illegal=0)
    6:[10] blacks=2, reds=1, total=3 (illegal=0)
max: blacks=2, reds=2, total=4
min: blacks=2, reds=0, total=2
diff:blacks=0, reds=2, total=2 (illegal=0)
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=7) ---
[ 4:1009] [ 4:1019] [ 7:1012] [ 7:1015] [ 7:1016] [ 8:1008] [10:1013] 
*elapsed_time=0.000000000 sec
--- Remove all nodes ---
[ 4] [ 4] [ 7] [ 7] [ 7] [ 8] [10] 7 removed.
*elapsed_time=0.000000000 sec
--- Show tree (count=0) ---
depth_max=-1 (limit for showing=4)
*elapsed_time=0.000000000 sec
--- Show nodes count (count=0) ---
depth_max=-1, width_max=0
max: blacks=0, reds=0, total=0
min: blacks=0, reds=0, total=0
diff:blacks=0, reds=0, total=0 (illegal=0)
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=0) ---
(nothing)
*elapsed_time=0.000000000 sec
--- end ---
*elapsed_time=0.000499800 sec

--- example_simple_linked_list ---
data = {0xc02b79a5,15} {0xe68a9e4d,13} {0x07b1eeba,11}
.findValue("KEY5"): ite={0xc02b79a5, 15}
data = {0xc02b79a5,{5,6}} {0xe68a9e4d,{3,4}} {0x07b1eeba,{1,2}}
.findValue("KEY5"): ite={0xc02b79a5,{5:6}}
