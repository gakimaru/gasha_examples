
================================================================================

Compiler: name="VC++", Ver=[1800(0x00000708).0(0x00000000)]
    This compiler is "Visual C++"

Compiler-language: C++ (C++ Ver.=2003)
    C++ is available.
        C++ is implemented C++98.
        C++ is implemented C++03.

Plataform: "Win"(x86 32bits, little-endian), Ver=[0(0x00000000).0(0x00000000)]
    Target plarform is "Windows"

__FILE__="..\..\src\example_build_settings\example_build_settings.cpp"
__LINE__=138
__FUNCTION__="example_build_settings::test::func"
__PRETTY_FUNCTION__="void __cdecl example_build_settings::test::func(void)"
__FUNCSIG__="void __cdecl example_build_settings::test::func(void)"
__func__="example_build_settings::test::func"
__FUNCDNAME__="?func@test@?1??example_build_settings@@YAXXZ@SAXXZ"
__DATE__="Aug 11 2014"
__TIME__="01:02:31"
__TIMESTAMP__="Mon Jul 28 23:18:46 2014"

GASHA_FUNC_NAME()="example_build_settings::test::func"
GASHA_SRC_FILE_LINE()="example_build_settings.cpp(149)"
GASHA_SRC_FILE_LINE_TIME()="example_build_settings.cpp(150)[Mon Jul 28 23:18:46 2014]"
This is normal func.
This is inline func.
This is noinline func.
This is always inline func.

nullptr_var=00000000
    'nullptr' is featured.

This is override func.
    'override' is featured.

constexpr_var=6
constexpr_calc(1, 2)=3

TLS Variable=123

==============================================================================
Diagnostic Mode: Library
==============================================================================

------------------------------------------------------------------------------
[ GASHA version : 2.0 ]

------------------------------------------------------------------------------
[ Build-settings diagnostic test ]

[ENABLED] Poly-allocator(override on standard new/delete operator) is AVAILABLE.
[--] Debugger-break-point is NOT available.
[--] Debug-log is NOT enabled.
[OK] TLS initializer is COMPLETE.
[OK] `stdin` is AVAILABLE.
cpu_string="Genunteline"
[OK] 'SSE' is SUPPORTED.
[OK] 'SSE2' is SUPPORTED.
[OK] 'SSE3' is SUPPORTED.
[--] 'SSE4a' is not used.
[OK] 'SSE4.1' is SUPPORTED.
[OK] 'SSE4.2' is SUPPORTED.
[OK] 'POPCNT' is SUPPORTED.
[--] 'AES' is not used.
[OK] 'AVX' is SUPPORTED.
[--] 'AVX2' is not used.

------------------------------------------------------------------------------
[ Compiler specification ]

Platform: Win (Target Versionn=0.0)
CPU Architecture: x86 (32 bit, little endian) [x86]

Compiler: VC++ (Version=1800.0) ... Visual C++ 12.0 (Visual Studio 2013)
Language: C++ (__cplusplus=199711) [C++98] [C++03]

[Yes]       `nullptr` is AVAILABLE.
[Yes]       `override` is AVAILABLE.
[Yes]       `final` is AVAILABLE.
[Yes]       `auto` is AVAILABLE.
[Yes]       `decltype()` is AVAILABLE.
[Yes]       `default` & `delete` is AVAILABLE.
[Dummy]     `constexpr` is available.
[No]        'User-defined-literal' is NOT available.
[Yes]       'Lambda-expression' is AVAILABLE.
[Yes]       'Range-based `for`' is AVAILABLE.
[Yes]       '`enum` class' is AVAILABLE.
[Yes]       'Variadic-template' is AVAILABLE.
[Yes]       'Template-aliases' is AVAILABLE.
[Yes]       'Delegating-constructors' is AVAILABLE.
[No]        'Inheriting-constructors' is NOT available.
[Yes]       'Uniform-initializer' is AVAILABLE.
[Yes]       'Initializer-list' is AVAILABLE.
[Yes]       'Rvalue-reference' & 'std::move' is AVAILABLE.
[Yes]       `static_assert()` is AVAILABLE.
[Camouflage]`thread_local` is available.
[No]        `noexcept` is NOT available. -> [Camouflage]`GASHA_NOEXCEPT` is AVAILABLE.
[Camouflage]`alignas()` is available.
            liomit of `alignas()` = 128
[Camouflage]`alignof()` is available.
[No]        `alignas(alignof())` is NOT available. -> [No] `GASHA_ALIGNAS_OF()` is NOT available.

[Yes]       `_aligned_malloc()`(VC++ style) is AVAILABLE.
[Yes]       `_aligned_free()`(VC++ style) is AVAILABLE.
[No]        `mallinfo()`(GCC style) is available.
[No]        `__attribute__((constructor))`(GCC style) is AVAILABLE.
[No]        `__attribute__((constructor(PRIORITY)))`(GCC style) is AVAILABLE.
[No]        `__attribute__((destructor))`(GCC style) is AVAILABLE.
[No]        `__attribute__((destructor(PRIORITY)))`(GCC style) is AVAILABLE.
[No]        `__attribute__((init_priority(PRIORITY)))`(GCC style) is AVAILABLE.
[Yes]       `__cpuid()`,_`xgetbv()`,`_XCR_XFEATURE_ENABLED_MASK`(VC++ style) is AVAILABLE.
[Camouflage]`GASHA_NOINLINE` is available.
[Camouflage]`GASHA_ALWAYS_INLINE` is available.

[Yes]       `__FILE__` is AVAILABLE. (ex. __FILE__ = "E:\Work\GitHub\gasha_examples\sub\gasha\include\gasha/build_settings/build_settings_diag.inl")
[Yes]       `__LINE__` is AVAILABLE. (ex. __LINE__ = 637)
[Yes]       `__DATE__` is AVAILABLE. (ex. __DATE__ = "Aug 11 2014")
[Yes]       `__TIME__` is AVAILABLE. (ex. __TIME__ = "01:01:07")
[Yes]       `__TIMESTAMP__` is AVAILABLE. (ex. __TIMESTAMP__ = "Mon Aug 11 01:00:39 2014")
[Yes]       `__FUNCTION__` is AVAILABLE. (ex. __FUNCTION__ = "gasha::buildSettingsDiagnosticTest")
[Camouflage]`__PRETTY_FUNCTION__`(GCC Style) is available. (ex. __PRETTY_FUNCTION__ = "bool __cdecl gasha::buildSettingsDiagnosticTest<struct gasha::diagForLibrary_internal_t>(char *,const unsigned int,unsigned int &,const struct gasha::diagForLibrary_internal_t)")
[Camouflage]`__func__`(GCC Style) is available. (ex. __func__ = "gasha::buildSettingsDiagnosticTest")
[Yes]       `__FUNCSIG__`(VC++ Style) is AVAILABLE. (ex. __FUNCSIG__ = "bool __cdecl gasha::buildSettingsDiagnosticTest<struct gasha::diagForLibrary_internal_t>(char *,const unsigned int,unsigned int &,const struct gasha::diagForLibrary_internal_t)")
[Yes]       `__FUNCDNAME__`(VC++ Style) is AVAILABLE. (ex. __FUNCDNAME__ = "??$buildSettingsDiagnosticTest@UdiagForLibrary_internal_t@gasha@@@gasha@@YA_NPADIAAIUdiagForLibrary_internal_t@0@@Z")

[Yes]       `GASHA_FUNC_NAME()` is AVAILABLE. (ex. GASHA_FUNC_NAME() = "gasha::buildSettingsDiagnosticTest")
[Yes]       `GASHA_SRC_FILE()` is AVAILABLE. (ex. GASHA_SRC_FILE() = "build_settings_diag.inl")
[Yes]       `GASHA_SRC_FILE_LINE()` is AVAILABLE. (ex. GASHA_SRC_FILE_LINE() = "build_settings_diag.inl(778)")
[Yes]       `GASHA_SRC_FILE_LINE_TIME()` is AVAILABLE. (ex. GASHA_SRC_FILE_LINE_TIME() = "build_settings_diag.inl(779)[Mon Aug 11 01:00:39 2014]")

------------------------------------------------------------------------------
[ Build-configuratoin ]

Configuration name: RELEASE

[No]  'Debug-feature' is NOT available.
[No]  'Assertion' is DISABLED.
[Yes] 'Optimize' is MAX.
[---] 'File-sytem' is for ROM.
[[No] 'Unit-test' is NOT available.
[No]  'Symbols' are STRIPPED.

------------------------------------------------------------------------------
message size = 5347 bytes.

==============================================================================
Diagnostic Mode: Current
==============================================================================

------------------------------------------------------------------------------
[ GASHA version : 2.0 ]

------------------------------------------------------------------------------
[ Build-settings diagnostic test ]

[ENABLED] Poly-allocator(override on standard new/delete operator) is AVAILABLE.
[--] Debugger-break-point is NOT available.
[--] Debug-log is NOT enabled.
[OK] TLS initializer is COMPLETE.
[OK] `stdin` is AVAILABLE.
cpu_string="Genunteline"
[OK] 'SSE' is SUPPORTED.
[OK] 'SSE2' is SUPPORTED.
[OK] 'SSE3' is SUPPORTED.
[--] 'SSE4a' is not used.
[OK] 'SSE4.1' is SUPPORTED.
[OK] 'SSE4.2' is SUPPORTED.
[OK] 'POPCNT' is SUPPORTED.
[--] 'AES' is not used.
[OK] 'AVX' is SUPPORTED.
[--] 'AVX2' is not used.

------------------------------------------------------------------------------
[ Compiler specification ]

Platform: Win (Target Versionn=0.0)
CPU Architecture: x86 (32 bit, little endian) [x86]

Compiler: VC++ (Version=1800.0) ... Visual C++ 12.0 (Visual Studio 2013)
Language: C++ (__cplusplus=199711) [C++98] [C++03]

[Yes]       `nullptr` is AVAILABLE.
[Yes]       `override` is AVAILABLE.
[Yes]       `final` is AVAILABLE.
[Yes]       `auto` is AVAILABLE.
[Yes]       `decltype()` is AVAILABLE.
[Yes]       `default` & `delete` is AVAILABLE.
[Dummy]     `constexpr` is available.
[No]        'User-defined-literal' is NOT available.
[Yes]       'Lambda-expression' is AVAILABLE.
[Yes]       'Range-based `for`' is AVAILABLE.
[Yes]       '`enum` class' is AVAILABLE.
[Yes]       'Variadic-template' is AVAILABLE.
[Yes]       'Template-aliases' is AVAILABLE.
[Yes]       'Delegating-constructors' is AVAILABLE.
[No]        'Inheriting-constructors' is NOT available.
[Yes]       'Uniform-initializer' is AVAILABLE.
[Yes]       'Initializer-list' is AVAILABLE.
[Yes]       'Rvalue-reference' & 'std::move' is AVAILABLE.
[Yes]       `static_assert()` is AVAILABLE.
[Camouflage]`thread_local` is available.
[No]        `noexcept` is NOT available. -> [Camouflage]`GASHA_NOEXCEPT` is AVAILABLE.
[Camouflage]`alignas()` is available.
            liomit of `alignas()` = 128
[Camouflage]`alignof()` is available.
[No]        `alignas(alignof())` is NOT available. -> [No] `GASHA_ALIGNAS_OF()` is NOT available.

[Yes]       `_aligned_malloc()`(VC++ style) is AVAILABLE.
[Yes]       `_aligned_free()`(VC++ style) is AVAILABLE.
[No]        `mallinfo()`(GCC style) is available.
[No]        `__attribute__((constructor))`(GCC style) is AVAILABLE.
[No]        `__attribute__((constructor(PRIORITY)))`(GCC style) is AVAILABLE.
[No]        `__attribute__((destructor))`(GCC style) is AVAILABLE.
[No]        `__attribute__((destructor(PRIORITY)))`(GCC style) is AVAILABLE.
[No]        `__attribute__((init_priority(PRIORITY)))`(GCC style) is AVAILABLE.
[Yes]       `__cpuid()`,_`xgetbv()`,`_XCR_XFEATURE_ENABLED_MASK`(VC++ style) is AVAILABLE.
[Camouflage]`GASHA_NOINLINE` is available.
[Camouflage]`GASHA_ALWAYS_INLINE` is available.

[Yes]       `__FILE__` is AVAILABLE. (ex. __FILE__ = "E:\Work\GitHub\gasha_examples\sub\gasha\include\gasha/build_settings/build_settings_diag.inl")
[Yes]       `__LINE__` is AVAILABLE. (ex. __LINE__ = 637)
[Yes]       `__DATE__` is AVAILABLE. (ex. __DATE__ = "Aug 11 2014")
[Yes]       `__TIME__` is AVAILABLE. (ex. __TIME__ = "01:02:31")
[Yes]       `__TIMESTAMP__` is AVAILABLE. (ex. __TIMESTAMP__ = "Mon Aug 11 01:00:39 2014")
[Yes]       `__FUNCTION__` is AVAILABLE. (ex. __FUNCTION__ = "gasha::buildSettingsDiagnosticTest")
[Camouflage]`__PRETTY_FUNCTION__`(GCC Style) is available. (ex. __PRETTY_FUNCTION__ = "bool __cdecl gasha::buildSettingsDiagnosticTest<struct gasha::diagForProject_t>(char *,const unsigned int,unsigned int &,const struct gasha::diagForProject_t)")
[Camouflage]`__func__`(GCC Style) is available. (ex. __func__ = "gasha::buildSettingsDiagnosticTest")
[Yes]       `__FUNCSIG__`(VC++ Style) is AVAILABLE. (ex. __FUNCSIG__ = "bool __cdecl gasha::buildSettingsDiagnosticTest<struct gasha::diagForProject_t>(char *,const unsigned int,unsigned int &,const struct gasha::diagForProject_t)")
[Yes]       `__FUNCDNAME__`(VC++ Style) is AVAILABLE. (ex. __FUNCDNAME__ = "??$buildSettingsDiagnosticTest@UdiagForProject_t@gasha@@@gasha@@YA_NPADIAAIUdiagForProject_t@0@@Z")

[Yes]       `GASHA_FUNC_NAME()` is AVAILABLE. (ex. GASHA_FUNC_NAME() = "gasha::buildSettingsDiagnosticTest")
[Yes]       `GASHA_SRC_FILE()` is AVAILABLE. (ex. GASHA_SRC_FILE() = "build_settings_diag.inl")
[Yes]       `GASHA_SRC_FILE_LINE()` is AVAILABLE. (ex. GASHA_SRC_FILE_LINE() = "build_settings_diag.inl(778)")
[Yes]       `GASHA_SRC_FILE_LINE_TIME()` is AVAILABLE. (ex. GASHA_SRC_FILE_LINE_TIME() = "build_settings_diag.inl(779)[Mon Aug 11 01:00:39 2014]")

------------------------------------------------------------------------------
[ Build-configuratoin ]

Configuration name: RELEASE

[No]  'Debug-feature' is NOT available.
[No]  'Assertion' is DISABLED.
[Yes] 'Optimize' is MAX.
[---] 'File-sytem' is for ROM.
[[No] 'Unit-test' is NOT available.
[No]  'Symbols' are STRIPPED.

------------------------------------------------------------------------------
message size = 5293 bytes.

- End -
