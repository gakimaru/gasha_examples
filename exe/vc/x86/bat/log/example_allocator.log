
================================================================================

--------------------------------------------------------------------------------
[ Test for stackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
stackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=218, remain=806, count=13
-----------------------------------------
> stack.clear();	size=0, remain=1024, count=0
> stack.free(p1);	p1=0079F120, size=0, remain=1024, count=0
> stack.free(p2);	p2=0079F121, size=0, remain=1024, count=0
> stack.free(p3);	p3=0079F122, size=0, remain=1024, count=0
> stack.free(p4);	p4=0079F124, size=0, remain=1024, count=0
> stack.free(p5);	p5=0079F140, size=0, remain=1024, count=0
> stack.deleteObj(p6);	p6=0079F14C, size=0, remain=1024, count=0
> stack.deleteArray(p7, 3);	p7=0079F150, size=0, remain=1024, count=0
> stack.deleteObj(p8);	p8=0079F168, size=0, remain=1024, count=0
> stack.deleteObj(p9);	p9=0079F170, size=0, remain=1024, count=0
> stack.deleteObj(p10);	p10=0079F180, size=0, remain=1024, count=0
> stack.deleteArray(p11, 3);	p11=0079F190, size=0, remain=1024, count=0
> stack.deleteArray(p12, 3);	p12=0079F1C0, size=0, remain=1024, count=0
> stack.free(p13);	p13=00000000, size=0, remain=1024, count=0
> stack.free(p14);	p14=0079F1F0, size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p100 = stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
> void* p101 = stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
> void* p102 = stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
> stack.rewind(100);	size=62, remain=962, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=12, remain=1012, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
smartStackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=218, remain=806, count=13
-----------------------------------------
> stack.clear();	size=0, remain=1024, count=0
> stack.free(p1);	p1=0079F120, size=0, remain=1024, count=0
> stack.free(p2);	p2=0079F121, size=0, remain=1024, count=0
> stack.free(p3);	p3=0079F122, size=0, remain=1024, count=0
> stack.free(p4);	p4=0079F124, size=0, remain=1024, count=0
> stack.free(p5);	p5=0079F140, size=0, remain=1024, count=0
> stack.deleteObj(p6);	p6=0079F14C, size=0, remain=1024, count=0
> stack.deleteArray(p7, 3);	p7=0079F150, size=0, remain=1024, count=0
> stack.deleteObj(p8);	p8=0079F168, size=0, remain=1024, count=0
> stack.deleteObj(p9);	p9=0079F170, size=0, remain=1024, count=0
> stack.deleteObj(p10);	p10=0079F180, size=0, remain=1024, count=0
> stack.deleteArray(p11, 3);	p11=0079F190, size=0, remain=1024, count=0
> stack.deleteArray(p12, 3);	p12=0079F1C0, size=0, remain=1024, count=0
> stack.free(p13);	p13=00000000, size=0, remain=1024, count=0
> stack.free(p14);	p14=0079F1F0, size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
> void* p100 = stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
> void* p101 = stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
> void* p102 = stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
> stack.rewind(100);	size=62, remain=962, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=12, remain=1012, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
stackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079CFB4, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
smartStackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079D3CC, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
stackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079E834, maxSize=1032, size=0, remain=1032, count=0
-----------------------------------------
> long long* p = stack.newDefault();	p=0079E838, size=12, remain=1020, count=1
> stack.deleteDefault(p);	p=0079E838, size=12, remain=1020, count=0

----------------------------------------
smartStackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079EC54, maxSize=1032, size=0, remain=1032, count=0
-----------------------------------------
> long long* p = stack.newDefault();	p=0079EC58, size=12, remain=1020, count=1
> stack.deleteDefault(p);	p=0079EC58, size=0, remain=1032, count=0

--------------------------------------------------------------------------------
[ Test for lfStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
lfStackAllocator<> stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=218, remain=806, count=13
-------------------------------------------
> stack.clear();	size=0, remain=1024, count=0
> stack.free(p1);	p1=0079F120, size=0, remain=1024, count=0
> stack.free(p2);	p2=0079F121, size=0, remain=1024, count=0
> stack.free(p3);	p3=0079F122, size=0, remain=1024, count=0
> stack.free(p4);	p4=0079F124, size=0, remain=1024, count=0
> stack.free(p5);	p5=0079F140, size=0, remain=1024, count=0
> stack.deleteObj(p6);	p6=0079F14C, size=0, remain=1024, count=0
> stack.deleteArray(p7, 3);	p7=0079F150, size=0, remain=1024, count=0
> stack.deleteObj(p8);	p8=0079F168, size=0, remain=1024, count=0
> stack.deleteObj(p9);	p9=0079F170, size=0, remain=1024, count=0
> stack.deleteObj(p10);	p10=0079F180, size=0, remain=1024, count=0
> stack.deleteArray(p11, 3);	p11=0079F190, size=0, remain=1024, count=0
> stack.deleteArray(p12, 3);	p12=0079F1C0, size=0, remain=1024, count=0
> stack.free(p13);	p13=00000000, size=0, remain=1024, count=0
> stack.free(p14);	p14=0079F1F0, size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p100 = stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
> void* p101 = stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
> void* p102 = stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
> stack.rewind(100);	size=62, remain=962, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=12, remain=1012, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfSmartStackAllocator stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
> void* p2 = stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
> void* p3 = stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
> void* p4 = stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
> void* p5 = stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
> int* p6 = stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
> double* p7 = stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
> int* p8 = stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
> void* p13 = stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
> void* p14 = stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=218, remain=806, count=13
-------------------------------------------
> stack.clear();	size=0, remain=1024, count=0
> stack.free(p1);	p1=0079F120, size=0, remain=1024, count=0
> stack.free(p2);	p2=0079F121, size=0, remain=1024, count=0
> stack.free(p3);	p3=0079F122, size=0, remain=1024, count=0
> stack.free(p4);	p4=0079F124, size=0, remain=1024, count=0
> stack.free(p5);	p5=0079F140, size=0, remain=1024, count=0
> stack.deleteObj(p6);	p6=0079F14C, size=0, remain=1024, count=0
> stack.deleteArray(p7, 3);	p7=0079F150, size=0, remain=1024, count=0
> stack.deleteObj(p8);	p8=0079F168, size=0, remain=1024, count=0
> stack.deleteObj(p9);	p9=0079F170, size=0, remain=1024, count=0
> stack.deleteObj(p10);	p10=0079F180, size=0, remain=1024, count=0
> stack.deleteArray(p11, 3);	p11=0079F190, size=0, remain=1024, count=0
> stack.deleteArray(p12, 3);	p12=0079F1C0, size=0, remain=1024, count=0
> stack.free(p13);	p13=00000000, size=0, remain=1024, count=0
> stack.free(p14);	p14=0079F1F0, size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
> void* p100 = stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
> void* p101 = stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
> void* p102 = stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
> stack.rewind(100);	size=62, remain=962, count=3
> stack.rewind(20);	size=20, remain=1004, count=3
> stack.rewind(p101);	size=12, remain=1012, count=3
> stack.clear();	size=0, remain=1024, count=0
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfStackAllocator_withBuff<1024> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079DBF0, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfSmartStackAllocator_withBuff<1024> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079D7E0, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfStackAllocator_withType<long long, 128> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079E418, maxSize=1032, size=0, remain=1032, count=0
-------------------------------------------
> long long* p = stack.newDefault();	p=0079E418, size=8, remain=1024, count=1
> stack.deleteDefault(p);	p=0079E418, size=8, remain=1024, count=0

----------------------------------------
lfSmartStackAllocator_withType<long long, 128> stack;
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079E000, maxSize=1032, size=0, remain=1032, count=0
-------------------------------------------
> long long* p = stack.newDefault();	p=0079E000, size=8, remain=1024, count=1
> stack.deleteDefault(p);	p=0079E000, size=0, remain=1032, count=0

--------------------------------------------------------------------------------
[ Test for scoepdStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
stackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=0079F120, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F184, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F185, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F186, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F188, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F1A0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F1AC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F1B0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F1C8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F1D0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F1E0, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F1F0, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F220, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F250, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F184, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=0079F185, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=0079F186, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=0079F188, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=0079F1A0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F1AC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F1B0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F1C8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F1D0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F1E0, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F1F0, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F220, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=0079F250, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F184, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F190, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F1A4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F184, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F1A4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=100, remain=924, count=1
-----------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F120, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=0079F121, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=0079F122, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=0079F124, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=0079F140, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F14C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F150, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F168, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F170, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F180, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F190, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F1C0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=0079F1F0, size=218, remain=806, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F120, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F140, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
smartStackAllocator<lock_type> stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=0079F120, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F184, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F185, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F186, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F188, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F1A0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F1AC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F1B0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F1C8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F1D0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F1E0, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F1F0, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F220, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F250, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F184, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=0079F185, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=0079F186, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=0079F188, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=0079F1A0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F1AC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F1B0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F1C8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F1D0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F1E0, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F1F0, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F220, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=0079F250, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F184, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F190, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F1A4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F184, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F1A4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=100, remain=924, count=1
-----------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F120, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=0079F121, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=0079F122, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=0079F124, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=0079F140, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F14C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F150, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F168, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F170, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F180, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F190, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F1C0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=0079F1F0, size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F120, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F140, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-----------------------------------------

----------------------------------------
lfStackAllocator<> stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=0079F120, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F184, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F185, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F186, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F188, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F1A0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F1AC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F1B0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F1C8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F1D0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F1E0, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F1F0, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F220, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F250, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F184, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=0079F185, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=0079F186, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=0079F188, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=0079F1A0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F1AC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F1B0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F1C8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F1D0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F1E0, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F1F0, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F220, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=0079F250, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F184, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F190, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F1A4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F184, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F1A4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=100, remain=924, count=1
-------------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F120, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=0079F121, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=0079F122, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=0079F124, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=0079F140, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F14C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F150, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F168, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F170, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F180, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F190, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F1C0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=0079F1F0, size=218, remain=806, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F120, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F140, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

----------------------------------------
lfSmartStackAllocator stack(buff);
----------------------------------------

stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=0079F120, size=100, remain=924, count=1
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F184, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F185, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F186, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F188, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F1A0, size=38, remain=886, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F1AC, size=44, remain=880, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F1B0, size=68, remain=856, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F1C8, size=72, remain=852, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F1D0, size=92, remain=832, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F1E0, size=108, remain=816, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F1F0, size=156, remain=768, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F220, size=204, remain=720, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=204, remain=720, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F250, size=214, remain=710, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=13 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F184, size=214, remain=710, count=12
>	 scoped_stack.free(p2);	p2=0079F185, size=214, remain=710, count=11
>	 scoped_stack.free(p3);	p3=0079F186, size=214, remain=710, count=10
>	 scoped_stack.free(p4);	p4=0079F188, size=214, remain=710, count=9
>	 scoped_stack.free(p5);	p5=0079F1A0, size=214, remain=710, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F1AC, size=214, remain=710, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F1B0, size=214, remain=710, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F1C8, size=214, remain=710, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F1D0, size=214, remain=710, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F1E0, size=214, remain=710, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F1F0, size=214, remain=710, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F220, size=214, remain=710, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=214, remain=710, count=1
>	 scoped_stack.free(p14);	p14=0079F250, size=214, remain=710, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=214, remain=710, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F184, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F190, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F1A4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F184, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F1A4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=0079F120, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=100, remain=924, count=1
-------------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F120, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F121, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F122, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F124, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F140, size=42, remain=982, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F14C, size=48, remain=976, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F150, size=72, remain=952, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F168, size=76, remain=948, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F170, size=96, remain=928, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F180, size=112, remain=912, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F190, size=160, remain=864, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F1C0, size=208, remain=816, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=208, remain=816, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F1F0, size=218, remain=806, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=218, remain=806, count=13 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F120, size=218, remain=806, count=12
>	 scoped_stack.free(p2);	p2=0079F121, size=218, remain=806, count=11
>	 scoped_stack.free(p3);	p3=0079F122, size=218, remain=806, count=10
>	 scoped_stack.free(p4);	p4=0079F124, size=218, remain=806, count=9
>	 scoped_stack.free(p5);	p5=0079F140, size=218, remain=806, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F14C, size=218, remain=806, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F150, size=218, remain=806, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F168, size=218, remain=806, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F170, size=218, remain=806, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F180, size=218, remain=806, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F190, size=218, remain=806, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F1C0, size=218, remain=806, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=218, remain=806, count=1
>	 scoped_stack.free(p14);	p14=0079F1F0, size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F120, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F12C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F140, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F120, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F140, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=0079F120, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------
stack.clear();
stack.debugInfo(message); printf(message);
----- Debug Info for lfStackAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, count=0
-------------------------------------------

--------------------------------------------------------------------------------
[ Test for dualStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
> dualStackAllocator<lock_type> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------

----------------------------------------
> smartDualStackAllocator<lock_type> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------

----------------------------------------
> dualStackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079E4F0, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------

----------------------------------------
> smartDualStackAllocator_withBuff<1024, lock_type> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079ED30, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------

----------------------------------------
> dualStackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079D458, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> long long* p1 = stack.newDefault();	p1=0079D458, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=0079D458, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=0079D858, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=0079D460, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=0079D458, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=0079D858, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=0079D460, size=32(ASC=16,DESC=16), remain=1000, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=0079D850, size=32(ASC=16,DESC=16), remain=1000, count=0(ASC=0,DESC=0)

----------------------------------------
> smartDualStackAllocator_withType<long long, 128, lock_type> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079D030, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> long long* p1 = stack.newDefault();	p1=0079D030, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=0079D030, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=0079D430, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=0079D038, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=0079D030, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=0079D430, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=0079D038, size=16(ASC=0,DESC=16), remain=1016, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=0079D428, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0)

--------------------------------------------------------------------------------
[ Test for lfDualStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
> lfDualStackAllocator<> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------

----------------------------------------
> lfSmartDualStackAllocator stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------

----------------------------------------
> lfDualStackAllocator_withBuff<1024> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079E910, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------

----------------------------------------
> lfSmartDualStackAllocator_withBuff<1024> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079E0D0, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------

----------------------------------------
> lfDualStackAllocator_withType<long long, 128> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079D880, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> long long* p1 = stack.newDefault();	p1=0079D880, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=0079D880, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=0079DC80, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=0079D888, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=0079D880, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=0079DC80, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=0079D888, size=32(ASC=16,DESC=16), remain=1000, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=0079DC78, size=32(ASC=16,DESC=16), remain=1000, count=0(ASC=0,DESC=0)

----------------------------------------
> lfSmartDualStackAllocator_withType<long long, 128> stack;
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079DCA8, maxSize=1032, size=0(ASC=0,DESC=0), remain=1032, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> long long* p1 = stack.newDefault();	p1=0079DCA8, size=8(ASC=8,DESC=0), remain=1024, count=1(ASC=1,DESC=0)
> stack.reversewAllocateOrder();
> long long* p2 = stack.newDefault();	p1=0079DCA8, size=16(ASC=8,DESC=8), remain=1016, count=2(ASC=1,DESC=1)
> long long* p3 = stack.newDefaultOrd(ALLOC_ASC);	p2=0079E0A8, size=24(ASC=16,DESC=8), remain=1008, count=3(ASC=2,DESC=1)
> long long* p4 = stack.newDefaultOrd(ALLOC_DESC);	p3=0079DCB0, size=32(ASC=16,DESC=16), remain=1000, count=4(ASC=2,DESC=2)
> stack.deleteDefault(p1);	p1=0079DCA8, size=32(ASC=16,DESC=16), remain=1000, count=3(ASC=1,DESC=2)
> stack.deleteDefault(p2);	p2=0079E0A8, size=32(ASC=16,DESC=16), remain=1000, count=2(ASC=1,DESC=1)
> stack.deleteDefault(p3);	p3=0079DCB0, size=16(ASC=0,DESC=16), remain=1016, count=1(ASC=0,DESC=1)
> stack.deleteDefault(p4);	p4=0079E0A0, size=0(ASC=0,DESC=0), remain=1032, count=0(ASC=0,DESC=0)

--------------------------------------------------------------------------------
[ Test for scoepdStackAllocator / scoepdDualStackAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
> dualStackAllocator<lock_type> stack(buff);
----------------------------------------

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
> p = stack.alloc(100);	p=0079F530, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F530, size=100, count=1)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F594, size=1, remain=923, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F595, size=2, remain=922, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F596, size=3, remain=921, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F598, size=5, remain=919, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F5A0, size=22, remain=902, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F5AC, size=28, remain=896, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F5B0, size=52, remain=872, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F5C8, size=56, remain=868, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F5D0, size=76, remain=848, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F5E0, size=92, remain=832, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F5F0, size=140, remain=784, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F620, size=188, remain=736, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=188, remain=736, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F650, size=198, remain=726, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=198, remain=726, count=13 (INIT: buff=0079F530, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F594, size=198, remain=726, count=12
>	 scoped_stack.free(p2);	p2=0079F595, size=198, remain=726, count=11
>	 scoped_stack.free(p3);	p3=0079F596, size=198, remain=726, count=10
>	 scoped_stack.free(p4);	p4=0079F598, size=198, remain=726, count=9
>	 scoped_stack.free(p5);	p5=0079F5A0, size=198, remain=726, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F5AC, size=198, remain=726, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F5B0, size=198, remain=726, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F5C8, size=198, remain=726, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F5D0, size=198, remain=726, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F5E0, size=198, remain=726, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F5F0, size=198, remain=726, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F620, size=198, remain=726, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=198, remain=726, count=1
>	 scoped_stack.free(p14);	p14=0079F650, size=198, remain=726, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=198, remain=726, count=0 (INIT: buff=0079F530, size=100, count=1)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F594, size=10, remain=914, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F5A0, size=32, remain=892, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F5B4, size=62, remain=862, count=3
>	 scoped_stack.rewind(100);	size=62, remain=862, count=3
>	 scoped_stack.rewind(20);	size=20, remain=904, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=912, count=3
>	 scoped_stack.rewind(p100);	size=0, remain=924, count=3
>	 scoped_stack.clear();	size=0, remain=924, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=0, remain=924, count=0 (INIT: buff=0079F530, size=100, count=1)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F594, size=30, remain=894, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F5B4, size=72, remain=852, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=924, size=72, remain=852, count=2 (INIT: buff=0079F530, size=100, count=1)
-----------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clear();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
***** Begin : Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedAllocator();
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F530, size=0, count=0)
-----------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1, remain=1023, count=1
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2, remain=1022, count=2
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3, remain=1021, count=3
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5, remain=1019, count=4
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26, remain=998, count=5
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32, remain=992, count=6
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56, remain=968, count=7
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60, remain=964, count=8
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80, remain=944, count=9
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96, remain=928, count=10
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144, remain=880, count=11
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192, remain=832, count=12
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192, remain=832, count=12
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202, remain=822, count=13
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=202, remain=822, count=13 (INIT: buff=0079F530, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202, remain=822, count=12
>	 scoped_stack.free(p2);	p2=0079F531, size=202, remain=822, count=11
>	 scoped_stack.free(p3);	p3=0079F532, size=202, remain=822, count=10
>	 scoped_stack.free(p4);	p4=0079F534, size=202, remain=822, count=9
>	 scoped_stack.free(p5);	p5=0079F540, size=202, remain=822, count=8
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202, remain=822, count=7
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202, remain=822, count=6
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202, remain=822, count=5
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202, remain=822, count=4
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202, remain=822, count=3
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202, remain=822, count=2
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202, remain=822, count=1
>	 scoped_stack.free(p13);	p13=00000000, size=202, remain=822, count=1
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202, remain=822, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=202, remain=822, count=0 (INIT: buff=0079F530, size=0, count=0)
-----------------------------------------------
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10, remain=1014, count=1
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32, remain=992, count=2
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62, remain=962, count=3
>	 scoped_stack.rewind(100);	size=62, remain=962, count=3
>	 scoped_stack.rewind(20);	size=20, remain=1004, count=3
>	 scoped_stack.rewind(p101);	size=12, remain=1012, count=3
>	 scoped_stack.rewind(p100);	size=0, remain=1024, count=3
>	 scoped_stack.clear();	size=0, remain=1024, count=0
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=0, remain=1024, count=0 (INIT: buff=0079F530, size=0, count=0)
-----------------------------------------------
>	 void* p200 = scoped_stack.alloc(30);	p200=0079F530, size=30, remain=994, count=1
>	 void* p201 = scoped_stack.alloc(40);	p201=0079F550, size=72, remain=952, count=2
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedStackAllocator -----
maxSize=1024, size=72, remain=952, count=2 (INIT: buff=0079F530, size=0, count=0)
-----------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clear();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=0079F530, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=0079F8CC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F594, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F595, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F596, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F598, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F5A0, size=22(ASC=22,DESC=0), remain=802, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F5AC, size=28(ASC=28,DESC=0), remain=796, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F5B0, size=52(ASC=52,DESC=0), remain=772, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F5C8, size=56(ASC=56,DESC=0), remain=768, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F5D0, size=76(ASC=76,DESC=0), remain=748, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F5E0, size=92(ASC=92,DESC=0), remain=732, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F5F0, size=140(ASC=140,DESC=0), remain=684, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F620, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F594, size=198(ASC=198,DESC=0), remain=626, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F595, size=198(ASC=198,DESC=0), remain=626, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F596, size=198(ASC=198,DESC=0), remain=626, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F598, size=198(ASC=198,DESC=0), remain=626, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F5A0, size=198(ASC=198,DESC=0), remain=626, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F5AC, size=198(ASC=198,DESC=0), remain=626, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F5B0, size=198(ASC=198,DESC=0), remain=626, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F5C8, size=198(ASC=198,DESC=0), remain=626, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F5D0, size=198(ASC=198,DESC=0), remain=626, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F5E0, size=198(ASC=198,DESC=0), remain=626, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F5F0, size=198(ASC=198,DESC=0), remain=626, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F620, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F5A0, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F5B4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F5A0, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F8BC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F5A8, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F8A0, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F594, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F8B4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=ASC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=ASC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------

----------------------------------------
> smartDualStackAllocator<lock_type> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0), order=ASC
---------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0), order=ASC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=ASC
---------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14), order=DESC
---------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=0079F530, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=0079F8CC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F594, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F595, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F596, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F598, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F5A0, size=22(ASC=22,DESC=0), remain=802, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F5AC, size=28(ASC=28,DESC=0), remain=796, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F5B0, size=52(ASC=52,DESC=0), remain=772, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F5C8, size=56(ASC=56,DESC=0), remain=768, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F5D0, size=76(ASC=76,DESC=0), remain=748, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F5E0, size=92(ASC=92,DESC=0), remain=732, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F5F0, size=140(ASC=140,DESC=0), remain=684, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F620, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F594, size=198(ASC=198,DESC=0), remain=626, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F595, size=198(ASC=198,DESC=0), remain=626, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F596, size=198(ASC=198,DESC=0), remain=626, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F598, size=198(ASC=198,DESC=0), remain=626, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F5A0, size=198(ASC=198,DESC=0), remain=626, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F5AC, size=198(ASC=198,DESC=0), remain=626, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F5B0, size=198(ASC=198,DESC=0), remain=626, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F5C8, size=198(ASC=198,DESC=0), remain=626, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F5D0, size=198(ASC=198,DESC=0), remain=626, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F5E0, size=198(ASC=198,DESC=0), remain=626, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F5F0, size=198(ASC=198,DESC=0), remain=626, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F620, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F5A0, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F5B4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F5A0, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F8BC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F5A8, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F8A0, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F594, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F8B4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for dualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC
---------------------------------------------

----------------------------------------
> lfDualStackAllocator<> stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=0079F530, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=0079F8CC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F594, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F595, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F596, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F598, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F5A0, size=22(ASC=22,DESC=0), remain=802, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F5AC, size=28(ASC=28,DESC=0), remain=796, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F5B0, size=52(ASC=52,DESC=0), remain=772, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F5C8, size=56(ASC=56,DESC=0), remain=768, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F5D0, size=76(ASC=76,DESC=0), remain=748, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F5E0, size=92(ASC=92,DESC=0), remain=732, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F5F0, size=140(ASC=140,DESC=0), remain=684, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F620, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F594, size=198(ASC=198,DESC=0), remain=626, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F595, size=198(ASC=198,DESC=0), remain=626, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F596, size=198(ASC=198,DESC=0), remain=626, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F598, size=198(ASC=198,DESC=0), remain=626, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F5A0, size=198(ASC=198,DESC=0), remain=626, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F5AC, size=198(ASC=198,DESC=0), remain=626, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F5B0, size=198(ASC=198,DESC=0), remain=626, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F5C8, size=198(ASC=198,DESC=0), remain=626, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F5D0, size=198(ASC=198,DESC=0), remain=626, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F5E0, size=198(ASC=198,DESC=0), remain=626, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F5F0, size=198(ASC=198,DESC=0), remain=626, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F620, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F5A0, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F5B4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F5A0, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F8BC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F5A8, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F8A0, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F594, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F8B4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count2(ASC=1,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------

----------------------------------------
> lfSmartDualStackAllocator stack(buff);
----------------------------------------

--------------------------------------------------
> stack.setAllocateOrder(ALLOC_ASC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count13(ASC=13,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
> stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
> stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
> stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
> stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
> stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
> stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
> stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.setAllocateOrder(ALLOC_DESC)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F53C, size=13(ASC=13,DESC=0), remain=1011, count=2(ASC=2,DESC=0)
> void* p2 = stack.alloc(1, 1);	p2=0079F53D, size=14(ASC=14,DESC=0), remain=1010, count=3(ASC=3,DESC=0)
> void* p3 = stack.alloc(1, 1);	p3=0079F53E, size=15(ASC=15,DESC=0), remain=1009, count=4(ASC=4,DESC=0)
> void* p4 = stack.alloc(1);	p4=0079F540, size=17(ASC=17,DESC=0), remain=1007, count=5(ASC=5,DESC=0)
> void* p5 = stack.alloc(10, 32);	p5=0079F560, size=58(ASC=58,DESC=0), remain=966, count=6(ASC=6,DESC=0)
> int* p6 = stack.template newObj<int>();	p6=0079F56C, size=64(ASC=64,DESC=0), remain=960, count=7(ASC=7,DESC=0)
> double* p7 = stack.template newArray<double>(3);	p7=0079F570, size=88(ASC=88,DESC=0), remain=936, count=8(ASC=8,DESC=0)
> int* p8 = stack.template newObj<int>();	p8=0079F588, size=92(ASC=92,DESC=0), remain=932, count=9(ASC=9,DESC=0)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F590, size=112(ASC=112,DESC=0), remain=912, count=10(ASC=10,DESC=0)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F5A0, size=128(ASC=128,DESC=0), remain=896, count=11(ASC=11,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F5B0, size=176(ASC=176,DESC=0), remain=848, count=12(ASC=12,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F5E0, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=224,DESC=0), remain=800, count=13(ASC=13,DESC=0)
> void* p14 = stack.alloc(10);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=14(ASC=14,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count14(ASC=14,DESC=0), order=ASC
-----------------------------------------------
> stack.free(p1);	p1=0079F53C, size=234(ASC=234,DESC=0), remain=790, count=13(ASC=13,DESC=0)
> stack.free(p2);	p2=0079F53D, size=234(ASC=234,DESC=0), remain=790, count=12(ASC=12,DESC=0)
> stack.free(p3);	p3=0079F53E, size=234(ASC=234,DESC=0), remain=790, count=11(ASC=11,DESC=0)
> stack.free(p4);	p4=0079F540, size=234(ASC=234,DESC=0), remain=790, count=10(ASC=10,DESC=0)
> stack.free(p5);	p5=0079F560, size=234(ASC=234,DESC=0), remain=790, count=9(ASC=9,DESC=0)
> stack.deleteObj(p6);	p6=0079F56C, size=234(ASC=234,DESC=0), remain=790, count=8(ASC=8,DESC=0)
> stack.deleteArray(p7, 3);	p7=0079F570, size=234(ASC=234,DESC=0), remain=790, count=7(ASC=7,DESC=0)
> stack.deleteObj(p8);	p8=0079F588, size=234(ASC=234,DESC=0), remain=790, count=6(ASC=6,DESC=0)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F590, size=234(ASC=234,DESC=0), remain=790, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F5A0, size=234(ASC=234,DESC=0), remain=790, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F5B0, size=234(ASC=234,DESC=0), remain=790, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F5E0, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p13);	p13=00000000, size=234(ASC=234,DESC=0), remain=790, count=2(ASC=2,DESC=0)
> stack.free(p14);	p14=0079F610, size=234(ASC=234,DESC=0), remain=790, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=234(ASC=234,DESC=0), remain=790, count1(ASC=1,DESC=0), order=ASC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p101 = stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
> void* p102 = stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(100);	tsize=62(ASC=62,DESC=0) remain=962, count=3(ASC=3,DESC=0)
> stack.rewind(20);	tsize=20(ASC=20,DESC=0) remain=1004, count=3(ASC=3,DESC=0)
> stack.rewind(p101);	tsize=12(ASC=12,DESC=0) remain=1012, count=3(ASC=3,DESC=0)
> stack.rewind(p100);	tsize=0(ASC=0,DESC=0) remain=1024, count=3(ASC=3,DESC=0)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=ASC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=12(ASC=0,DESC=12) remain=1012, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=ASC
-----------------------------------------------
--------------------------------------------------
> stack.reversewAllocateOrder()
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=12(ASC=0,DESC=12), remain=1012, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> void* p1 = stack.alloc(1);	p1=0079F920, size=16(ASC=0,DESC=16), remain=1008, count=2(ASC=0,DESC=2)
> void* p2 = stack.alloc(1, 1);	p2=0079F91F, size=17(ASC=0,DESC=17), remain=1007, count=3(ASC=0,DESC=3)
> void* p3 = stack.alloc(1, 1);	p3=0079F91E, size=18(ASC=0,DESC=18), remain=1006, count=4(ASC=0,DESC=4)
> void* p4 = stack.alloc(1);	p4=0079F91C, size=20(ASC=0,DESC=20), remain=1004, count=5(ASC=0,DESC=5)
> void* p5 = stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=6(ASC=0,DESC=6)
> int* p6 = stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=7(ASC=0,DESC=7)
> double* p7 = stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=8(ASC=0,DESC=8)
> int* p8 = stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=9(ASC=0,DESC=9)
data_t::data_t(): m_val=0
> data_t* p9 = stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=10(ASC=0,DESC=10)
data_t::data_t(123): m_val=123
> data_t* p10 = stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=11(ASC=0,DESC=11)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=12(ASC=0,DESC=12)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p13 = stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=13(ASC=0,DESC=13)
> void* p14 = stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=14(ASC=0,DESC=14)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count14(ASC=0,DESC=14), order=DESC
-----------------------------------------------
> stack.free(p1);	p1=0079F920, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
> stack.free(p2);	p2=0079F91F, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
> stack.free(p3);	p3=0079F91E, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
> stack.free(p4);	p4=0079F91C, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
> stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
> stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
> stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
> stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
data_t::~data_t(): m_val=0
> stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=123
> stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
> stack.free(p14);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count1(ASC=0,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p100 = stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
> void* p101 = stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
> void* p102 = stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(100);	tsize=64(ASC=0,DESC=64) remain=960, count=3(ASC=0,DESC=3)
> stack.rewind(20);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p101);	tsize=20(ASC=0,DESC=20) remain=1004, count=3(ASC=0,DESC=3)
> stack.rewind(p100);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearAll();	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> void* p200 = stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p201 = stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> int* p202 = stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
> int* p203 = stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
> double* p204 = stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
> double* p205 = stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 100);	tsize=80(ASC=40,DESC=40) remain=944, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_ASC, 15);	tsize=55(ASC=15,DESC=40) remain=969, count=6(ASC=3,DESC=3)
> stack.rewindOrd(ALLOC_DESC, 15);	tsize=30(ASC=15,DESC=15) remain=994, count=6(ASC=3,DESC=3)
> stack.rewind(p202);	tsize=27(ASC=12,DESC=15) remain=997, count=6(ASC=3,DESC=3)
> stack.rewind(p201);	tsize=24(ASC=12,DESC=12) remain=1000, count=6(ASC=3,DESC=3)
> stack.clearOrd(ALLOC_ASC);	tsize=12(ASC=0,DESC=12) remain=1012, count=3(ASC=0,DESC=3)
> stack.clearOrd(ALLOC_DESC);	tsize=0(ASC=0,DESC=0) remain=1024, count=0(ASC=0,DESC=0)
> void* p300 = stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
> void* p301 = stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
> stack.clear();	tsize=10(ASC=10,DESC=0) remain=1014, count=1(ASC=1,DESC=0)
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=10(ASC=10,DESC=0), remain=1014, count1(ASC=1,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();

================================================================================

> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
> p1 = stack.allocOrd(ALLOC_ASC, 100);	p1=0079F530, size=100(ASC=100,DESC=0), remain=924, count=1(ASC=1,DESC=0)
> p2 = stack.allocOrd(ALLOC_DESC, 100);	p2=0079F8CC, size=200(ASC=100,DESC=100), remain=824, count=2(ASC=1,DESC=1)
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F594, size=1(ASC=1,DESC=0), remain=823, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F595, size=2(ASC=2,DESC=0), remain=822, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F596, size=3(ASC=3,DESC=0), remain=821, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F598, size=5(ASC=5,DESC=0), remain=819, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F5A0, size=22(ASC=22,DESC=0), remain=802, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F5AC, size=28(ASC=28,DESC=0), remain=796, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F5B0, size=52(ASC=52,DESC=0), remain=772, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F5C8, size=56(ASC=56,DESC=0), remain=768, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F5D0, size=76(ASC=76,DESC=0), remain=748, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F5E0, size=92(ASC=92,DESC=0), remain=732, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F5F0, size=140(ASC=140,DESC=0), remain=684, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F620, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=188(ASC=188,DESC=0), remain=636, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F594, size=198(ASC=198,DESC=0), remain=626, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F595, size=198(ASC=198,DESC=0), remain=626, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F596, size=198(ASC=198,DESC=0), remain=626, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F598, size=198(ASC=198,DESC=0), remain=626, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F5A0, size=198(ASC=198,DESC=0), remain=626, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F5AC, size=198(ASC=198,DESC=0), remain=626, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F5B0, size=198(ASC=198,DESC=0), remain=626, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F5C8, size=198(ASC=198,DESC=0), remain=626, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F5D0, size=198(ASC=198,DESC=0), remain=626, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F5E0, size=198(ASC=198,DESC=0), remain=626, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F5F0, size=198(ASC=198,DESC=0), remain=626, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F620, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=198(ASC=198,DESC=0), remain=626, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F650, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=198(ASC=198,DESC=0), remain=626, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F5A0, size=32(ASC=32,DESC=0), remain=792, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F5B4, size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=762, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=804, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=812, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=824, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F5A0, size=28(ASC=16,DESC=12), remain=796, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F8BC, size=32(ASC=16,DESC=16), remain=792, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F5A8, size=60(ASC=44,DESC=16), remain=764, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F8A0, size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=88(ASC=44,DESC=44), remain=736, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=59(ASC=15,DESC=44), remain=765, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=794, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=797, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=800, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=812, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=0(ASC=0,DESC=0), remain=824, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F594, size=10(ASC=10,DESC=0), remain=814, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F8C0, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=812, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F594, size=22(ASC=10,DESC=12), remain=802, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F8B4, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=824, size=34(ASC=10,DESC=24), remain=790, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=200(ASC=100,DESC=100), count=2(ASC=1,DESC=1))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=200(ASC=100,DESC=100), remain=824, count2(ASC=1,DESC=1), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
--------------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_ASC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.setAllocateOrder(ALLOC_DESC)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F92C, size=4(ASC=0,DESC=4), remain=1020, count=1(ASC=0,DESC=1)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F92B, size=5(ASC=0,DESC=5), remain=1019, count=2(ASC=0,DESC=2)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F92A, size=6(ASC=0,DESC=6), remain=1018, count=3(ASC=0,DESC=3)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F928, size=8(ASC=0,DESC=8), remain=1016, count=4(ASC=0,DESC=4)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F900, size=48(ASC=0,DESC=48), remain=976, count=5(ASC=0,DESC=5)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F8FC, size=52(ASC=0,DESC=52), remain=972, count=6(ASC=0,DESC=6)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F8E0, size=80(ASC=0,DESC=80), remain=944, count=7(ASC=0,DESC=7)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F8DC, size=84(ASC=0,DESC=84), remain=940, count=8(ASC=0,DESC=8)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F8C0, size=112(ASC=0,DESC=112), remain=912, count=9(ASC=0,DESC=9)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F8B0, size=128(ASC=0,DESC=128), remain=896, count=10(ASC=0,DESC=10)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F880, size=176(ASC=0,DESC=176), remain=848, count=11(ASC=0,DESC=11)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F850, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=224(ASC=0,DESC=224), remain=800, count=12(ASC=0,DESC=12)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F844, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=236(ASC=0,DESC=236), remain=788, count=13(ASC=0,DESC=13), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F92C, size=236(ASC=0,DESC=236), remain=788, count=12(ASC=0,DESC=12)
>	 scoped_stack.free(p2);	p2=0079F92B, size=236(ASC=0,DESC=236), remain=788, count=11(ASC=0,DESC=11)
>	 scoped_stack.free(p3);	p3=0079F92A, size=236(ASC=0,DESC=236), remain=788, count=10(ASC=0,DESC=10)
>	 scoped_stack.free(p4);	p4=0079F928, size=236(ASC=0,DESC=236), remain=788, count=9(ASC=0,DESC=9)
>	 scoped_stack.free(p5);	p5=0079F900, size=236(ASC=0,DESC=236), remain=788, count=8(ASC=0,DESC=8)
>	 scoped_stack.deleteObj(p6);	p6=0079F8FC, size=236(ASC=0,DESC=236), remain=788, count=7(ASC=0,DESC=7)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F8E0, size=236(ASC=0,DESC=236), remain=788, count=6(ASC=0,DESC=6)
>	 scoped_stack.deleteObj(p8);	p8=0079F8DC, size=236(ASC=0,DESC=236), remain=788, count=5(ASC=0,DESC=5)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F8C0, size=236(ASC=0,DESC=236), remain=788, count=4(ASC=0,DESC=4)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F8B0, size=236(ASC=0,DESC=236), remain=788, count=3(ASC=0,DESC=3)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F880, size=236(ASC=0,DESC=236), remain=788, count=2(ASC=0,DESC=2)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F850, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p13);	p13=00000000, size=236(ASC=0,DESC=236), remain=788, count=1(ASC=0,DESC=1)
>	 scoped_stack.free(p14);	p14=0079F844, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F924, size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F910, size=32(ASC=0,DESC=32), remain=992, count=2(ASC=0,DESC=2)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F8F0, size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(100);	size=64(ASC=0,DESC=64), remain=960, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(20);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p101);	size=20(ASC=0,DESC=20), remain=1004, count=3(ASC=0,DESC=3)
>	 scoped_stack.rewind(p100);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F53C, size=22(ASC=22,DESC=0), remain=1002, count=2(ASC=2,DESC=0)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F924, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=22,DESC=12), remain=990, count=3(ASC=2,DESC=1), order=DESC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
***** Begin : Dual Scoped stack allocator *****
>	 auto scoped_stack = stack.scopedDualAllocator();
>	 scoped_stack.reversewAllocateOrder()
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p1 = scoped_stack.alloc(1);	p1=0079F530, size=1(ASC=1,DESC=0), remain=1023, count=1(ASC=1,DESC=0)
>	 void* p2 = scoped_stack.alloc(1, 1);	p2=0079F531, size=2(ASC=2,DESC=0), remain=1022, count=2(ASC=2,DESC=0)
>	 void* p3 = scoped_stack.alloc(1, 1);	p3=0079F532, size=3(ASC=3,DESC=0), remain=1021, count=3(ASC=3,DESC=0)
>	 void* p4 = scoped_stack.alloc(1);	p4=0079F534, size=5(ASC=5,DESC=0), remain=1019, count=4(ASC=4,DESC=0)
>	 void* p5 = scoped_stack.alloc(10, 32);	p5=0079F540, size=26(ASC=26,DESC=0), remain=998, count=5(ASC=5,DESC=0)
>	 int* p6 = scoped_stack.template newObj<int>();	p6=0079F54C, size=32(ASC=32,DESC=0), remain=992, count=6(ASC=6,DESC=0)
>	 double* p7 = scoped_stack.template newArray<double>(3);	p7=0079F550, size=56(ASC=56,DESC=0), remain=968, count=7(ASC=7,DESC=0)
>	 int* p8 = scoped_stack.template newObj<int>();	p8=0079F568, size=60(ASC=60,DESC=0), remain=964, count=8(ASC=8,DESC=0)
data_t::data_t(): m_val=0
>	 data_t* p9 = scoped_stack.template newObj<data_t>();	p9=0079F570, size=80(ASC=80,DESC=0), remain=944, count=9(ASC=9,DESC=0)
data_t::data_t(123): m_val=123
>	 data_t* p10 = scoped_stack.template newObj<data_t>(123);	p10=0079F580, size=96(ASC=96,DESC=0), remain=928, count=10(ASC=10,DESC=0)
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
>	 data_t* p11 = scoped_stack.template newArray<data_t>(3);	p11=0079F590, size=144(ASC=144,DESC=0), remain=880, count=11(ASC=11,DESC=0)
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
>	 data_t* p12 = scoped_stack.template newArray<data_t>(3, 456);	p12=0079F5C0, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p13 = scoped_stack.alloc(1000);	p13=00000000, size=192(ASC=192,DESC=0), remain=832, count=12(ASC=12,DESC=0)
>	 void* p14 = scoped_stack.alloc(10);	p14=0079F5F0, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=202(ASC=202,DESC=0), remain=822, count=13(ASC=13,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.free(p1);	p1=0079F530, size=202(ASC=202,DESC=0), remain=822, count=12(ASC=12,DESC=0)
>	 scoped_stack.free(p2);	p2=0079F531, size=202(ASC=202,DESC=0), remain=822, count=11(ASC=11,DESC=0)
>	 scoped_stack.free(p3);	p3=0079F532, size=202(ASC=202,DESC=0), remain=822, count=10(ASC=10,DESC=0)
>	 scoped_stack.free(p4);	p4=0079F534, size=202(ASC=202,DESC=0), remain=822, count=9(ASC=9,DESC=0)
>	 scoped_stack.free(p5);	p5=0079F540, size=202(ASC=202,DESC=0), remain=822, count=8(ASC=8,DESC=0)
>	 scoped_stack.deleteObj(p6);	p6=0079F54C, size=202(ASC=202,DESC=0), remain=822, count=7(ASC=7,DESC=0)
>	 scoped_stack.deleteArray(p7, 3);	p7=0079F550, size=202(ASC=202,DESC=0), remain=822, count=6(ASC=6,DESC=0)
>	 scoped_stack.deleteObj(p8);	p8=0079F568, size=202(ASC=202,DESC=0), remain=822, count=5(ASC=5,DESC=0)
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteObj(p9);	p9=0079F570, size=202(ASC=202,DESC=0), remain=822, count=4(ASC=4,DESC=0)
data_t::~data_t(): m_val=123
>	 scoped_stack.deleteObj(p10);	p10=0079F580, size=202(ASC=202,DESC=0), remain=822, count=3(ASC=3,DESC=0)
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
>	 scoped_stack.deleteArray(p11, 3);	p11=0079F590, size=202(ASC=202,DESC=0), remain=822, count=2(ASC=2,DESC=0)
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
>	 scoped_stack.deleteArray(p12, 3);	p12=0079F5C0, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p13);	p13=00000000, size=202(ASC=202,DESC=0), remain=822, count=1(ASC=1,DESC=0)
>	 scoped_stack.free(p14);	p14=0079F5F0, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 void* p100 = scoped_stack.alloc(10);	p100=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p101 = scoped_stack.alloc(20);	p101=0079F53C, size=32(ASC=32,DESC=0), remain=992, count=2(ASC=2,DESC=0)
>	 void* p102 = scoped_stack.alloc(30);	p102=0079F550, size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(100);	size=62(ASC=62,DESC=0), remain=962, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(20);	size=20(ASC=20,DESC=0), remain=1004, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p101);	size=12(ASC=12,DESC=0), remain=1012, count=3(ASC=3,DESC=0)
>	 scoped_stack.rewind(p100);	size=0(ASC=0,DESC=0), remain=1024, count=3(ASC=3,DESC=0)
>	 scoped_stack.clearAll();	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p200 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p200=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p201 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p201=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 int* p202 = scoped_stack.template newObjOrd<int>(ALLOC_ASC);	p202=0079F53C, size=28(ASC=16,DESC=12), remain=996, count=3(ASC=2,DESC=1)
>	 int* p203 = scoped_stack.template newObjOrd<int>(ALLOC_DESC);	p203=0079F920, size=32(ASC=16,DESC=16), remain=992, count=4(ASC=2,DESC=2)
>	 double* p204 = scoped_stack.template newArrayOrd<double>(ALLOC_ASC, 3);	p204=0079F540, size=56(ASC=40,DESC=16), remain=968, count=5(ASC=3,DESC=2)
>	 double* p205 = scoped_stack.template newArrayOrd<double>(ALLOC_DESC, 3);	p205=0079F908, size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 100);	size=80(ASC=40,DESC=40), remain=944, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_ASC, 15);	size=55(ASC=15,DESC=40), remain=969, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewindOrd(ALLOC_DESC, 15);	size=30(ASC=15,DESC=15), remain=994, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p202);	size=27(ASC=12,DESC=15), remain=997, count=6(ASC=3,DESC=3)
>	 scoped_stack.rewind(p201);	size=24(ASC=12,DESC=12), remain=1000, count=6(ASC=3,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_ASC);	size=12(ASC=0,DESC=12), remain=1012, count=3(ASC=0,DESC=3)
>	 scoped_stack.clearOrd(ALLOC_DESC);	size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count=0(ASC=0,DESC=0), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
>	 void* p300 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p300=0079F530, size=10(ASC=10,DESC=0), remain=1014, count=1(ASC=1,DESC=0)
>	 void* p301 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p301=0079F924, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 scoped_stack.clear();	size=12(ASC=0,DESC=12), remain=1012, count=1(ASC=0,DESC=1)
>	 void* p302 = scoped_stack.allocOrd(ALLOC_ASC, 10);	p302=0079F530, size=22(ASC=10,DESC=12), remain=1002, count=2(ASC=1,DESC=1)
>	 void* p303 = scoped_stack.allocOrd(ALLOC_DESC, 10);	p303=0079F918, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2)
>	 scoped_stack.debugInfo(message); printf(message);
----- Debug Info for scopedDualStackAllocator -----
maxSize=1024, size=34(ASC=10,DESC=24), remain=990, count=3(ASC=1,DESC=2), order=ASC (INIT: buff=0079F530, order=DESC, size=0(ASC=0,DESC=0), count=0(ASC=0,DESC=0))
---------------------------------------------------
***** End : Scoped stack allocator *****
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------
> stack.clearAll();
> stack.debugInfo(message); printf(message);
----- Debug Info for lfDualStackAllocator -----
buff=0079F530, maxSize=1024, size=0(ASC=0,DESC=0), remain=1024, count0(ASC=0,DESC=0), order=DESC
-----------------------------------------------

================================================================================

--------------------------------------------------------------------------------
[ Test for monoAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
monoAllocator<lock_type> mono(buff);
----------------------------------------

mono.debugInfo(message); printf(message);
----- Debug Info for monoAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, isAllocated=false
----------------------------------------
> void* p1 = mono.alloc(1);	p1=0079F120, size=1, remain=1023, isAllocated=true
> mono.free(p1);	p1=0079F120, size=0, remain=1024, isAllocated=false
> void* p2 = mono.alloc(1, 1);	p2=0079F120, size=1, remain=1023, isAllocated=true
> void* p3 = mono.alloc(1, 1);	p3=00000000, size=1, remain=1023, isAllocated=true
> mono.free(p2);	p2=0079F120, size=0, remain=1024, isAllocated=false
> mono.free(p3);	p3=00000000, size=0, remain=1024, isAllocated=false
> void* p4 = mono.alloc(1);	p4=0079F120, size=1, remain=1023, isAllocated=true
> mono.free(p4);	p4=0079F120, size=0, remain=1024, isAllocated=false
> void* p5 = mono.alloc(10, 32);	p5=0079F120, size=10, remain=1014, isAllocated=true
> mono.free(p5);	p5=0079F120, size=0, remain=1024, isAllocated=false
> int* p6 = mono.template newObj<int>();	p6=0079F120, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p6);	p6=0079F120, size=0, remain=1024, isAllocated=false
> double* p7 = mono.template newArray<double>(3);	p7=0079F120, size=24, remain=1000, isAllocated=true
> mono.deleteArray(p7, 3);	p7=0079F120, size=0, remain=1024, isAllocated=false
> int* p8 = mono.template newObj<int>();	p8=0079F120, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p8);	p8=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
> data_t* p9 = mono.template newObj<data_t>();	p9=0079F120, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=0
> mono.deleteObj(p9);	p9=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(123): m_val=123
> data_t* p10 = mono.template newObj<data_t>(123);	p10=0079F120, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=123
> mono.deleteObj(p10);	p10=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = mono.template newArray<data_t>(3);	p11=0079F120, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> mono.deleteArray(p11, 3);	p11=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = mono.template newArray<data_t>(3, 456);	p12=0079F120, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> mono.deleteArray(p12, 3);	p12=0079F120, size=0, remain=1024, isAllocated=false
> void* p13 = mono.alloc(2000);	p13=00000000, size=0, remain=1024, isAllocated=false
> mono.free(p13);	p13=00000000, size=0, remain=1024, isAllocated=false
> void* p14 = mono.alloc(10);	p14=0079F120, size=10, remain=1014, isAllocated=true
> mono.free(p14);	p14=0079F120, size=0, remain=1024, isAllocated=false
mono.debugInfo(message); printf(message);
----- Debug Info for monoAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, isAllocated=false
----------------------------------------

----------------------------------------
monoAllocator_withBuff<1024, lock_type> mono;
----------------------------------------

mono.debugInfo(message); printf(message);
----- Debug Info for monoAllocator -----
buff=0079E0C0, maxSize=1024, size=0, remain=1024, isAllocated=false
----------------------------------------

----------------------------------------
monoAllocator_withType<long long, 128, lock_type> mono;
----------------------------------------

mono.debugInfo(message); printf(message);
----- Debug Info for monoAllocator -----
buff=0079E8E0, maxSize=1032, size=0, remain=1032, isAllocated=false
----------------------------------------
> long long* p = mono.newDefault();	p=0079E8E0, size=8, remain=1024, isAllocated=true
> mono.deleteDefault(p);	p=0079E8E0, size=0, remain=1032, isAllocated=false

--------------------------------------------------------------------------------
[ Test for lfMonoAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
lfMonoAllocator mono(buff);
----------------------------------------

mono.debugInfo(message); printf(message);
----- Debug Info for lfMonoAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, isAllocated=false
------------------------------------------
> void* p1 = mono.alloc(1);	p1=0079F120, size=1, remain=1023, isAllocated=true
> mono.free(p1);	p1=0079F120, size=0, remain=1024, isAllocated=false
> void* p2 = mono.alloc(1, 1);	p2=0079F120, size=1, remain=1023, isAllocated=true
> void* p3 = mono.alloc(1, 1);	p3=00000000, size=1, remain=1023, isAllocated=true
> mono.free(p2);	p2=0079F120, size=0, remain=1024, isAllocated=false
> mono.free(p3);	p3=00000000, size=0, remain=1024, isAllocated=false
> void* p4 = mono.alloc(1);	p4=0079F120, size=1, remain=1023, isAllocated=true
> mono.free(p4);	p4=0079F120, size=0, remain=1024, isAllocated=false
> void* p5 = mono.alloc(10, 32);	p5=0079F120, size=10, remain=1014, isAllocated=true
> mono.free(p5);	p5=0079F120, size=0, remain=1024, isAllocated=false
> int* p6 = mono.template newObj<int>();	p6=0079F120, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p6);	p6=0079F120, size=0, remain=1024, isAllocated=false
> double* p7 = mono.template newArray<double>(3);	p7=0079F120, size=24, remain=1000, isAllocated=true
> mono.deleteArray(p7, 3);	p7=0079F120, size=0, remain=1024, isAllocated=false
> int* p8 = mono.template newObj<int>();	p8=0079F120, size=4, remain=1020, isAllocated=true
> mono.deleteObj(p8);	p8=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
> data_t* p9 = mono.template newObj<data_t>();	p9=0079F120, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=0
> mono.deleteObj(p9);	p9=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(123): m_val=123
> data_t* p10 = mono.template newObj<data_t>(123);	p10=0079F120, size=16, remain=1008, isAllocated=true
data_t::~data_t(): m_val=123
> mono.deleteObj(p10);	p10=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p11 = mono.template newArray<data_t>(3);	p11=0079F120, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> mono.deleteArray(p11, 3);	p11=0079F120, size=0, remain=1024, isAllocated=false
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p12 = mono.template newArray<data_t>(3, 456);	p12=0079F120, size=48, remain=976, isAllocated=true
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
data_t::~data_t(): m_val=456
> mono.deleteArray(p12, 3);	p12=0079F120, size=0, remain=1024, isAllocated=false
> void* p13 = mono.alloc(2000);	p13=00000000, size=0, remain=1024, isAllocated=false
> mono.free(p13);	p13=00000000, size=0, remain=1024, isAllocated=false
> void* p14 = mono.alloc(10);	p14=0079F120, size=10, remain=1014, isAllocated=true
> mono.free(p14);	p14=0079F120, size=0, remain=1024, isAllocated=false
mono.debugInfo(message); printf(message);
----- Debug Info for lfMonoAllocator -----
buff=0079F120, maxSize=1024, size=0, remain=1024, isAllocated=false
------------------------------------------

----------------------------------------
lfMonoAllocator_withBuff<1024> mono;
----------------------------------------

mono.debugInfo(message); printf(message);
----- Debug Info for lfMonoAllocator -----
buff=0079E4CC, maxSize=1024, size=0, remain=1024, isAllocated=false
------------------------------------------

----------------------------------------
lfMonoAllocator_withType<long long, 128> mono;
----------------------------------------

mono.debugInfo(message); printf(message);
----- Debug Info for lfMonoAllocator -----
buff=0079ECF4, maxSize=1032, size=0, remain=1032, isAllocated=false
------------------------------------------
> long long* p = mono.newDefault();	p=0079ECF8, size=12, remain=1020, isAllocated=true
> mono.deleteDefault(p);	p=0079ECF8, size=0, remain=1032, isAllocated=false

================================================================================

--------------------------------------------------------------------------------
[ Test for poolAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
poolAllocator<16, lock_type> pool(buff, sizeof(buff), 32, 8);
----------------------------------------

pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=0
----------------------------------------
> void* p1 = pool.alloc(1);	p1=0079F138, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=0079F158, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=0079F178, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=0079F198, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=00000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=0079F1B8, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=0079F1D8, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=0079F1F8, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=0079F220, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=0079F240, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=00000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=00000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=00000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=0079F258, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=0079F258, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=0079F298, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=0079F2B8, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=0079F2D8, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=0079F2F8, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=0079F318, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=00000000, size=512, remain=512, pool=16/16
pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
----------------------------------------
> pool.free(p1);	p1=0079F138, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=0079F158, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=0079F178, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=0079F198, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=00000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=0079F1B8, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=0079F1D8, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=0079F1F8, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=0079F220, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=0079F240, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=00000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=00000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=00000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=0079F258, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=0079F278, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=0079F298, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=0079F2B8, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=0079F2D8, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=0079F2F8, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=0079F318, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=00000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
----------------------------------------
> void* p1 = pool.alloc(1);	p1=0079F318, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=0079F2F8, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=0079F2D8, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=0079F2B8, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=00000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=0079F298, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=0079F278, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=0079F258, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=0079F240, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=0079F220, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=00000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=00000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=00000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=0079F1F8, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=0079F1F8, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=0079F1B8, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=0079F198, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=0079F178, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=0079F158, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=0079F138, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=00000000, size=512, remain=512, pool=16/16
pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
----------------------------------------
> pool.free(p1);	p1=0079F318, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=0079F2F8, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=0079F2D8, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=0079F2B8, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=00000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=0079F298, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=0079F278, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=0079F258, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=0079F240, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=0079F220, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=00000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=00000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=00000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=0079F1F8, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=0079F1D8, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=0079F1B8, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=0079F198, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=0079F178, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=0079F158, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=0079F138, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=00000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
----------------------------------------
> void* p1 = pool.alloc(1);	p1=0079F138, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=0079F158, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=0079F178, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=0079F198, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=00000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=0079F1B8, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=0079F1D8, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=0079F1F8, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=0079F220, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=0079F240, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=00000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=00000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=00000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=0079F258, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=0079F258, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=0079F298, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=0079F2B8, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=0079F2D8, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=0079F2F8, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=0079F318, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=00000000, size=512, remain=512, pool=16/16
pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
----------------------------------------
> pool.free(p1);	p1=0079F138, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=0079F158, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=0079F178, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=0079F198, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=00000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=0079F1B8, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=0079F1D8, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=0079F1F8, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=0079F220, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=0079F240, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=00000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=00000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=00000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=0079F258, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=0079F278, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=0079F298, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=0079F2B8, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=0079F2D8, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=0079F2F8, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=0079F318, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=00000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
----------------------------------------

----------------------------------------
poolAllocator_withBuff<32, 16, 8, lock_type> pool;
----------------------------------------

pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079EA50, offset=4, maxSize=516, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=516, vacantHead=0
----------------------------------------

----------------------------------------
poolAllocator_withType<block_type, 16, lock_type> pool;
----------------------------------------

pool.debugInfo(message); printf(message);
----- Debug Info for poolAllocator -----
buff=0079EEC8, offset=4, maxSize=516, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=516, vacantHead=0
----------------------------------------
> block_type* p = pool.newDefault();	p=0079EEC8, size=32, remain=484, pool=1/16
> pool.deleteDefault(p);	p=0079EEC8, size=0, remain=516, pool=0/16

--------------------------------------------------------------------------------
[ Test for lfPoolAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
lfPoolAllocator<16> pool(buff, sizeof(buff), 32, 8);
----------------------------------------

pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=0
------------------------------------------
> void* p1 = pool.alloc(1);	p1=0079F138, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=0079F158, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=0079F178, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=0079F198, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=00000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=0079F1B8, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=0079F1D8, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=0079F1F8, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=0079F220, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=0079F240, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=00000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=00000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=00000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=0079F258, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=0079F258, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=0079F298, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=0079F2B8, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=0079F2D8, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=0079F2F8, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=0079F318, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=00000000, size=512, remain=512, pool=16/16
pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
------------------------------------------
> pool.free(p1);	p1=0079F138, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=0079F158, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=0079F178, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=0079F198, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=00000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=0079F1B8, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=0079F1D8, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=0079F1F8, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=0079F220, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=0079F240, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=00000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=00000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=00000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=0079F258, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=0079F278, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=0079F298, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=0079F2B8, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=0079F2D8, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=0079F2F8, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=0079F318, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=00000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
------------------------------------------
> void* p1 = pool.alloc(1);	p1=0079F318, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=0079F2F8, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=0079F2D8, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=0079F2B8, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=00000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=0079F298, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=0079F278, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=0079F258, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=0079F240, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=0079F220, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=00000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=00000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=00000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=0079F1F8, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=0079F1F8, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=0079F1B8, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=0079F198, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=0079F178, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=0079F158, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=0079F138, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=00000000, size=512, remain=512, pool=16/16
pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
------------------------------------------
> pool.free(p1);	p1=0079F318, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=0079F2F8, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=0079F2D8, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=0079F2B8, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=00000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=0079F298, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=0079F278, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=0079F258, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=0079F240, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=0079F220, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=00000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=00000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=00000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=0079F1F8, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=0079F1D8, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=0079F1B8, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=0079F198, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=0079F178, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=0079F158, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=0079F138, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=00000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
------------------------------------------
> void* p1 = pool.alloc(1);	p1=0079F138, size=32, remain=992, pool=1/16
> void* p2 = pool.alloc(1, 1);	p2=0079F158, size=64, remain=960, pool=2/16
> void* p3 = pool.alloc(1, 1);	p3=0079F178, size=96, remain=928, pool=3/16
> void* p4 = pool.alloc(1);	p4=0079F198, size=128, remain=896, pool=4/16
> void* p5 = pool.alloc(10, 32);	p5=00000000, size=128, remain=896, pool=4/16
> int* p6 = pool.template newObj<int>();	p6=0079F1B8, size=160, remain=864, pool=5/16
> double* p7 = pool.template newArray<double>(3);	p7=0079F1D8, size=192, remain=832, pool=6/16
> int* p8 = pool.template newObj<int>();	p8=0079F1F8, size=224, remain=800, pool=7/16
data_t::data_t(): m_val=0
> data_t* p9 = pool.template newObj<data_t>();	p9=0079F220, size=256, remain=768, pool=8/16
data_t::data_t(123): m_val=123
> data_t* p10 = pool.template newObj<data_t>(123);	p10=0079F240, size=288, remain=736, pool=9/16
> data_t* p11 = pool.template newArray<data_t>(3);	p11=00000000, size=288, remain=736, pool=9/16
> data_t* p12 = pool.template newArray<data_t>(3, 456);	p12=00000000, size=288, remain=736, pool=9/16
> void* p13 = pool.alloc(1000);	p13=00000000, size=288, remain=736, pool=9/16
> void* p14 = pool.alloc(10);	p14=0079F258, size=320, remain=704, pool=10/16
> void* p15 = pool.alloc(10);	p14=0079F258, size=352, remain=672, pool=11/16
> void* p16 = pool.alloc(10);	p16=0079F298, size=384, remain=640, pool=12/16
> void* p17 = pool.alloc(10);	p17=0079F2B8, size=416, remain=608, pool=13/16
> void* p18 = pool.alloc(10);	p18=0079F2D8, size=448, remain=576, pool=14/16
> void* p19 = pool.alloc(10);	p19=0079F2F8, size=480, remain=544, pool=15/16
> void* p20 = pool.alloc(10);	p20=0079F318, size=512, remain=512, pool=16/16
> void* p21 = pool.alloc(10);	p21=00000000, size=512, remain=512, pool=16/16
pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=16, poolRemain=0, size=512, remain=512, vacantHead=16
------------------------------------------
> pool.free(p1);	p1=0079F138, size=480, remain=544, pool=15/16
> pool.free(p2);	p2=0079F158, size=448, remain=576, pool=14/16
> pool.free(p3);	p3=0079F178, size=416, remain=608, pool=13/16
> pool.free(p4);	p4=0079F198, size=384, remain=640, pool=12/16
> pool.free(p5);	p5=00000000, size=384, remain=640, pool=12/16
> pool.deleteObj(p6);	p6=0079F1B8, size=352, remain=672, pool=11/16
> pool.deleteArray(p7, 3);	p7=0079F1D8, size=320, remain=704, pool=10/16
> pool.deleteObj(p8);	p8=0079F1F8, size=288, remain=736, pool=9/16
data_t::~data_t(): m_val=0
> pool.deleteObj(p9);	p9=0079F220, size=256, remain=768, pool=8/16
data_t::~data_t(): m_val=123
> pool.deleteObj(p10);	p10=0079F240, size=224, remain=800, pool=7/16
> pool.deleteArray(p11, 3);	p11=00000000, size=224, remain=800, pool=7/16
> pool.deleteArray(p12, 3);	p12=00000000, size=224, remain=800, pool=7/16
> pool.free(p13);	p13=00000000, size=224, remain=800, pool=7/16
> pool.free(p14);	p14=0079F258, size=192, remain=832, pool=6/16
> pool.free(p15);	p15=0079F278, size=160, remain=864, pool=5/16
> pool.free(p16);	p16=0079F298, size=128, remain=896, pool=4/16
> pool.free(p17);	p17=0079F2B8, size=96, remain=928, pool=3/16
> pool.free(p18);	p18=0079F2D8, size=64, remain=960, pool=2/16
> pool.free(p19);	p19=0079F2F8, size=32, remain=992, pool=1/16
> pool.free(p20);	p20=0079F318, size=0, remain=1024, pool=0/16
> pool.free(p21);	p21=00000000, size=0, remain=1024, pool=0/16
pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079F138, offset=0, maxSize=1024, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=1024, vacantHead=16
------------------------------------------

----------------------------------------
lfPoolAllocator_withBuff<32, 16, 8> pool;
----------------------------------------

pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079E818, offset=0, maxSize=520, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=520, vacantHead=0
------------------------------------------

----------------------------------------
lfPoolAllocator_withType<block_type, 16> pool;
----------------------------------------

pool.debugInfo(message); printf(message);
----- Debug Info for lfPoolAllocator -----
buff=0079EC90, offset=0, maxSize=520, blockSize=32, blockAlign=8, poolSize=16, usingPoolSize=0, poolRemain=16, size=0, remain=520, vacantHead=0
------------------------------------------
> block_type* p = pool.newDefault();	p=0079EC90, size=32, remain=488, pool=1/16
> pool.deleteDefault(p);	p=0079EC90, size=0, remain=520, pool=0/16

================================================================================

--------------------------------------------------------------------------------
[ Test for stdAllocator ]
--------------------------------------------------------------------------------

----------------------------------------
stdAllocator<lock_type> std_allocator;
----------------------------------------

std_allocator.debugInfo(message); printf(message);
----- Debug Info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> void* p1 = std_allocator.alloc(1);	p1=00A65290, size=0, remain=0
> void* p2 = std_allocator.alloc(1, 1);	p2=00A69768, size=0, remain=0
> void* p3 = std_allocator.alloc(1, 1);	p3=00A69778, size=0, remain=0
> void* p4 = std_allocator.alloc(1);	p4=00A69788, size=0, remain=0
> void* p5 = std_allocator.alloc(10, 32);	p5=00A69798, size=0, remain=0
> int* p6 = std_allocator.template newObj<int>();	p6=00A697B0, size=0, remain=0
> double* p7 = std_allocator.template newArray<double>(3);	p7=00A697C0, size=0, remain=0
> int* p8 = std_allocator.template newObj<int>();	p8=00A697E0, size=0, remain=0
data_t::data_t(): m_val=0
> data_t* p9 = std_allocator.template newObj<data_t>();	p9=00A697F0, size=0, remain=0
> int* p10 = std_allocator.template newObj<int>();	p10=00A69808, size=0, remain=0
data_t::data_t(123): m_val=123
> data_t* p11 = std_allocator.template newObj<data_t>(123);	p11=00A69818, size=0, remain=0
> int* p12 = std_allocator.template newObj<int>();	p12=00A69830, size=0, remain=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p13 = std_allocator.template newArray<data_t>(3);	p13=00A69840, size=0, remain=0
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p14 = std_allocator.template newArray<data_t>(3, 456);	p14=00A69878, size=0, remain=0
> void* p15 = std_allocator.alloc(2000);	p15=00A69FE8, size=0, remain=0
> void* p16 = std_allocator.alloc(10);	p16=00A698B0, size=0, remain=0
> data2_t* p17 = std_allocator.template newObj<data2_t>();	p17=00A698C8, size=0, remain=0
> int* p18 = std_allocator.template newObj<int>();	p18=00A698F0, size=0, remain=0
> data2_t* p19 = std_allocator.template newObj<data2_t>();	p19=00A69900, size=0, remain=0
> int* p20 = std_allocator.template newObj<int>();	p20=00A69928, size=0, remain=0
> data2_t* p21 = std_allocator.template newObj<data2_t>();	p21=00A69938, size=0, remain=0
std_allocator.debugInfo(message); printf(message);
----- Debug Info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> std_allocator.free(p1);	p1=00A65290, size=0, remain=0
> std_allocator.free(p2);	p2=00A69768, size=0, remain=0
> std_allocator.free(p3);	p3=00A69778, size=0, remain=0
> std_allocator.free(p4);	p4=00A69788, size=0, remain=0
> std_allocator.free(p5);	p5=00A69798, size=0, remain=0
> std_allocator.deleteObj(p6);	p6=00A697B0, size=0, remain=0
> std_allocator.deleteArray(p7, 3);	p7=00A697C0, size=0, remain=0
> std_allocator.deleteObj(p8);	p8=00A697E0, size=0, remain=0
data_t::~data_t(): m_val=0
> std_allocator.deleteObj(p9);	p9=00A697F0, size=0, remain=0
> std_allocator.deleteObj(p10);	p10=00A69808, size=0, remain=0
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=336620589
data_t::~data_t(): m_val=286288936
> std_allocator.deleteArray(p11, 3);	p11=00A69818, size=0, remain=0
> std_allocator.deleteArray(p12, 3);	p12=00A69830, size=0, remain=0
> std_allocator.free(p13);	p13=00A69840, size=0, remain=0
> std_allocator.free(p14);	p14=00A69878, size=0, remain=0
> std_allocator.free(p15);	p15=00A69FE8, size=0, remain=0
> std_allocator.free(p16);	p16=00A698B0, size=0, remain=0
> std_allocator.free(p17);	p17=00A698C8, size=0, remain=0
> std_allocator.free(p18);	p18=00A698F0, size=0, remain=0
> std_allocator.free(p19);	p19=00A69900, size=0, remain=0
> std_allocator.free(p20);	p20=00A69928, size=0, remain=0
> std_allocator.free(p21);	p21=00A69938, size=0, remain=0
std_allocator.debugInfo(message); printf(message);
----- Debug Info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------

----------------------------------------
stdAlignAllocator<lock_type> std_allocator;
----------------------------------------

std_allocator.debugInfo(message); printf(message);
----- Debug Info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> void* p1 = std_allocator.alloc(1);	p1=00A65294, size=0, remain=0
> void* p2 = std_allocator.alloc(1, 1);	p2=00A6976C, size=0, remain=0
> void* p3 = std_allocator.alloc(1, 1);	p3=00A6977C, size=0, remain=0
> void* p4 = std_allocator.alloc(1);	p4=00A6978C, size=0, remain=0
> void* p5 = std_allocator.alloc(10, 32);	p5=00A697A0, size=0, remain=0
> int* p6 = std_allocator.template newObj<int>();	p6=00A697D4, size=0, remain=0
> double* p7 = std_allocator.template newArray<double>(3);	p7=00A697F0, size=0, remain=0
> int* p8 = std_allocator.template newObj<int>();	p8=00A6981C, size=0, remain=0
data_t::data_t(): m_val=0
> data_t* p9 = std_allocator.template newObj<data_t>();	p9=00A69840, size=0, remain=0
> int* p10 = std_allocator.template newObj<int>();	p10=00A69864, size=0, remain=0
data_t::data_t(123): m_val=123
> data_t* p11 = std_allocator.template newObj<data_t>(123);	p11=00A69880, size=0, remain=0
> int* p12 = std_allocator.template newObj<int>();	p12=00A698AC, size=0, remain=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p13 = std_allocator.template newArray<data_t>(3);	p13=00A698D0, size=0, remain=0
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
data_t::data_t(456): m_val=456
> data_t* p14 = std_allocator.template newArray<data_t>(3, 456);	p14=00A69920, size=0, remain=0
> void* p15 = std_allocator.alloc(2000);	p15=00A69FEC, size=0, remain=0
> void* p16 = std_allocator.alloc(10);	p16=00A69964, size=0, remain=0
> data2_t* p17 = std_allocator.template newObj<data2_t>();	p17=00A699A0, size=0, remain=0
> int* p18 = std_allocator.template newObj<int>();	p18=00A699D4, size=0, remain=0
> data2_t* p19 = std_allocator.template newObj<data2_t>();	p19=00A69A00, size=0, remain=0
> int* p20 = std_allocator.template newObj<int>();	p20=00A69A3C, size=0, remain=0
> data2_t* p21 = std_allocator.template newObj<data2_t>();	p21=00A6A7E0, size=0, remain=0
std_allocator.debugInfo(message); printf(message);
----- Debug Info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------
> std_allocator.free(p1);	p1=00A65294, size=0, remain=0
> std_allocator.free(p2);	p2=00A6976C, size=0, remain=0
> std_allocator.free(p3);	p3=00A6977C, size=0, remain=0
> std_allocator.free(p4);	p4=00A6978C, size=0, remain=0
> std_allocator.free(p5);	p5=00A697A0, size=0, remain=0
> std_allocator.deleteObj(p6);	p6=00A697D4, size=0, remain=0
> std_allocator.deleteArray(p7, 3);	p7=00A697F0, size=0, remain=0
> std_allocator.deleteObj(p8);	p8=00A6981C, size=0, remain=0
data_t::~data_t(): m_val=0
> std_allocator.deleteObj(p9);	p9=00A69840, size=0, remain=0
> std_allocator.deleteObj(p10);	p10=00A69864, size=0, remain=0
data_t::~data_t(): m_val=123
data_t::~data_t(): m_val=7627106
data_t::~data_t(): m_val=353397804
> std_allocator.deleteArray(p11, 3);	p11=00A69880, size=0, remain=0
> std_allocator.deleteArray(p12, 3);	p12=00A698AC, size=0, remain=0
> std_allocator.free(p13);	p13=00A698D0, size=0, remain=0
> std_allocator.free(p14);	p14=00A69920, size=0, remain=0
> std_allocator.free(p15);	p15=00A69FEC, size=0, remain=0
> std_allocator.free(p16);	p16=00A69964, size=0, remain=0
> std_allocator.free(p17);	p17=00A699A0, size=0, remain=0
> std_allocator.free(p18);	p18=00A699D4, size=0, remain=0
> std_allocator.free(p19);	p19=00A69A00, size=0, remain=0
> std_allocator.free(p20);	p20=00A69A3C, size=0, remain=0
> std_allocator.free(p21);	p21=00A6A7E0, size=0, remain=0
std_allocator.debugInfo(message); printf(message);
----- Debug Info for stdAllocator -----
maxSize=0, size=0, remain=0
---------------------------------------

================================================================================

--------------------------------------------------
[ Test for polyAllocator with new/delete operator ]

> auto adapter = s_stackAllocator.adapter()
> polyAllocator poly_allocator(adapter);
poly_allocator: name="stackAllocator", mode="ManualClear"
stack:size=0,count=0, pool:size=0,pool=0
> data_t* p101 = new data_t;
data_t::data_t(): m_val=0
> data_t* p102 = new data_t[2];
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p103 = new data_t[3];
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
stack:size=128,count=3, pool:size=0,pool=0
***** BEGIN BLOCK *****
> auto nested_adapter = s_poolAllocator.adapter()
> polyAllocator nested_poly_allocator(nested_adapter);
nested_poly_allocator: name="poolAllocator", mode="-"
stack:size=128,count=3, pool:size=0,pool=0
> data_t* p201 = new data_t;
data_t::data_t(): m_val=0
> data_t* p202 = new data_t[2];
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p203 = new(std::nothrow) data_t[3];
stack:size=128,count=3, pool:size=96,pool=2
> delete p201;
data_t::~data_t(): m_val=0
> delete[] p202;
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> delete[] p203;
stack:size=128,count=3, pool:size=0,pool=0
***** END BLOCK *****
> data_t* p104 = new data_t;
data_t::data_t(): m_val=0
stack:size=144,count=4, pool:size=0,pool=0
> delete p101;
data_t::~data_t(): m_val=0
> delete[] p102;
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> delete[] p103;
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> delete p104;
data_t::~data_t(): m_val=0
----- Debug Info for scopedStackAllocator -----
maxSize=880, size=0, remain=880, count=0 (INIT: buff=00E842BC, size=144, count=0)
-----------------------------------------------
data_t::data_t(): m_val=0
----- Debug Info for scopedStackAllocator -----
maxSize=880, size=16, remain=864, count=1 (INIT: buff=00E842BC, size=144, count=0)
-----------------------------------------------
data_t::~data_t(): m_val=0
----- Debug Info for scopedStackAllocator -----
maxSize=880, size=16, remain=864, count=0 (INIT: buff=00E842BC, size=144, count=0)
-----------------------------------------------
stack:size=144,count=0, pool:size=0,pool=0

--------------------------------------------------
[ Test for polyAllocator with STL ]

> smartStackAllocator_withBuff<2048> stack;
***** BEGIN BLOCK *****
> auto adapter = stack.adapter();
> polyAllocator poly(adapter);
> std::vector<data_t> array;
> data_t data;
data_t::data_t(): m_val=0
> array.push_back(data);
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
> stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079ECEC, maxSize=2048, size=96, remain=1952, count=1
-----------------------------------------
***** END BLOCK *****
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> stack.debugInfo(message); printf(message);
----- Debug Info for stackAllocator -----
buff=0079ECEC, maxSize=2048, size=0, remain=2048, count=0
-----------------------------------------

--------------------------------------------------
[ Test for polyAllocator with GASHA_NEW/GASHA_DELETE ]

> smartStackAllocator_withBuff<2048> stack;
> auto adapter = stack.adapter();
> polyAllocator poly(adapter);
> debugAllocationObserver observer;
> poly.setDebugObserver(observer);
> data_t* p1 = GASHA_NEW(data_t);
data_t::data_t(): m_val=0
> data_t* p2 = GASHA_NEW(data_t[2]);
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> data_t* p3 = GASHA_NEW_ARRAY(data_t, 3);
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
data_t::data_t(): m_val=0
> GASHA_DELETE(p1);
data_t::~data_t(): m_val=0
> GASHA_DELETE_ARRAY(p2);
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> GASHA_DELETE_ARRAY(p3);
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
> std::vector<data_t> array;
> data_t data;
data_t::data_t(): m_val=0
> array.push_back(data);
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
> array.push_back(data);
data_t::data_t(data_t&&): m_val=0
data_t::data_t(data_t&&): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::data_t(const data_t&): m_val=0
***** BEGIN BLOCK *****
> auto nested_adapter = s_poolAllocator.adapter()
> polyAllocator nested_poly_allocator(nested_adapter);
***** END BLOCK *****
> poly.resetDebugObserver();
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0
data_t::~data_t(): m_val=0

--------------------------------------------------
[ Test for polyAllocator adapters ]

> stackAllocator<> stack_allocator(buff);
> auto adapter = stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> lfStackAllocator<> lf_stack_allocator(buff);
> auto adapter = lf_stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = lf_stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> dualStackAllocator<> dual_stack_allocator(buff);
> auto adapter = dual_stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = dual_stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> lfDualStackAllocator<> lf_dual_stack_allocator(buff);
> auto adapter = lf_dual_stack_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> auto scoped_allcator = lf_dual_stack_allocator.scopedAllocator();
> auto adapter = scoped_allcator.adapter();
> polyAllocator poly_allocator(adapter);
> monoAllocator<> mono_allocator(buff);
> auto adapter = mono_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> lfMonoAllocator lf_mono_allocator(buff);
> auto adapter = lf_mono_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> stdAllocator<> std_allocator;
> auto adapter = std_allocator.adapter();
> polyAllocator poly_allocator(adapter);
> stdAlignAllocator<> std_align_allocator;
> auto adapter = std_align_allocator.adapter();
> polyAllocator poly_allocator(adapter);

================================================================================

--------------------------------------------------------------------------------
[ Test for performance of single thread ]
--------------------------------------------------------------------------------

------------------------------------------------------------
"smartStackAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.006006100	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.041039000	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.122116800	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"lfSmartStackAllocator" : 1000000 * times allocate & free
* elapsed time = 0.026025800	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<>::scopedAllocator" : 1000000 * times allocate & free
* elapsed time = 0.005004700	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"polyAllocator with smartStackAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.008007600	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartDualStackAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.005003200	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.041040800	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.134126400	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"lfSmartDualStackAllocator" : 1000000 * times allocate & free
* elapsed time = 0.070068000	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<>::scopedAllocator" : 1000000 * times allocate & free
* elapsed time = 0.008007700	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartDualStackAllocator<>::scopedDualAllocator" : 1000000 * times allocate & free
* elapsed time = 0.007006700	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"polyAllocator with smartDualStackAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.023021700	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"monoAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.003002900	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"monoAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.034032300	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"monoAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.090085900	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"lfMonoAllocator" : 1000000 * times allocate & free
* elapsed time = 0.019017300	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"polyAllocator with monoAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.009009400	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"poolAllocator<1024>" : 1000000 * times allocate & free
* elapsed time = 0.014013200	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"poolAllocator<1024, spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.040038100	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"poolAllocator<1024, std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.103098300	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"lfPoolAllocator<1024>" : 1000000 * times allocate & free
* elapsed time = 0.052049600	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"polyAllocator with poolAllocator<1024>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.009008500	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"stdAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.071067700	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.068064000	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.109104100	maxSize=0, size=0, remain=0

------------------------------------------------------------
"polyAllocator with stdAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.058055100	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<>" : 1000000 * times allocate & free
* elapsed time = 0.063060400	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<spinLock>" : 1000000 * times allocate & free
* elapsed time = 0.075071000	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<std::mutex>" : 1000000 * times allocate & free
* elapsed time = 0.126121100	maxSize=0, size=0, remain=0

------------------------------------------------------------
"polyAllocator with stdAlignAllocator<>::adapter" : 1000000 * times allocate & free
* elapsed time = 0.073068700	maxSize=0, size=0, remain=0

--------------------------------------------------------------------------------
[ Test for performance of multi threada ]
--------------------------------------------------------------------------------

------------------------------------------------------------
"smartStackAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.233222600	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartStackAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.419398300	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"lfSmartStackAllocator" : 100000 * times allocate & free
* elapsed time = 0.211201700	maxSize=16384, size=0, remain=16384, count=0

------------------------------------------------------------
"smartDualStackAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.216205900	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"smartDualStackAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.470447600	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"lfSmartDualStackAllocator" : 100000 * times allocate & free
* elapsed time = 0.210200600	maxSize=16384, size=0(ASC=0,DESC=0), remain=16384, count=0(ASC=0,DESC=0)

------------------------------------------------------------
"monoAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.218125100	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"monoAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.415266700	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"lfMonoAllocator" : 100000 * times allocate & free
* elapsed time = 0.224973300	maxSize=16384, size=0, remain=16384, isAllocated=false

------------------------------------------------------------
"poolAllocator<1024, spinLock>" : 100000 * times allocate & free
* elapsed time = 0.226779000	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"poolAllocator<1024, std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.541536100	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"lfPoolAllocator<1024>" : 100000 * times allocate & free
* elapsed time = 0.225215000	maxSize=16384, size=0, remain=16384, pool=0/1024

------------------------------------------------------------
"stdAllocator<>" : 100000 * times allocate & free
* elapsed time = 0.215349000	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.229474800	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.214204700	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<>" : 100000 * times allocate & free
* elapsed time = 0.225213500	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<spinLock>" : 100000 * times allocate & free
* elapsed time = 0.220208200	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<std::mutex>" : 100000 * times allocate & free
* elapsed time = 0.289275700	maxSize=0, size=0, remain=0

------------------------------------------------------------
"stdAlignAllocator<>" : 100000 * times allocate & free
* elapsed time = 0.218208200	maxSize=0, size=0, remain=0

================================================================================

--------------------------------------------------------------------------------
[ Test for new/delete operators]
--------------------------------------------------------------------------------
new st_n: sizeof(st_n)=1, alignof(st_n)=1, real_size=1
new st_n[2]: sizeof(st_n)=1, alignof(st_n)=1, real_size=6
new st_a1: sizeof(st_a1)=1, alignof(st_a1)=1, real_size=1
new st_a1[2]: sizeof(st_a1)=1, alignof(st_a1)=1, real_size=6
new st_a2: sizeof(st_a2)=2, alignof(st_a2)=2, real_size=2
new st_a2[2]: sizeof(st_a2)=2, alignof(st_a2)=2, real_size=8
new st_a4: sizeof(st_a4)=4, alignof(st_a4)=4, real_size=4
new st_a4[2]: sizeof(st_a4)=4, alignof(st_a4)=4, real_size=12
new st_a8: sizeof(st_a8)=8, alignof(st_a8)=8, real_size=8
new st_a8[2]: sizeof(st_a8)=8, alignof(st_a8)=8, real_size=24
new st_a16: sizeof(st_a16)=16, alignof(st_a16)=16, real_size=16
new st_a16[2]: sizeof(st_a16)=16, alignof(st_a16)=16, real_size=48
new st_a32: sizeof(st_a32)=32, alignof(st_a32)=32, real_size=32
new st_a32[2]: sizeof(st_a32)=32, alignof(st_a32)=32, real_size=80
new st_a64: sizeof(st_a64)=64, alignof(st_a64)=64, real_size=64
new st_a64[2]: sizeof(st_a64)=64, alignof(st_a64)=64, real_size=144
new st_a128: sizeof(st_a128)=128, alignof(st_a128)=128, real_size=128
new st_a128[2]: sizeof(st_a128)=128, alignof(st_a128)=128, real_size=272
- end -
