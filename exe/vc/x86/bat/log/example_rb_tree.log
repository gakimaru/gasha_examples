--- Make table ---
20 registered.
*elapsed_time=0.000000000 sec
--- Show tree (count=20) ---
depth_max=5 (limit for showing=4)
*elapsed_time=0.000000000 sec
--- Show nodes count (count=20) ---
depth_max=5, width_max=32
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=20) ---
*elapsed_time=0.000000000 sec
--- Show nodes descending (count=20) ---
*elapsed_time=0.000000000 sec
--- Search node ---
*elapsed_time=0.000000000 sec
--- Search nearest node for smaller ---
*elapsed_time=0.000000000 sec
--- Search nearest node for larger ---
*elapsed_time=0.000000000 sec
--- Remove nodes ---
5 removed.
*elapsed_time=0.000000000 sec
--- Show tree (count=15) ---
depth_max=4 (limit for showing=4)
*elapsed_time=0.000000000 sec
--- Show nodes count (count=15) ---
depth_max=4, width_max=16
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=15) ---
*elapsed_time=0.000000000 sec
--- Remove each-key nodes ---
1 removed.
*elapsed_time=0.000000000 sec
--- Show tree (count=14) ---
depth_max=4 (limit for showing=4)
*elapsed_time=0.000000000 sec
--- Show nodes count (count=14) ---
depth_max=4, width_max=16
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=14) ---
*elapsed_time=0.000000000 sec
--- Remove all nodes ---
0 removed.
*elapsed_time=0.000000000 sec
--- Show tree (count=14) ---
depth_max=4 (limit for showing=4)
*elapsed_time=0.000000000 sec
--- Show nodes count (count=14) ---
depth_max=4, width_max=16
*elapsed_time=0.000000000 sec
--- Show nodes ascending (count=14) ---
*elapsed_time=0.000000000 sec
--- end ---
*elapsed_time=0.000000000 sec

--- example_simple_linked_list ---
data = {0xc02b79a5,15} {0xe68a9e4d,13} {0x07b1eeba,11}
.findValue("KEY5"): ite={0xc02b79a5, 15}
data = {0xc02b79a5,{5,6}} {0xe68a9e4d,{3,4}} {0x07b1eeba,{1,2}}
.findValue("KEY5"): ite={0xc02b79a5,{5:6}}
