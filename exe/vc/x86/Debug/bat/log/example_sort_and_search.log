============================================================
Initialize
============================================================
----- Make Array(shuffle1) -----
[NG] Array is NOT ordered! [NG=488 / record(s)=1000]
Array is stable.
----- Make Array(shuffle2) -----
[NG] Array is NOT ordered! [NG=499 / record(s)=1000]
Array is stable.
----- Make Array(shuffle3) -----
[NG] Array is NOT ordered! [NG=494 / record(s)=1000]
Array is stable.
----- Make Array(ordered) -----
Array is ordered. [record(s)=1000]
Array is stable.
----- Make Array(reversed) -----
[NG] Array is NOT ordered! [NG=333 / record(s)=1000]
Array is stable.
----- Make Array(ordered_without_both_ends) -----
[NG] Array is NOT ordered! [NG=2 / record(s)=1000]
Array is stable.
----- Make Array(hard_with_quick_sort) -----
[NG] Array is NOT ordered! [NG=507 / record(s)=1000]
Array is stable.


============================================================
Sort type: [C-Library qsort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001000600 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [C-Library qsort]
* Total time       = 0.004003900 sec.
* Average time     = 0.000571986 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.001001200 sec.
============================================================


============================================================
Sort type: [STL std::sort(with function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002001800 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002002600 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001001100 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002001400 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with function)]
* Total time       = 0.011010200 sec.
* Average time     = 0.001572886 sec.
* Min time         = 0.001000900 sec.
* Max time         = 0.002002600 sec.
============================================================


============================================================
Sort type: [STL std::sort(with inline function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002002100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003002900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002002100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001000800 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002001800 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with inline function)]
* Total time       = 0.012011800 sec.
* Average time     = 0.001715971 sec.
* Min time         = 0.001000800 sec.
* Max time         = 0.003002900 sec.
============================================================


============================================================
Sort type: [STL std::sort(with functor)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003003000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002002000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002001800 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with functor)]
* Total time       = 0.013012300 sec.
* Average time     = 0.001858900 sec.
* Min time         = 0.001000900 sec.
* Max time         = 0.003003000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with lamda)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002002000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003002700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002002000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001000800 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002001800 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with lamda)]
* Total time       = 0.012011400 sec.
* Average time     = 0.001715914 sec.
* Min time         = 0.001000800 sec.
* Max time         = 0.003002700 sec.
============================================================


============================================================
Sort type: [STL std::stable_sort *Not inplace]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.003002900 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003003000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002001800 sec.
Array is ordered. [record(s)=1000]
Array is stable.

============================================================
Sort type: [STL std::stable_sort *Not inplace]
* Total time       = 0.013012000 sec.
* Average time     = 0.001858857 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.003003000 sec.
============================================================


============================================================
Sort type: [Bubble sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.048045800 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=247900 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.048048100 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=244992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.048044000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251557 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.082079500 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.011010300 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.065062100 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373277 count(s)]

============================================================
Sort type: [Bubble sort]
* Total time       = 0.302289800 sec.
* Average time     = 0.043184257 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.082079500 sec.
* Total Swapped    =   1618222 count(s)
* Average  Swapped =    231174 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Shaker sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.045042000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=247900 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.045042500 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=244992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.079074800 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251557 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.109103900 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.072068400 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373277 count(s)]

============================================================
Sort type: [Shaker sort]
* Total time       = 0.350331600 sec.
* Average time     = 0.050047371 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.109103900 sec.
* Total Swapped    =   1618222 count(s)
* Average  Swapped =    231174 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Odd-Even sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.022021100 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=247900 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.019017900 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=244992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.020019400 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251557 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.036034400 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.008007600 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.033031400 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373277 count(s)]

============================================================
Sort type: [Odd-Even sort]
* Total time       = 0.138131800 sec.
* Average time     = 0.019733114 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.036034400 sec.
* Total Swapped    =   1618222 count(s)
* Average  Swapped =    231174 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Shear sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.005004700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=48827 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.004004100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=48914 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.004003500 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=49588 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=14850 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.004003500 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=43102 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=16789 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.003002700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=48619 count(s)]

============================================================
Sort type: [Shear sort]
* Total time       = 0.022020900 sec.
* Average time     = 0.003145843 sec.
* Min time         = 0.001001200 sec.
* Max time         = 0.005004700 sec.
* Total Swapped    =    270689 count(s)
* Average  Swapped =     38669 count(s)
* Min Swapped      =     14850 count(s)
* Max Swapped      =     49588 count(s)
============================================================


============================================================
Sort type: [Comb sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3949 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002002100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3942 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3917 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001001100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=1401 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=754 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=4108 count(s)]

============================================================
Sort type: [Comb sort]
* Total time       = 0.008007600 sec.
* Average time     = 0.001143943 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.002002100 sec.
* Total Swapped    =     18071 count(s)
* Average  Swapped =      2581 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      4108 count(s)
============================================================


============================================================
Sort type: [Gnome sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.058055100 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=247900 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.050047500 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=244992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.042039900 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251557 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.083079800 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.062059300 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373277 count(s)]

============================================================
Sort type: [Gnome sort]
* Total time       = 0.295281600 sec.
* Average time     = 0.042183086 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.083079800 sec.
* Total Swapped    =   1618222 count(s)
* Average  Swapped =    231174 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Quick sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2538 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2552 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2597 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=333 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=833 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=334 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001001100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2827 count(s)]

============================================================
Sort type: [Quick sort]
* Total time       = 0.003002900 sec.
* Average time     = 0.000428986 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.001001100 sec.
* Total Swapped    =     12014 count(s)
* Average  Swapped =      1716 count(s)
* Min Swapped      =       333 count(s)
* Max Swapped      =      2827 count(s)
============================================================


============================================================
Sort type: [Selection sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.011005900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=993 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.012011700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=987 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.012011200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=995 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.011010500 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.012011500 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=833 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.011010500 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.012011500 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=994 count(s)]

============================================================
Sort type: [Selection sort]
* Total time       = 0.081072800 sec.
* Average time     = 0.011581829 sec.
* Min time         = 0.011005900 sec.
* Max time         = 0.012011700 sec.
* Total Swapped    =      4805 count(s)
* Average  Swapped =       686 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       995 count(s)
============================================================


============================================================
Sort type: [Heap sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002002000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=9605 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002002100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=9644 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=9619 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.003002700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=15116 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.002002000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=8312 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.003002700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=14570 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001001100 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=8926 count(s)]

============================================================
Sort type: [Heap sort]
* Total time       = 0.015014300 sec.
* Average time     = 0.002144900 sec.
* Min time         = 0.001001100 sec.
* Max time         = 0.003002700 sec.
* Total Swapped    =     75792 count(s)
* Average  Swapped =     10827 count(s)
* Min Swapped      =      8312 count(s)
* Max Swapped      =     15116 count(s)
============================================================


============================================================
Sort type: [Insertion sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.013012300 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=989 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.013012400 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=988 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.014013200 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=993 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.028026700 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.020019000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=994 count(s)]

============================================================
Sort type: [Insertion sort]
* Total time       = 0.088083600 sec.
* Average time     = 0.012583371 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.028026700 sec.
* Total Swapped    =      5962 count(s)
* Average  Swapped =       851 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       999 count(s)
============================================================


============================================================
Sort type: [Shell sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3268 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3343 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002001700 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3339 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001001200 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2652 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=704 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3428 count(s)]

============================================================
Sort type: [Shell sort]
* Total time       = 0.006005900 sec.
* Average time     = 0.000857986 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.002001700 sec.
* Total Swapped    =     16734 count(s)
* Average  Swapped =      2390 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      3428 count(s)
============================================================


============================================================
Sort type: [Inplace Merge sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.009008200 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4278 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.009008800 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4290 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.009008500 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4295 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.017016200 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4516 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1006 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.013012300 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4303 count(s)]

============================================================
Sort type: [Inplace Merge sort]
* Total time       = 0.057054000 sec.
* Average time     = 0.008150571 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.017016200 sec.
* Total Swapped    =     22688 count(s)
* Average  Swapped =      3241 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      4516 count(s)
============================================================


============================================================
Sort type: [Intro sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001001400 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2296 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2321 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2327 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=576 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=78 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2578 count(s)]

============================================================
Sort type: [Intro sort]
* Total time       = 0.002002300 sec.
* Average time     = 0.000286043 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.001001400 sec.
* Total Swapped    =     10176 count(s)
* Average  Swapped =      1453 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      2578 count(s)
============================================================


============================================================
Sort type: [Radix sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1000 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001001100 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1000 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001000900 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1000 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

============================================================
Sort type: [Radix sort]
* Total time       = 0.002002000 sec.
* Average time     = 0.000286000 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.001001100 sec.
* Total Swapped    =      5002 count(s)
* Average  Swapped =       714 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      1000 count(s)
============================================================


============================================================
Result(Summary)
============================================================
Array Element size = 80 Bytes
Array Element(s)   = 1000 Count(s)
Total Array size   = 80000 Bytes
--------------------------------------------------------------------------------------------------------------------------------
- Sort name:                Elapsed Time (Sum/Average/Min/Max) [sec.]             Swapped (Sum/Average/Min/Max) [count(s)]
--------------------------------------------------------------------------------------------------------------------------------
[C-Library sort](Quick sort)
- qsort(inline-function):   0.004003900/  0.000571986/  0.000000000/  0.001001200
--------------------------------------------------------------------------------------------------------------------------------
[STL sort](Intro sort)
- std::sort(function):      0.011010200/  0.001572886/  0.001000900/  0.002002600
- std::sort(inline-func):   0.012011800/  0.001715971/  0.001000800/  0.003002900
- std::sort(functor):       0.013012300/  0.001858900/  0.001000900/  0.003003000
- std::sort(lambda):        0.012011400/  0.001715914/  0.001000800/  0.003002700
--------------------------------------------------------------------------------------------------------------------------------
[STL stable sort](Merge sort) *Not In-place sort
- std::stable_sort<S>:      0.013012000/  0.001858857/  0.000000000/  0.003003000
--------------------------------------------------------------------------------------------------------------------------------
[Exchange sorts]
- Bubble sort<S>:           0.302289800/  0.043184257/  0.000000000/  0.082079500    1618222/     231174/          0/     498501
- Shaker sort<S>:           0.350331600/  0.050047371/  0.000000000/  0.109103900    1618222/     231174/          0/     498501
- Odd-Even sort<S>:         0.138131800/  0.019733114/  0.000000000/  0.036034400    1618222/     231174/          0/     498501
- Shear sort:               0.022020900/  0.003145843/  0.001001200/  0.005004700     270689/      38669/      14850/      49588
- Comb sort:                0.008007600/  0.001143943/  0.000000000/  0.002002100      18071/       2581/          0/       4108
- Gnome sort<S>:            0.295281600/  0.042183086/  0.000000000/  0.083079800    1618222/     231174/          0/     498501
--------------------------------------------------------------------------------------------------------------------------------
[Partition-exchange sorts]
- Quick sort:               0.003002900/  0.000428986/  0.000000000/  0.001001100      12014/       1716/        333/       2827
--------------------------------------------------------------------------------------------------------------------------------
[Selection sorts]
- Selection sort:           0.081072800/  0.011581829/  0.011005900/  0.012011700       4805/        686/          0/        995
- Heap sort:                0.015014300/  0.002144900/  0.001001100/  0.003002700      75792/      10827/       8312/      15116
--------------------------------------------------------------------------------------------------------------------------------
[Insertion sorts]
- Insertion sort<S>:        0.088083600/  0.012583371/  0.000000000/  0.028026700       5962/        851/          0/        999
- Shell sort:               0.006005900/  0.000857986/  0.000000000/  0.002001700      16734/       2390/          0/       3428
--------------------------------------------------------------------------------------------------------------------------------
[Merge sorts]
- Inplace-Merge sort<S>:    0.057054000/  0.008150571/  0.000000000/  0.017016200      22688/       3241/          0/       4516
--------------------------------------------------------------------------------------------------------------------------------
[Hybrid sorts]
- Intro sort:               0.002002300/  0.000286043/  0.000000000/  0.001001400      10176/       1453/          0/       2578
--------------------------------------------------------------------------------------------------------------------------------
[Distribution sorts] *Not In-place sort
- Radix sort<S>:            0.002002000/  0.000286000/  0.000000000/  0.001001100       5002/        714/          0/       1000
--------------------------------------------------------------------------------------------------------------------------------
* <S> ... Stable sort algorithm.


[Variation test for sort(intro-sort)]
(result=2296)
(result1=2296)
(result3=2296)
(result4=2296)
(result5=2296)
(result6=2296)
(result8=2296)
(result9=2296)
(result10=2296)
(result11=2316)

[Variation test for linear-search]
target=-1
  linearSearchValue(*array_shuffle1, target);
    (data_def=00000000)
    (data1_def=00000000)
    (data2_def=00000000)
    (data3_def=00000000)
    (data4_def=00000000)
    (data5_def=00000000)
    (data8_def=00000000)
    (data9_def=00000000)
    (data10_def=00000000)
    (data11_def=00000000)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00000000)
    (data1=00000000)
    (data2=00000000)
    (data3=00000000)
    (data4=00000000)
    (data5=00000000)
    (data8=00000000)
    (data9=00000000)
    (data10=00000000)
    (data11=00000000)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00000000)
    (data1_val=00000000)
    (data2_val=00000000)
    (data3_val=00000000)
    (data4_val=00000000)
    (data5_val=00000000)
    (data8_val=00000000)
    (data9_val=00000000)
    (data10_val=00000000)
    (data11_val=00000000)
target=-1, linearSearch=nullptr
target=0
  linearSearchValue(*array_shuffle1, target);
    (data_def=007204E0)
    (data1_def=007204E0)
    (data2_def=007204E0)
    (data3_def=007204E0)
    (data4_def=007204E0)
    (data5_def=007204E0)
    (data8_def=007204E0)
    (data9_def=007204E0)
    (data10_def=007204E0)
    (data11_def=007204E0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=007204E0)
    (data1=007204E0)
    (data2=007204E0)
    (data3=007204E0)
    (data4=007204E0)
    (data5=007204E0)
    (data8=007204E0)
    (data9=007204E0)
    (data10=007204E0)
    (data11=007204E0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=007204E0)
    (data1_val=007204E0)
    (data2_val=007204E0)
    (data3_val=007204E0)
    (data4_val=007204E0)
    (data5_val=007204E0)
    (data8_val=007204E0)
    (data9_val=007204E0)
    (data10_val=007204E0)
    (data11_val=007204E0)
target=0, linearSearch=[0, 304]
target=1
  linearSearchValue(*array_shuffle1, target);
    (data_def=007290E0)
    (data1_def=007290E0)
    (data2_def=007290E0)
    (data3_def=007290E0)
    (data4_def=007290E0)
    (data5_def=007290E0)
    (data8_def=007290E0)
    (data9_def=007290E0)
    (data10_def=007290E0)
    (data11_def=007290E0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=007290E0)
    (data1=007290E0)
    (data2=007290E0)
    (data3=007290E0)
    (data4=007290E0)
    (data5=007290E0)
    (data8=007290E0)
    (data9=007290E0)
    (data10=007290E0)
    (data11=007290E0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=007290E0)
    (data1_val=007290E0)
    (data2_val=007290E0)
    (data3_val=007290E0)
    (data4_val=007290E0)
    (data5_val=007290E0)
    (data8_val=007290E0)
    (data9_val=007290E0)
    (data10_val=007290E0)
    (data11_val=007290E0)
target=1, linearSearch=[1, 752]
target=2
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071FB30)
    (data1_def=0071FB30)
    (data2_def=0071FB30)
    (data3_def=0071FB30)
    (data4_def=0071FB30)
    (data5_def=0071FB30)
    (data8_def=0071FB30)
    (data9_def=0071FB30)
    (data10_def=0071FB30)
    (data11_def=0071FB30)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071FB30)
    (data1=0071FB30)
    (data2=0071FB30)
    (data3=0071FB30)
    (data4=0071FB30)
    (data5=0071FB30)
    (data8=0071FB30)
    (data9=0071FB30)
    (data10=0071FB30)
    (data11=0071FB30)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071FB30)
    (data1_val=0071FB30)
    (data2_val=0071FB30)
    (data3_val=0071FB30)
    (data4_val=0071FB30)
    (data5_val=0071FB30)
    (data8_val=0071FB30)
    (data9_val=0071FB30)
    (data10_val=0071FB30)
    (data11_val=0071FB30)
target=2, linearSearch=[2, 273]
target=3
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071D6A0)
    (data1_def=0071D6A0)
    (data2_def=0071D6A0)
    (data3_def=0071D6A0)
    (data4_def=0071D6A0)
    (data5_def=0071D6A0)
    (data8_def=0071D6A0)
    (data9_def=0071D6A0)
    (data10_def=0071D6A0)
    (data11_def=0071D6A0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071D6A0)
    (data1=0071D6A0)
    (data2=0071D6A0)
    (data3=0071D6A0)
    (data4=0071D6A0)
    (data5=0071D6A0)
    (data8=0071D6A0)
    (data9=0071D6A0)
    (data10=0071D6A0)
    (data11=0071D6A0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071D6A0)
    (data1_val=0071D6A0)
    (data2_val=0071D6A0)
    (data3_val=0071D6A0)
    (data4_val=0071D6A0)
    (data5_val=0071D6A0)
    (data8_val=0071D6A0)
    (data9_val=0071D6A0)
    (data10_val=0071D6A0)
    (data11_val=0071D6A0)
target=3, linearSearch=[3, 156]
target=4
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071AB80)
    (data1_def=0071AB80)
    (data2_def=0071AB80)
    (data3_def=0071AB80)
    (data4_def=0071AB80)
    (data5_def=0071AB80)
    (data8_def=0071AB80)
    (data9_def=0071AB80)
    (data10_def=0071AB80)
    (data11_def=0071AB80)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071AB80)
    (data1=0071AB80)
    (data2=0071AB80)
    (data3=0071AB80)
    (data4=0071AB80)
    (data5=0071AB80)
    (data8=0071AB80)
    (data9=0071AB80)
    (data10=0071AB80)
    (data11=0071AB80)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071AB80)
    (data1_val=0071AB80)
    (data2_val=0071AB80)
    (data3_val=0071AB80)
    (data4_val=0071AB80)
    (data5_val=0071AB80)
    (data8_val=0071AB80)
    (data9_val=0071AB80)
    (data10_val=0071AB80)
    (data11_val=0071AB80)
target=4, linearSearch=[4, 18]
target=5
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071BCB0)
    (data1_def=0071BCB0)
    (data2_def=0071BCB0)
    (data3_def=0071BCB0)
    (data4_def=0071BCB0)
    (data5_def=0071BCB0)
    (data8_def=0071BCB0)
    (data9_def=0071BCB0)
    (data10_def=0071BCB0)
    (data11_def=0071BCB0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071BCB0)
    (data1=0071BCB0)
    (data2=0071BCB0)
    (data3=0071BCB0)
    (data4=0071BCB0)
    (data5=0071BCB0)
    (data8=0071BCB0)
    (data9=0071BCB0)
    (data10=0071BCB0)
    (data11=0071BCB0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071BCB0)
    (data1_val=0071BCB0)
    (data2_val=0071BCB0)
    (data3_val=0071BCB0)
    (data4_val=0071BCB0)
    (data5_val=0071BCB0)
    (data8_val=0071BCB0)
    (data9_val=0071BCB0)
    (data10_val=0071BCB0)
    (data11_val=0071BCB0)
target=5, linearSearch=[5, 73]
target=6
  linearSearchValue(*array_shuffle1, target);
    (data_def=00721110)
    (data1_def=00721110)
    (data2_def=00721110)
    (data3_def=00721110)
    (data4_def=00721110)
    (data5_def=00721110)
    (data8_def=00721110)
    (data9_def=00721110)
    (data10_def=00721110)
    (data11_def=00721110)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00721110)
    (data1=00721110)
    (data2=00721110)
    (data3=00721110)
    (data4=00721110)
    (data5=00721110)
    (data8=00721110)
    (data9=00721110)
    (data10=00721110)
    (data11=00721110)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00721110)
    (data1_val=00721110)
    (data2_val=00721110)
    (data3_val=00721110)
    (data4_val=00721110)
    (data5_val=00721110)
    (data8_val=00721110)
    (data9_val=00721110)
    (data10_val=00721110)
    (data11_val=00721110)
target=6, linearSearch=[6, 343]
target=7
  linearSearchValue(*array_shuffle1, target);
    (data_def=00724180)
    (data1_def=00724180)
    (data2_def=00724180)
    (data3_def=00724180)
    (data4_def=00724180)
    (data5_def=00724180)
    (data8_def=00724180)
    (data9_def=00724180)
    (data10_def=00724180)
    (data11_def=00724180)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00724180)
    (data1=00724180)
    (data2=00724180)
    (data3=00724180)
    (data4=00724180)
    (data5=00724180)
    (data8=00724180)
    (data9=00724180)
    (data10=00724180)
    (data11=00724180)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00724180)
    (data1_val=00724180)
    (data2_val=00724180)
    (data3_val=00724180)
    (data4_val=00724180)
    (data5_val=00724180)
    (data8_val=00724180)
    (data9_val=00724180)
    (data10_val=00724180)
    (data11_val=00724180)
target=7, linearSearch=[7, 498]
target=8
  linearSearchValue(*array_shuffle1, target);
    (data_def=00721B10)
    (data1_def=00721B10)
    (data2_def=00721B10)
    (data3_def=00721B10)
    (data4_def=00721B10)
    (data5_def=00721B10)
    (data8_def=00721B10)
    (data9_def=00721B10)
    (data10_def=00721B10)
    (data11_def=00721B10)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00721B10)
    (data1=00721B10)
    (data2=00721B10)
    (data3=00721B10)
    (data4=00721B10)
    (data5=00721B10)
    (data8=00721B10)
    (data9=00721B10)
    (data10=00721B10)
    (data11=00721B10)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00721B10)
    (data1_val=00721B10)
    (data2_val=00721B10)
    (data3_val=00721B10)
    (data4_val=00721B10)
    (data5_val=00721B10)
    (data8_val=00721B10)
    (data9_val=00721B10)
    (data10_val=00721B10)
    (data11_val=00721B10)
target=8, linearSearch=[8, 375]
target=9
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071CAC0)
    (data1_def=0071CAC0)
    (data2_def=0071CAC0)
    (data3_def=0071CAC0)
    (data4_def=0071CAC0)
    (data5_def=0071CAC0)
    (data8_def=0071CAC0)
    (data9_def=0071CAC0)
    (data10_def=0071CAC0)
    (data11_def=0071CAC0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071CAC0)
    (data1=0071CAC0)
    (data2=0071CAC0)
    (data3=0071CAC0)
    (data4=0071CAC0)
    (data5=0071CAC0)
    (data8=0071CAC0)
    (data9=0071CAC0)
    (data10=0071CAC0)
    (data11=0071CAC0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071CAC0)
    (data1_val=0071CAC0)
    (data2_val=0071CAC0)
    (data3_val=0071CAC0)
    (data4_val=0071CAC0)
    (data5_val=0071CAC0)
    (data8_val=0071CAC0)
    (data9_val=0071CAC0)
    (data10_val=0071CAC0)
    (data11_val=0071CAC0)
target=9, linearSearch=[9, 118]
target=10
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071C2F0)
    (data1_def=0071C2F0)
    (data2_def=0071C2F0)
    (data3_def=0071C2F0)
    (data4_def=0071C2F0)
    (data5_def=0071C2F0)
    (data8_def=0071C2F0)
    (data9_def=0071C2F0)
    (data10_def=0071C2F0)
    (data11_def=0071C2F0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071C2F0)
    (data1=0071C2F0)
    (data2=0071C2F0)
    (data3=0071C2F0)
    (data4=0071C2F0)
    (data5=0071C2F0)
    (data8=0071C2F0)
    (data9=0071C2F0)
    (data10=0071C2F0)
    (data11=0071C2F0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071C2F0)
    (data1_val=0071C2F0)
    (data2_val=0071C2F0)
    (data3_val=0071C2F0)
    (data4_val=0071C2F0)
    (data5_val=0071C2F0)
    (data8_val=0071C2F0)
    (data9_val=0071C2F0)
    (data10_val=0071C2F0)
    (data11_val=0071C2F0)
target=10, linearSearch=[10, 93]
target=11
  linearSearchValue(*array_shuffle1, target);
    (data_def=00726700)
    (data1_def=00726700)
    (data2_def=00726700)
    (data3_def=00726700)
    (data4_def=00726700)
    (data5_def=00726700)
    (data8_def=00726700)
    (data9_def=00726700)
    (data10_def=00726700)
    (data11_def=00726700)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00726700)
    (data1=00726700)
    (data2=00726700)
    (data3=00726700)
    (data4=00726700)
    (data5=00726700)
    (data8=00726700)
    (data9=00726700)
    (data10=00726700)
    (data11=00726700)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00726700)
    (data1_val=00726700)
    (data2_val=00726700)
    (data3_val=00726700)
    (data4_val=00726700)
    (data5_val=00726700)
    (data8_val=00726700)
    (data9_val=00726700)
    (data10_val=00726700)
    (data11_val=00726700)
target=11, linearSearch=[11, 618]
target=12
  linearSearchValue(*array_shuffle1, target);
    (data_def=007256C0)
    (data1_def=007256C0)
    (data2_def=007256C0)
    (data3_def=007256C0)
    (data4_def=007256C0)
    (data5_def=007256C0)
    (data8_def=007256C0)
    (data9_def=007256C0)
    (data10_def=007256C0)
    (data11_def=007256C0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=007256C0)
    (data1=007256C0)
    (data2=007256C0)
    (data3=007256C0)
    (data4=007256C0)
    (data5=007256C0)
    (data8=007256C0)
    (data9=007256C0)
    (data10=007256C0)
    (data11=007256C0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=007256C0)
    (data1_val=007256C0)
    (data2_val=007256C0)
    (data3_val=007256C0)
    (data4_val=007256C0)
    (data5_val=007256C0)
    (data8_val=007256C0)
    (data9_val=007256C0)
    (data10_val=007256C0)
    (data11_val=007256C0)
target=12, linearSearch=[12, 566]
target=13
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071BD00)
    (data1_def=0071BD00)
    (data2_def=0071BD00)
    (data3_def=0071BD00)
    (data4_def=0071BD00)
    (data5_def=0071BD00)
    (data8_def=0071BD00)
    (data9_def=0071BD00)
    (data10_def=0071BD00)
    (data11_def=0071BD00)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071BD00)
    (data1=0071BD00)
    (data2=0071BD00)
    (data3=0071BD00)
    (data4=0071BD00)
    (data5=0071BD00)
    (data8=0071BD00)
    (data9=0071BD00)
    (data10=0071BD00)
    (data11=0071BD00)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071BD00)
    (data1_val=0071BD00)
    (data2_val=0071BD00)
    (data3_val=0071BD00)
    (data4_val=0071BD00)
    (data5_val=0071BD00)
    (data8_val=0071BD00)
    (data9_val=0071BD00)
    (data10_val=0071BD00)
    (data11_val=0071BD00)
target=13, linearSearch=[13, 74]
target=14
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071AC20)
    (data1_def=0071AC20)
    (data2_def=0071AC20)
    (data3_def=0071AC20)
    (data4_def=0071AC20)
    (data5_def=0071AC20)
    (data8_def=0071AC20)
    (data9_def=0071AC20)
    (data10_def=0071AC20)
    (data11_def=0071AC20)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071AC20)
    (data1=0071AC20)
    (data2=0071AC20)
    (data3=0071AC20)
    (data4=0071AC20)
    (data5=0071AC20)
    (data8=0071AC20)
    (data9=0071AC20)
    (data10=0071AC20)
    (data11=0071AC20)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071AC20)
    (data1_val=0071AC20)
    (data2_val=0071AC20)
    (data3_val=0071AC20)
    (data4_val=0071AC20)
    (data5_val=0071AC20)
    (data8_val=0071AC20)
    (data9_val=0071AC20)
    (data10_val=0071AC20)
    (data11_val=0071AC20)
target=14, linearSearch=[14, 20]
target=15
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071B440)
    (data1_def=0071B440)
    (data2_def=0071B440)
    (data3_def=0071B440)
    (data4_def=0071B440)
    (data5_def=0071B440)
    (data8_def=0071B440)
    (data9_def=0071B440)
    (data10_def=0071B440)
    (data11_def=0071B440)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071B440)
    (data1=0071B440)
    (data2=0071B440)
    (data3=0071B440)
    (data4=0071B440)
    (data5=0071B440)
    (data8=0071B440)
    (data9=0071B440)
    (data10=0071B440)
    (data11=0071B440)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071B440)
    (data1_val=0071B440)
    (data2_val=0071B440)
    (data3_val=0071B440)
    (data4_val=0071B440)
    (data5_val=0071B440)
    (data8_val=0071B440)
    (data9_val=0071B440)
    (data10_val=0071B440)
    (data11_val=0071B440)
target=15, linearSearch=[15, 46]
target=16
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071D380)
    (data1_def=0071D380)
    (data2_def=0071D380)
    (data3_def=0071D380)
    (data4_def=0071D380)
    (data5_def=0071D380)
    (data8_def=0071D380)
    (data9_def=0071D380)
    (data10_def=0071D380)
    (data11_def=0071D380)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071D380)
    (data1=0071D380)
    (data2=0071D380)
    (data3=0071D380)
    (data4=0071D380)
    (data5=0071D380)
    (data8=0071D380)
    (data9=0071D380)
    (data10=0071D380)
    (data11=0071D380)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071D380)
    (data1_val=0071D380)
    (data2_val=0071D380)
    (data3_val=0071D380)
    (data4_val=0071D380)
    (data5_val=0071D380)
    (data8_val=0071D380)
    (data9_val=0071D380)
    (data10_val=0071D380)
    (data11_val=0071D380)
target=16, linearSearch=[16, 146]
target=17
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071DF60)
    (data1_def=0071DF60)
    (data2_def=0071DF60)
    (data3_def=0071DF60)
    (data4_def=0071DF60)
    (data5_def=0071DF60)
    (data8_def=0071DF60)
    (data9_def=0071DF60)
    (data10_def=0071DF60)
    (data11_def=0071DF60)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071DF60)
    (data1=0071DF60)
    (data2=0071DF60)
    (data3=0071DF60)
    (data4=0071DF60)
    (data5=0071DF60)
    (data8=0071DF60)
    (data9=0071DF60)
    (data10=0071DF60)
    (data11=0071DF60)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071DF60)
    (data1_val=0071DF60)
    (data2_val=0071DF60)
    (data3_val=0071DF60)
    (data4_val=0071DF60)
    (data5_val=0071DF60)
    (data8_val=0071DF60)
    (data9_val=0071DF60)
    (data10_val=0071DF60)
    (data11_val=0071DF60)
target=17, linearSearch=[17, 184]
target=18
  linearSearchValue(*array_shuffle1, target);
    (data_def=00721340)
    (data1_def=00721340)
    (data2_def=00721340)
    (data3_def=00721340)
    (data4_def=00721340)
    (data5_def=00721340)
    (data8_def=00721340)
    (data9_def=00721340)
    (data10_def=00721340)
    (data11_def=00721340)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00721340)
    (data1=00721340)
    (data2=00721340)
    (data3=00721340)
    (data4=00721340)
    (data5=00721340)
    (data8=00721340)
    (data9=00721340)
    (data10=00721340)
    (data11=00721340)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00721340)
    (data1_val=00721340)
    (data2_val=00721340)
    (data3_val=00721340)
    (data4_val=00721340)
    (data5_val=00721340)
    (data8_val=00721340)
    (data9_val=00721340)
    (data10_val=00721340)
    (data11_val=00721340)
target=18, linearSearch=[18, 350]
target=19
  linearSearchValue(*array_shuffle1, target);
    (data_def=00725620)
    (data1_def=00725620)
    (data2_def=00725620)
    (data3_def=00725620)
    (data4_def=00725620)
    (data5_def=00725620)
    (data8_def=00725620)
    (data9_def=00725620)
    (data10_def=00725620)
    (data11_def=00725620)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00725620)
    (data1=00725620)
    (data2=00725620)
    (data3=00725620)
    (data4=00725620)
    (data5=00725620)
    (data8=00725620)
    (data9=00725620)
    (data10=00725620)
    (data11=00725620)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00725620)
    (data1_val=00725620)
    (data2_val=00725620)
    (data3_val=00725620)
    (data4_val=00725620)
    (data5_val=00725620)
    (data8_val=00725620)
    (data9_val=00725620)
    (data10_val=00725620)
    (data11_val=00725620)
target=19, linearSearch=[19, 564]
target=20
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071F900)
    (data1_def=0071F900)
    (data2_def=0071F900)
    (data3_def=0071F900)
    (data4_def=0071F900)
    (data5_def=0071F900)
    (data8_def=0071F900)
    (data9_def=0071F900)
    (data10_def=0071F900)
    (data11_def=0071F900)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071F900)
    (data1=0071F900)
    (data2=0071F900)
    (data3=0071F900)
    (data4=0071F900)
    (data5=0071F900)
    (data8=0071F900)
    (data9=0071F900)
    (data10=0071F900)
    (data11=0071F900)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071F900)
    (data1_val=0071F900)
    (data2_val=0071F900)
    (data3_val=0071F900)
    (data4_val=0071F900)
    (data5_val=0071F900)
    (data8_val=0071F900)
    (data9_val=0071F900)
    (data10_val=0071F900)
    (data11_val=0071F900)
target=20, linearSearch=[20, 266]
target=21
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071E000)
    (data1_def=0071E000)
    (data2_def=0071E000)
    (data3_def=0071E000)
    (data4_def=0071E000)
    (data5_def=0071E000)
    (data8_def=0071E000)
    (data9_def=0071E000)
    (data10_def=0071E000)
    (data11_def=0071E000)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071E000)
    (data1=0071E000)
    (data2=0071E000)
    (data3=0071E000)
    (data4=0071E000)
    (data5=0071E000)
    (data8=0071E000)
    (data9=0071E000)
    (data10=0071E000)
    (data11=0071E000)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071E000)
    (data1_val=0071E000)
    (data2_val=0071E000)
    (data3_val=0071E000)
    (data4_val=0071E000)
    (data5_val=0071E000)
    (data8_val=0071E000)
    (data9_val=0071E000)
    (data10_val=0071E000)
    (data11_val=0071E000)
target=21, linearSearch=[21, 186]
target=22
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071C840)
    (data1_def=0071C840)
    (data2_def=0071C840)
    (data3_def=0071C840)
    (data4_def=0071C840)
    (data5_def=0071C840)
    (data8_def=0071C840)
    (data9_def=0071C840)
    (data10_def=0071C840)
    (data11_def=0071C840)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071C840)
    (data1=0071C840)
    (data2=0071C840)
    (data3=0071C840)
    (data4=0071C840)
    (data5=0071C840)
    (data8=0071C840)
    (data9=0071C840)
    (data10=0071C840)
    (data11=0071C840)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071C840)
    (data1_val=0071C840)
    (data2_val=0071C840)
    (data3_val=0071C840)
    (data4_val=0071C840)
    (data5_val=0071C840)
    (data8_val=0071C840)
    (data9_val=0071C840)
    (data10_val=0071C840)
    (data11_val=0071C840)
target=22, linearSearch=[22, 110]
target=23
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071BEE0)
    (data1_def=0071BEE0)
    (data2_def=0071BEE0)
    (data3_def=0071BEE0)
    (data4_def=0071BEE0)
    (data5_def=0071BEE0)
    (data8_def=0071BEE0)
    (data9_def=0071BEE0)
    (data10_def=0071BEE0)
    (data11_def=0071BEE0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071BEE0)
    (data1=0071BEE0)
    (data2=0071BEE0)
    (data3=0071BEE0)
    (data4=0071BEE0)
    (data5=0071BEE0)
    (data8=0071BEE0)
    (data9=0071BEE0)
    (data10=0071BEE0)
    (data11=0071BEE0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071BEE0)
    (data1_val=0071BEE0)
    (data2_val=0071BEE0)
    (data3_val=0071BEE0)
    (data4_val=0071BEE0)
    (data5_val=0071BEE0)
    (data8_val=0071BEE0)
    (data9_val=0071BEE0)
    (data10_val=0071BEE0)
    (data11_val=0071BEE0)
target=23, linearSearch=[23, 80]
target=24
  linearSearchValue(*array_shuffle1, target);
    (data_def=00721CA0)
    (data1_def=00721CA0)
    (data2_def=00721CA0)
    (data3_def=00721CA0)
    (data4_def=00721CA0)
    (data5_def=00721CA0)
    (data8_def=00721CA0)
    (data9_def=00721CA0)
    (data10_def=00721CA0)
    (data11_def=00721CA0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00721CA0)
    (data1=00721CA0)
    (data2=00721CA0)
    (data3=00721CA0)
    (data4=00721CA0)
    (data5=00721CA0)
    (data8=00721CA0)
    (data9=00721CA0)
    (data10=00721CA0)
    (data11=00721CA0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00721CA0)
    (data1_val=00721CA0)
    (data2_val=00721CA0)
    (data3_val=00721CA0)
    (data4_val=00721CA0)
    (data5_val=00721CA0)
    (data8_val=00721CA0)
    (data9_val=00721CA0)
    (data10_val=00721CA0)
    (data11_val=00721CA0)
target=24, linearSearch=[24, 380]
target=25
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071A5E0)
    (data1_def=0071A5E0)
    (data2_def=0071A5E0)
    (data3_def=0071A5E0)
    (data4_def=0071A5E0)
    (data5_def=0071A5E0)
    (data8_def=0071A5E0)
    (data9_def=0071A5E0)
    (data10_def=0071A5E0)
    (data11_def=0071A5E0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071A5E0)
    (data1=0071A5E0)
    (data2=0071A5E0)
    (data3=0071A5E0)
    (data4=0071A5E0)
    (data5=0071A5E0)
    (data8=0071A5E0)
    (data9=0071A5E0)
    (data10=0071A5E0)
    (data11=0071A5E0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071A5E0)
    (data1_val=0071A5E0)
    (data2_val=0071A5E0)
    (data3_val=0071A5E0)
    (data4_val=0071A5E0)
    (data5_val=0071A5E0)
    (data8_val=0071A5E0)
    (data9_val=0071A5E0)
    (data10_val=0071A5E0)
    (data11_val=0071A5E0)
target=25, linearSearch=[25, 0]
target=26
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071B2B0)
    (data1_def=0071B2B0)
    (data2_def=0071B2B0)
    (data3_def=0071B2B0)
    (data4_def=0071B2B0)
    (data5_def=0071B2B0)
    (data8_def=0071B2B0)
    (data9_def=0071B2B0)
    (data10_def=0071B2B0)
    (data11_def=0071B2B0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071B2B0)
    (data1=0071B2B0)
    (data2=0071B2B0)
    (data3=0071B2B0)
    (data4=0071B2B0)
    (data5=0071B2B0)
    (data8=0071B2B0)
    (data9=0071B2B0)
    (data10=0071B2B0)
    (data11=0071B2B0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071B2B0)
    (data1_val=0071B2B0)
    (data2_val=0071B2B0)
    (data3_val=0071B2B0)
    (data4_val=0071B2B0)
    (data5_val=0071B2B0)
    (data8_val=0071B2B0)
    (data9_val=0071B2B0)
    (data10_val=0071B2B0)
    (data11_val=0071B2B0)
target=26, linearSearch=[26, 41]
target=27
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071E820)
    (data1_def=0071E820)
    (data2_def=0071E820)
    (data3_def=0071E820)
    (data4_def=0071E820)
    (data5_def=0071E820)
    (data8_def=0071E820)
    (data9_def=0071E820)
    (data10_def=0071E820)
    (data11_def=0071E820)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071E820)
    (data1=0071E820)
    (data2=0071E820)
    (data3=0071E820)
    (data4=0071E820)
    (data5=0071E820)
    (data8=0071E820)
    (data9=0071E820)
    (data10=0071E820)
    (data11=0071E820)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071E820)
    (data1_val=0071E820)
    (data2_val=0071E820)
    (data3_val=0071E820)
    (data4_val=0071E820)
    (data5_val=0071E820)
    (data8_val=0071E820)
    (data9_val=0071E820)
    (data10_val=0071E820)
    (data11_val=0071E820)
target=27, linearSearch=[27, 212]
target=28
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071E780)
    (data1_def=0071E780)
    (data2_def=0071E780)
    (data3_def=0071E780)
    (data4_def=0071E780)
    (data5_def=0071E780)
    (data8_def=0071E780)
    (data9_def=0071E780)
    (data10_def=0071E780)
    (data11_def=0071E780)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071E780)
    (data1=0071E780)
    (data2=0071E780)
    (data3=0071E780)
    (data4=0071E780)
    (data5=0071E780)
    (data8=0071E780)
    (data9=0071E780)
    (data10=0071E780)
    (data11=0071E780)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071E780)
    (data1_val=0071E780)
    (data2_val=0071E780)
    (data3_val=0071E780)
    (data4_val=0071E780)
    (data5_val=0071E780)
    (data8_val=0071E780)
    (data9_val=0071E780)
    (data10_val=0071E780)
    (data11_val=0071E780)
target=28, linearSearch=[28, 210]
target=29
  linearSearchValue(*array_shuffle1, target);
    (data_def=00720F80)
    (data1_def=00720F80)
    (data2_def=00720F80)
    (data3_def=00720F80)
    (data4_def=00720F80)
    (data5_def=00720F80)
    (data8_def=00720F80)
    (data9_def=00720F80)
    (data10_def=00720F80)
    (data11_def=00720F80)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00720F80)
    (data1=00720F80)
    (data2=00720F80)
    (data3=00720F80)
    (data4=00720F80)
    (data5=00720F80)
    (data8=00720F80)
    (data9=00720F80)
    (data10=00720F80)
    (data11=00720F80)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00720F80)
    (data1_val=00720F80)
    (data2_val=00720F80)
    (data3_val=00720F80)
    (data4_val=00720F80)
    (data5_val=00720F80)
    (data8_val=00720F80)
    (data9_val=00720F80)
    (data10_val=00720F80)
    (data11_val=00720F80)
target=29, linearSearch=[29, 338]
target=30
  linearSearchValue(*array_shuffle1, target);
    (data_def=00722B50)
    (data1_def=00722B50)
    (data2_def=00722B50)
    (data3_def=00722B50)
    (data4_def=00722B50)
    (data5_def=00722B50)
    (data8_def=00722B50)
    (data9_def=00722B50)
    (data10_def=00722B50)
    (data11_def=00722B50)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00722B50)
    (data1=00722B50)
    (data2=00722B50)
    (data3=00722B50)
    (data4=00722B50)
    (data5=00722B50)
    (data8=00722B50)
    (data9=00722B50)
    (data10=00722B50)
    (data11=00722B50)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00722B50)
    (data1_val=00722B50)
    (data2_val=00722B50)
    (data3_val=00722B50)
    (data4_val=00722B50)
    (data5_val=00722B50)
    (data8_val=00722B50)
    (data9_val=00722B50)
    (data10_val=00722B50)
    (data11_val=00722B50)
target=30, linearSearch=[30, 427]
target=31
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071EAF0)
    (data1_def=0071EAF0)
    (data2_def=0071EAF0)
    (data3_def=0071EAF0)
    (data4_def=0071EAF0)
    (data5_def=0071EAF0)
    (data8_def=0071EAF0)
    (data9_def=0071EAF0)
    (data10_def=0071EAF0)
    (data11_def=0071EAF0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071EAF0)
    (data1=0071EAF0)
    (data2=0071EAF0)
    (data3=0071EAF0)
    (data4=0071EAF0)
    (data5=0071EAF0)
    (data8=0071EAF0)
    (data9=0071EAF0)
    (data10=0071EAF0)
    (data11=0071EAF0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071EAF0)
    (data1_val=0071EAF0)
    (data2_val=0071EAF0)
    (data3_val=0071EAF0)
    (data4_val=0071EAF0)
    (data5_val=0071EAF0)
    (data8_val=0071EAF0)
    (data9_val=0071EAF0)
    (data10_val=0071EAF0)
    (data11_val=0071EAF0)
target=31, linearSearch=[31, 221]
target=32
  linearSearchValue(*array_shuffle1, target);
    (data_def=00721480)
    (data1_def=00721480)
    (data2_def=00721480)
    (data3_def=00721480)
    (data4_def=00721480)
    (data5_def=00721480)
    (data8_def=00721480)
    (data9_def=00721480)
    (data10_def=00721480)
    (data11_def=00721480)
  linearSearch(*array_shuffle1, search_predicate);
    (data=00721480)
    (data1=00721480)
    (data2=00721480)
    (data3=00721480)
    (data4=00721480)
    (data5=00721480)
    (data8=00721480)
    (data9=00721480)
    (data10=00721480)
    (data11=00721480)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=00721480)
    (data1_val=00721480)
    (data2_val=00721480)
    (data3_val=00721480)
    (data4_val=00721480)
    (data5_val=00721480)
    (data8_val=00721480)
    (data9_val=00721480)
    (data10_val=00721480)
    (data11_val=00721480)
target=32, linearSearch=[32, 354]
target=33
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071BDF0)
    (data1_def=0071BDF0)
    (data2_def=0071BDF0)
    (data3_def=0071BDF0)
    (data4_def=0071BDF0)
    (data5_def=0071BDF0)
    (data8_def=0071BDF0)
    (data9_def=0071BDF0)
    (data10_def=0071BDF0)
    (data11_def=0071BDF0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071BDF0)
    (data1=0071BDF0)
    (data2=0071BDF0)
    (data3=0071BDF0)
    (data4=0071BDF0)
    (data5=0071BDF0)
    (data8=0071BDF0)
    (data9=0071BDF0)
    (data10=0071BDF0)
    (data11=0071BDF0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071BDF0)
    (data1_val=0071BDF0)
    (data2_val=0071BDF0)
    (data3_val=0071BDF0)
    (data4_val=0071BDF0)
    (data5_val=0071BDF0)
    (data8_val=0071BDF0)
    (data9_val=0071BDF0)
    (data10_val=0071BDF0)
    (data11_val=0071BDF0)
target=33, linearSearch=[33, 77]
target=34
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071BDA0)
    (data1_def=0071BDA0)
    (data2_def=0071BDA0)
    (data3_def=0071BDA0)
    (data4_def=0071BDA0)
    (data5_def=0071BDA0)
    (data8_def=0071BDA0)
    (data9_def=0071BDA0)
    (data10_def=0071BDA0)
    (data11_def=0071BDA0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071BDA0)
    (data1=0071BDA0)
    (data2=0071BDA0)
    (data3=0071BDA0)
    (data4=0071BDA0)
    (data5=0071BDA0)
    (data8=0071BDA0)
    (data9=0071BDA0)
    (data10=0071BDA0)
    (data11=0071BDA0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071BDA0)
    (data1_val=0071BDA0)
    (data2_val=0071BDA0)
    (data3_val=0071BDA0)
    (data4_val=0071BDA0)
    (data5_val=0071BDA0)
    (data8_val=0071BDA0)
    (data9_val=0071BDA0)
    (data10_val=0071BDA0)
    (data11_val=0071BDA0)
target=34, linearSearch=[34, 76]
target=35
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071F400)
    (data1_def=0071F400)
    (data2_def=0071F400)
    (data3_def=0071F400)
    (data4_def=0071F400)
    (data5_def=0071F400)
    (data8_def=0071F400)
    (data9_def=0071F400)
    (data10_def=0071F400)
    (data11_def=0071F400)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071F400)
    (data1=0071F400)
    (data2=0071F400)
    (data3=0071F400)
    (data4=0071F400)
    (data5=0071F400)
    (data8=0071F400)
    (data9=0071F400)
    (data10=0071F400)
    (data11=0071F400)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071F400)
    (data1_val=0071F400)
    (data2_val=0071F400)
    (data3_val=0071F400)
    (data4_val=0071F400)
    (data5_val=0071F400)
    (data8_val=0071F400)
    (data9_val=0071F400)
    (data10_val=0071F400)
    (data11_val=0071F400)
target=35, linearSearch=[35, 250]
target=36
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071B940)
    (data1_def=0071B940)
    (data2_def=0071B940)
    (data3_def=0071B940)
    (data4_def=0071B940)
    (data5_def=0071B940)
    (data8_def=0071B940)
    (data9_def=0071B940)
    (data10_def=0071B940)
    (data11_def=0071B940)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071B940)
    (data1=0071B940)
    (data2=0071B940)
    (data3=0071B940)
    (data4=0071B940)
    (data5=0071B940)
    (data8=0071B940)
    (data9=0071B940)
    (data10=0071B940)
    (data11=0071B940)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071B940)
    (data1_val=0071B940)
    (data2_val=0071B940)
    (data3_val=0071B940)
    (data4_val=0071B940)
    (data5_val=0071B940)
    (data8_val=0071B940)
    (data9_val=0071B940)
    (data10_val=0071B940)
    (data11_val=0071B940)
target=36, linearSearch=[36, 62]
target=37
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071B3F0)
    (data1_def=0071B3F0)
    (data2_def=0071B3F0)
    (data3_def=0071B3F0)
    (data4_def=0071B3F0)
    (data5_def=0071B3F0)
    (data8_def=0071B3F0)
    (data9_def=0071B3F0)
    (data10_def=0071B3F0)
    (data11_def=0071B3F0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071B3F0)
    (data1=0071B3F0)
    (data2=0071B3F0)
    (data3=0071B3F0)
    (data4=0071B3F0)
    (data5=0071B3F0)
    (data8=0071B3F0)
    (data9=0071B3F0)
    (data10=0071B3F0)
    (data11=0071B3F0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071B3F0)
    (data1_val=0071B3F0)
    (data2_val=0071B3F0)
    (data3_val=0071B3F0)
    (data4_val=0071B3F0)
    (data5_val=0071B3F0)
    (data8_val=0071B3F0)
    (data9_val=0071B3F0)
    (data10_val=0071B3F0)
    (data11_val=0071B3F0)
target=37, linearSearch=[37, 45]
target=38
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071B760)
    (data1_def=0071B760)
    (data2_def=0071B760)
    (data3_def=0071B760)
    (data4_def=0071B760)
    (data5_def=0071B760)
    (data8_def=0071B760)
    (data9_def=0071B760)
    (data10_def=0071B760)
    (data11_def=0071B760)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071B760)
    (data1=0071B760)
    (data2=0071B760)
    (data3=0071B760)
    (data4=0071B760)
    (data5=0071B760)
    (data8=0071B760)
    (data9=0071B760)
    (data10=0071B760)
    (data11=0071B760)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071B760)
    (data1_val=0071B760)
    (data2_val=0071B760)
    (data3_val=0071B760)
    (data4_val=0071B760)
    (data5_val=0071B760)
    (data8_val=0071B760)
    (data9_val=0071B760)
    (data10_val=0071B760)
    (data11_val=0071B760)
target=38, linearSearch=[38, 56]
target=39
  linearSearchValue(*array_shuffle1, target);
    (data_def=0071D100)
    (data1_def=0071D100)
    (data2_def=0071D100)
    (data3_def=0071D100)
    (data4_def=0071D100)
    (data5_def=0071D100)
    (data8_def=0071D100)
    (data9_def=0071D100)
    (data10_def=0071D100)
    (data11_def=0071D100)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0071D100)
    (data1=0071D100)
    (data2=0071D100)
    (data3=0071D100)
    (data4=0071D100)
    (data5=0071D100)
    (data8=0071D100)
    (data9=0071D100)
    (data10=0071D100)
    (data11=0071D100)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0071D100)
    (data1_val=0071D100)
    (data2_val=0071D100)
    (data3_val=0071D100)
    (data4_val=0071D100)
    (data5_val=0071D100)
    (data8_val=0071D100)
    (data9_val=0071D100)
    (data10_val=0071D100)
    (data11_val=0071D100)
target=39, linearSearch=[39, 138]

[Variation test for binary-search]
target=-1
  binarySearchValue(*array_shuffle1, target);
    (data_def=00000000)
    (data1_def=00000000)
    (data2_def=00000000)
    (data3_def=00000000)
    (data4_def=00000000)
    (data5_def=00000000)
    (data8_def=00000000)
    (data9_def=00000000)
   (data10_def=00000000)
    (data11_def=00000000)
  binarySearch(*array_shuffle1, search_comparison);
    (data=00000000)
    (data1=00000000)
    (data2=00000000)
    (data3=00000000)
    (data4=00000000)
    (data5=00000000)
    (data8=00000000)
    (data9=00000000)
    (data10=00000000)
    (data11=00000000)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=00000000)
    (data1_val=00000000)
    (data2_val=00000000)
    (data3_val=00000000)
    (data4_val=00000000)
    (data5_val=00000000)
    (data8_val=00000000)
    (data9_val=00000000)
    (data10_val=00000000)
    (data11_val=00000000)
target=-1, binarySearch=nullptr
target=0
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071A5E0)
    (data1_def=0071A5E0)
    (data2_def=0071A5E0)
    (data3_def=0071A5E0)
    (data4_def=0071A5E0)
    (data5_def=0071A5E0)
    (data8_def=0071A5E0)
    (data9_def=0071A5E0)
   (data10_def=0071A5E0)
    (data11_def=0071A5E0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071A5E0)
    (data1=0071A5E0)
    (data2=0071A5E0)
    (data3=0071A5E0)
    (data4=0071A5E0)
    (data5=0071A5E0)
    (data8=0071A5E0)
    (data9=0071A5E0)
    (data10=0071A5E0)
    (data11=0071A5E0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071A5E0)
    (data1_val=0071A5E0)
    (data2_val=0071A5E0)
    (data3_val=0071A5E0)
    (data4_val=0071A5E0)
    (data5_val=0071A5E0)
    (data8_val=0071A5E0)
    (data9_val=0071A5E0)
    (data10_val=0071A5E0)
    (data11_val=0071A5E0)
target=0, binarySearch=[0, 471]
target=1
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071A6D0)
    (data1_def=0071A6D0)
    (data2_def=0071A6D0)
    (data3_def=0071A6D0)
    (data4_def=0071A6D0)
    (data5_def=0071A6D0)
    (data8_def=0071A6D0)
    (data9_def=0071A6D0)
   (data10_def=0071A6D0)
    (data11_def=0071A6D0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071A6D0)
    (data1=0071A6D0)
    (data2=0071A6D0)
    (data3=0071A6D0)
    (data4=0071A6D0)
    (data5=0071A6D0)
    (data8=0071A6D0)
    (data9=0071A6D0)
    (data10=0071A6D0)
    (data11=0071A6D0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071A6D0)
    (data1_val=0071A6D0)
    (data2_val=0071A6D0)
    (data3_val=0071A6D0)
    (data4_val=0071A6D0)
    (data5_val=0071A6D0)
    (data8_val=0071A6D0)
    (data9_val=0071A6D0)
    (data10_val=0071A6D0)
    (data11_val=0071A6D0)
target=1, binarySearch=[1, 752]
target=2
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071A7C0)
    (data1_def=0071A7C0)
    (data2_def=0071A7C0)
    (data3_def=0071A7C0)
    (data4_def=0071A7C0)
    (data5_def=0071A7C0)
    (data8_def=0071A7C0)
    (data9_def=0071A7C0)
   (data10_def=0071A7C0)
    (data11_def=0071A7C0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071A7C0)
    (data1=0071A7C0)
    (data2=0071A7C0)
    (data3=0071A7C0)
    (data4=0071A7C0)
    (data5=0071A7C0)
    (data8=0071A7C0)
    (data9=0071A7C0)
    (data10=0071A7C0)
    (data11=0071A7C0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071A7C0)
    (data1_val=0071A7C0)
    (data2_val=0071A7C0)
    (data3_val=0071A7C0)
    (data4_val=0071A7C0)
    (data5_val=0071A7C0)
    (data8_val=0071A7C0)
    (data9_val=0071A7C0)
    (data10_val=0071A7C0)
    (data11_val=0071A7C0)
target=2, binarySearch=[2, 575]
target=3
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071A8B0)
    (data1_def=0071A8B0)
    (data2_def=0071A8B0)
    (data3_def=0071A8B0)
    (data4_def=0071A8B0)
    (data5_def=0071A8B0)
    (data8_def=0071A8B0)
    (data9_def=0071A8B0)
   (data10_def=0071A8B0)
    (data11_def=0071A8B0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071A8B0)
    (data1=0071A8B0)
    (data2=0071A8B0)
    (data3=0071A8B0)
    (data4=0071A8B0)
    (data5=0071A8B0)
    (data8=0071A8B0)
    (data9=0071A8B0)
    (data10=0071A8B0)
    (data11=0071A8B0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071A8B0)
    (data1_val=0071A8B0)
    (data2_val=0071A8B0)
    (data3_val=0071A8B0)
    (data4_val=0071A8B0)
    (data5_val=0071A8B0)
    (data8_val=0071A8B0)
    (data9_val=0071A8B0)
    (data10_val=0071A8B0)
    (data11_val=0071A8B0)
target=3, binarySearch=[3, 156]
target=4
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071A9A0)
    (data1_def=0071A9A0)
    (data2_def=0071A9A0)
    (data3_def=0071A9A0)
    (data4_def=0071A9A0)
    (data5_def=0071A9A0)
    (data8_def=0071A9A0)
    (data9_def=0071A9A0)
   (data10_def=0071A9A0)
    (data11_def=0071A9A0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071A9A0)
    (data1=0071A9A0)
    (data2=0071A9A0)
    (data3=0071A9A0)
    (data4=0071A9A0)
    (data5=0071A9A0)
    (data8=0071A9A0)
    (data9=0071A9A0)
    (data10=0071A9A0)
    (data11=0071A9A0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071A9A0)
    (data1_val=0071A9A0)
    (data2_val=0071A9A0)
    (data3_val=0071A9A0)
    (data4_val=0071A9A0)
    (data5_val=0071A9A0)
    (data8_val=0071A9A0)
    (data9_val=0071A9A0)
    (data10_val=0071A9A0)
    (data11_val=0071A9A0)
target=4, binarySearch=[4, 912]
target=5
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071AA90)
    (data1_def=0071AA90)
    (data2_def=0071AA90)
    (data3_def=0071AA90)
    (data4_def=0071AA90)
    (data5_def=0071AA90)
    (data8_def=0071AA90)
    (data9_def=0071AA90)
   (data10_def=0071AA90)
    (data11_def=0071AA90)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071AA90)
    (data1=0071AA90)
    (data2=0071AA90)
    (data3=0071AA90)
    (data4=0071AA90)
    (data5=0071AA90)
    (data8=0071AA90)
    (data9=0071AA90)
    (data10=0071AA90)
    (data11=0071AA90)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071AA90)
    (data1_val=0071AA90)
    (data2_val=0071AA90)
    (data3_val=0071AA90)
    (data4_val=0071AA90)
    (data5_val=0071AA90)
    (data8_val=0071AA90)
    (data9_val=0071AA90)
    (data10_val=0071AA90)
    (data11_val=0071AA90)
target=5, binarySearch=[5, 75]
target=6
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071AB80)
    (data1_def=0071AB80)
    (data2_def=0071AB80)
    (data3_def=0071AB80)
    (data4_def=0071AB80)
    (data5_def=0071AB80)
    (data8_def=0071AB80)
    (data9_def=0071AB80)
   (data10_def=0071AB80)
    (data11_def=0071AB80)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071AB80)
    (data1=0071AB80)
    (data2=0071AB80)
    (data3=0071AB80)
    (data4=0071AB80)
    (data5=0071AB80)
    (data8=0071AB80)
    (data9=0071AB80)
    (data10=0071AB80)
    (data11=0071AB80)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071AB80)
    (data1_val=0071AB80)
    (data2_val=0071AB80)
    (data3_val=0071AB80)
    (data4_val=0071AB80)
    (data5_val=0071AB80)
    (data8_val=0071AB80)
    (data9_val=0071AB80)
    (data10_val=0071AB80)
    (data11_val=0071AB80)
target=6, binarySearch=[6, 681]
target=7
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071AC70)
    (data1_def=0071AC70)
    (data2_def=0071AC70)
    (data3_def=0071AC70)
    (data4_def=0071AC70)
    (data5_def=0071AC70)
    (data8_def=0071AC70)
    (data9_def=0071AC70)
   (data10_def=0071AC70)
    (data11_def=0071AC70)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071AC70)
    (data1=0071AC70)
    (data2=0071AC70)
    (data3=0071AC70)
    (data4=0071AC70)
    (data5=0071AC70)
    (data8=0071AC70)
    (data9=0071AC70)
    (data10=0071AC70)
    (data11=0071AC70)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071AC70)
    (data1_val=0071AC70)
    (data2_val=0071AC70)
    (data3_val=0071AC70)
    (data4_val=0071AC70)
    (data5_val=0071AC70)
    (data8_val=0071AC70)
    (data9_val=0071AC70)
    (data10_val=0071AC70)
    (data11_val=0071AC70)
target=7, binarySearch=[7, 498]
target=8
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071AD60)
    (data1_def=0071AD60)
    (data2_def=0071AD60)
    (data3_def=0071AD60)
    (data4_def=0071AD60)
    (data5_def=0071AD60)
    (data8_def=0071AD60)
    (data9_def=0071AD60)
   (data10_def=0071AD60)
    (data11_def=0071AD60)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071AD60)
    (data1=0071AD60)
    (data2=0071AD60)
    (data3=0071AD60)
    (data4=0071AD60)
    (data5=0071AD60)
    (data8=0071AD60)
    (data9=0071AD60)
    (data10=0071AD60)
    (data11=0071AD60)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071AD60)
    (data1_val=0071AD60)
    (data2_val=0071AD60)
    (data3_val=0071AD60)
    (data4_val=0071AD60)
    (data5_val=0071AD60)
    (data8_val=0071AD60)
    (data9_val=0071AD60)
    (data10_val=0071AD60)
    (data11_val=0071AD60)
target=8, binarySearch=[8, 375]
target=9
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071AE50)
    (data1_def=0071AE50)
    (data2_def=0071AE50)
    (data3_def=0071AE50)
    (data4_def=0071AE50)
    (data5_def=0071AE50)
    (data8_def=0071AE50)
    (data9_def=0071AE50)
   (data10_def=0071AE50)
    (data11_def=0071AE50)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071AE50)
    (data1=0071AE50)
    (data2=0071AE50)
    (data3=0071AE50)
    (data4=0071AE50)
    (data5=0071AE50)
    (data8=0071AE50)
    (data9=0071AE50)
    (data10=0071AE50)
    (data11=0071AE50)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071AE50)
    (data1_val=0071AE50)
    (data2_val=0071AE50)
    (data3_val=0071AE50)
    (data4_val=0071AE50)
    (data5_val=0071AE50)
    (data8_val=0071AE50)
    (data9_val=0071AE50)
    (data10_val=0071AE50)
    (data11_val=0071AE50)
target=9, binarySearch=[9, 118]
target=10
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071AF40)
    (data1_def=0071AF40)
    (data2_def=0071AF40)
    (data3_def=0071AF40)
    (data4_def=0071AF40)
    (data5_def=0071AF40)
    (data8_def=0071AF40)
    (data9_def=0071AF40)
   (data10_def=0071AF40)
    (data11_def=0071AF40)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071AF40)
    (data1=0071AF40)
    (data2=0071AF40)
    (data3=0071AF40)
    (data4=0071AF40)
    (data5=0071AF40)
    (data8=0071AF40)
    (data9=0071AF40)
    (data10=0071AF40)
    (data11=0071AF40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071AF40)
    (data1_val=0071AF40)
    (data2_val=0071AF40)
    (data3_val=0071AF40)
    (data4_val=0071AF40)
    (data5_val=0071AF40)
    (data8_val=0071AF40)
    (data9_val=0071AF40)
    (data10_val=0071AF40)
    (data11_val=0071AF40)
target=10, binarySearch=[10, 93]
target=11
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B030)
    (data1_def=0071B030)
    (data2_def=0071B030)
    (data3_def=0071B030)
    (data4_def=0071B030)
    (data5_def=0071B030)
    (data8_def=0071B030)
    (data9_def=0071B030)
   (data10_def=0071B030)
    (data11_def=0071B030)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B030)
    (data1=0071B030)
    (data2=0071B030)
    (data3=0071B030)
    (data4=0071B030)
    (data5=0071B030)
    (data8=0071B030)
    (data9=0071B030)
    (data10=0071B030)
    (data11=0071B030)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B030)
    (data1_val=0071B030)
    (data2_val=0071B030)
    (data3_val=0071B030)
    (data4_val=0071B030)
    (data5_val=0071B030)
    (data8_val=0071B030)
    (data9_val=0071B030)
    (data10_val=0071B030)
    (data11_val=0071B030)
target=11, binarySearch=[11, 618]
target=12
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B120)
    (data1_def=0071B120)
    (data2_def=0071B120)
    (data3_def=0071B120)
    (data4_def=0071B120)
    (data5_def=0071B120)
    (data8_def=0071B120)
    (data9_def=0071B120)
   (data10_def=0071B120)
    (data11_def=0071B120)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B120)
    (data1=0071B120)
    (data2=0071B120)
    (data3=0071B120)
    (data4=0071B120)
    (data5=0071B120)
    (data8=0071B120)
    (data9=0071B120)
    (data10=0071B120)
    (data11=0071B120)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B120)
    (data1_val=0071B120)
    (data2_val=0071B120)
    (data3_val=0071B120)
    (data4_val=0071B120)
    (data5_val=0071B120)
    (data8_val=0071B120)
    (data9_val=0071B120)
    (data10_val=0071B120)
    (data11_val=0071B120)
target=12, binarySearch=[12, 566]
target=13
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B210)
    (data1_def=0071B210)
    (data2_def=0071B210)
    (data3_def=0071B210)
    (data4_def=0071B210)
    (data5_def=0071B210)
    (data8_def=0071B210)
    (data9_def=0071B210)
   (data10_def=0071B210)
    (data11_def=0071B210)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B210)
    (data1=0071B210)
    (data2=0071B210)
    (data3=0071B210)
    (data4=0071B210)
    (data5=0071B210)
    (data8=0071B210)
    (data9=0071B210)
    (data10=0071B210)
    (data11=0071B210)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B210)
    (data1_val=0071B210)
    (data2_val=0071B210)
    (data3_val=0071B210)
    (data4_val=0071B210)
    (data5_val=0071B210)
    (data8_val=0071B210)
    (data9_val=0071B210)
    (data10_val=0071B210)
    (data11_val=0071B210)
target=13, binarySearch=[13, 651]
target=14
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B300)
    (data1_def=0071B300)
    (data2_def=0071B300)
    (data3_def=0071B300)
    (data4_def=0071B300)
    (data5_def=0071B300)
    (data8_def=0071B300)
    (data9_def=0071B300)
   (data10_def=0071B300)
    (data11_def=0071B300)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B300)
    (data1=0071B300)
    (data2=0071B300)
    (data3=0071B300)
    (data4=0071B300)
    (data5=0071B300)
    (data8=0071B300)
    (data9=0071B300)
    (data10=0071B300)
    (data11=0071B300)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B300)
    (data1_val=0071B300)
    (data2_val=0071B300)
    (data3_val=0071B300)
    (data4_val=0071B300)
    (data5_val=0071B300)
    (data8_val=0071B300)
    (data9_val=0071B300)
    (data10_val=0071B300)
    (data11_val=0071B300)
target=14, binarySearch=[14, 260]
target=15
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B3F0)
    (data1_def=0071B3F0)
    (data2_def=0071B3F0)
    (data3_def=0071B3F0)
    (data4_def=0071B3F0)
    (data5_def=0071B3F0)
    (data8_def=0071B3F0)
    (data9_def=0071B3F0)
   (data10_def=0071B3F0)
    (data11_def=0071B3F0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B3F0)
    (data1=0071B3F0)
    (data2=0071B3F0)
    (data3=0071B3F0)
    (data4=0071B3F0)
    (data5=0071B3F0)
    (data8=0071B3F0)
    (data9=0071B3F0)
    (data10=0071B3F0)
    (data11=0071B3F0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B3F0)
    (data1_val=0071B3F0)
    (data2_val=0071B3F0)
    (data3_val=0071B3F0)
    (data4_val=0071B3F0)
    (data5_val=0071B3F0)
    (data8_val=0071B3F0)
    (data9_val=0071B3F0)
    (data10_val=0071B3F0)
    (data11_val=0071B3F0)
target=15, binarySearch=[15, 268]
target=16
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B4E0)
    (data1_def=0071B4E0)
    (data2_def=0071B4E0)
    (data3_def=0071B4E0)
    (data4_def=0071B4E0)
    (data5_def=0071B4E0)
    (data8_def=0071B4E0)
    (data9_def=0071B4E0)
   (data10_def=0071B4E0)
    (data11_def=0071B4E0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B4E0)
    (data1=0071B4E0)
    (data2=0071B4E0)
    (data3=0071B4E0)
    (data4=0071B4E0)
    (data5=0071B4E0)
    (data8=0071B4E0)
    (data9=0071B4E0)
    (data10=0071B4E0)
    (data11=0071B4E0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B4E0)
    (data1_val=0071B4E0)
    (data2_val=0071B4E0)
    (data3_val=0071B4E0)
    (data4_val=0071B4E0)
    (data5_val=0071B4E0)
    (data8_val=0071B4E0)
    (data9_val=0071B4E0)
    (data10_val=0071B4E0)
    (data11_val=0071B4E0)
target=16, binarySearch=[16, 888]
target=17
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B5D0)
    (data1_def=0071B5D0)
    (data2_def=0071B5D0)
    (data3_def=0071B5D0)
    (data4_def=0071B5D0)
    (data5_def=0071B5D0)
    (data8_def=0071B5D0)
    (data9_def=0071B5D0)
   (data10_def=0071B5D0)
    (data11_def=0071B5D0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B5D0)
    (data1=0071B5D0)
    (data2=0071B5D0)
    (data3=0071B5D0)
    (data4=0071B5D0)
    (data5=0071B5D0)
    (data8=0071B5D0)
    (data9=0071B5D0)
    (data10=0071B5D0)
    (data11=0071B5D0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B5D0)
    (data1_val=0071B5D0)
    (data2_val=0071B5D0)
    (data3_val=0071B5D0)
    (data4_val=0071B5D0)
    (data5_val=0071B5D0)
    (data8_val=0071B5D0)
    (data9_val=0071B5D0)
    (data10_val=0071B5D0)
    (data11_val=0071B5D0)
target=17, binarySearch=[17, 938]
target=18
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B6C0)
    (data1_def=0071B6C0)
    (data2_def=0071B6C0)
    (data3_def=0071B6C0)
    (data4_def=0071B6C0)
    (data5_def=0071B6C0)
    (data8_def=0071B6C0)
    (data9_def=0071B6C0)
   (data10_def=0071B6C0)
    (data11_def=0071B6C0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B6C0)
    (data1=0071B6C0)
    (data2=0071B6C0)
    (data3=0071B6C0)
    (data4=0071B6C0)
    (data5=0071B6C0)
    (data8=0071B6C0)
    (data9=0071B6C0)
    (data10=0071B6C0)
    (data11=0071B6C0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B6C0)
    (data1_val=0071B6C0)
    (data2_val=0071B6C0)
    (data3_val=0071B6C0)
    (data4_val=0071B6C0)
    (data5_val=0071B6C0)
    (data8_val=0071B6C0)
    (data9_val=0071B6C0)
    (data10_val=0071B6C0)
    (data11_val=0071B6C0)
target=18, binarySearch=[18, 512]
target=19
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B7B0)
    (data1_def=0071B7B0)
    (data2_def=0071B7B0)
    (data3_def=0071B7B0)
    (data4_def=0071B7B0)
    (data5_def=0071B7B0)
    (data8_def=0071B7B0)
    (data9_def=0071B7B0)
   (data10_def=0071B7B0)
    (data11_def=0071B7B0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B7B0)
    (data1=0071B7B0)
    (data2=0071B7B0)
    (data3=0071B7B0)
    (data4=0071B7B0)
    (data5=0071B7B0)
    (data8=0071B7B0)
    (data9=0071B7B0)
    (data10=0071B7B0)
    (data11=0071B7B0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B7B0)
    (data1_val=0071B7B0)
    (data2_val=0071B7B0)
    (data3_val=0071B7B0)
    (data4_val=0071B7B0)
    (data5_val=0071B7B0)
    (data8_val=0071B7B0)
    (data9_val=0071B7B0)
    (data10_val=0071B7B0)
    (data11_val=0071B7B0)
target=19, binarySearch=[19, 564]
target=20
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B8A0)
    (data1_def=0071B8A0)
    (data2_def=0071B8A0)
    (data3_def=0071B8A0)
    (data4_def=0071B8A0)
    (data5_def=0071B8A0)
    (data8_def=0071B8A0)
    (data9_def=0071B8A0)
   (data10_def=0071B8A0)
    (data11_def=0071B8A0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B8A0)
    (data1=0071B8A0)
    (data2=0071B8A0)
    (data3=0071B8A0)
    (data4=0071B8A0)
    (data5=0071B8A0)
    (data8=0071B8A0)
    (data9=0071B8A0)
    (data10=0071B8A0)
    (data11=0071B8A0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B8A0)
    (data1_val=0071B8A0)
    (data2_val=0071B8A0)
    (data3_val=0071B8A0)
    (data4_val=0071B8A0)
    (data5_val=0071B8A0)
    (data8_val=0071B8A0)
    (data9_val=0071B8A0)
    (data10_val=0071B8A0)
    (data11_val=0071B8A0)
target=20, binarySearch=[20, 578]
target=21
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071B990)
    (data1_def=0071B990)
    (data2_def=0071B990)
    (data3_def=0071B990)
    (data4_def=0071B990)
    (data5_def=0071B990)
    (data8_def=0071B990)
    (data9_def=0071B990)
   (data10_def=0071B990)
    (data11_def=0071B990)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071B990)
    (data1=0071B990)
    (data2=0071B990)
    (data3=0071B990)
    (data4=0071B990)
    (data5=0071B990)
    (data8=0071B990)
    (data9=0071B990)
    (data10=0071B990)
    (data11=0071B990)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071B990)
    (data1_val=0071B990)
    (data2_val=0071B990)
    (data3_val=0071B990)
    (data4_val=0071B990)
    (data5_val=0071B990)
    (data8_val=0071B990)
    (data9_val=0071B990)
    (data10_val=0071B990)
    (data11_val=0071B990)
target=21, binarySearch=[21, 243]
target=22
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071BA80)
    (data1_def=0071BA80)
    (data2_def=0071BA80)
    (data3_def=0071BA80)
    (data4_def=0071BA80)
    (data5_def=0071BA80)
    (data8_def=0071BA80)
    (data9_def=0071BA80)
   (data10_def=0071BA80)
    (data11_def=0071BA80)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071BA80)
    (data1=0071BA80)
    (data2=0071BA80)
    (data3=0071BA80)
    (data4=0071BA80)
    (data5=0071BA80)
    (data8=0071BA80)
    (data9=0071BA80)
    (data10=0071BA80)
    (data11=0071BA80)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071BA80)
    (data1_val=0071BA80)
    (data2_val=0071BA80)
    (data3_val=0071BA80)
    (data4_val=0071BA80)
    (data5_val=0071BA80)
    (data8_val=0071BA80)
    (data9_val=0071BA80)
    (data10_val=0071BA80)
    (data11_val=0071BA80)
target=22, binarySearch=[22, 110]
target=23
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071BB70)
    (data1_def=0071BB70)
    (data2_def=0071BB70)
    (data3_def=0071BB70)
    (data4_def=0071BB70)
    (data5_def=0071BB70)
    (data8_def=0071BB70)
    (data9_def=0071BB70)
   (data10_def=0071BB70)
    (data11_def=0071BB70)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071BB70)
    (data1=0071BB70)
    (data2=0071BB70)
    (data3=0071BB70)
    (data4=0071BB70)
    (data5=0071BB70)
    (data8=0071BB70)
    (data9=0071BB70)
    (data10=0071BB70)
    (data11=0071BB70)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071BB70)
    (data1_val=0071BB70)
    (data2_val=0071BB70)
    (data3_val=0071BB70)
    (data4_val=0071BB70)
    (data5_val=0071BB70)
    (data8_val=0071BB70)
    (data9_val=0071BB70)
    (data10_val=0071BB70)
    (data11_val=0071BB70)
target=23, binarySearch=[23, 521]
target=24
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071BC60)
    (data1_def=0071BC60)
    (data2_def=0071BC60)
    (data3_def=0071BC60)
    (data4_def=0071BC60)
    (data5_def=0071BC60)
    (data8_def=0071BC60)
    (data9_def=0071BC60)
   (data10_def=0071BC60)
    (data11_def=0071BC60)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071BC60)
    (data1=0071BC60)
    (data2=0071BC60)
    (data3=0071BC60)
    (data4=0071BC60)
    (data5=0071BC60)
    (data8=0071BC60)
    (data9=0071BC60)
    (data10=0071BC60)
    (data11=0071BC60)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071BC60)
    (data1_val=0071BC60)
    (data2_val=0071BC60)
    (data3_val=0071BC60)
    (data4_val=0071BC60)
    (data5_val=0071BC60)
    (data8_val=0071BC60)
    (data9_val=0071BC60)
    (data10_val=0071BC60)
    (data11_val=0071BC60)
target=24, binarySearch=[24, 913]
target=25
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071BD50)
    (data1_def=0071BD50)
    (data2_def=0071BD50)
    (data3_def=0071BD50)
    (data4_def=0071BD50)
    (data5_def=0071BD50)
    (data8_def=0071BD50)
    (data9_def=0071BD50)
   (data10_def=0071BD50)
    (data11_def=0071BD50)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071BD50)
    (data1=0071BD50)
    (data2=0071BD50)
    (data3=0071BD50)
    (data4=0071BD50)
    (data5=0071BD50)
    (data8=0071BD50)
    (data9=0071BD50)
    (data10=0071BD50)
    (data11=0071BD50)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071BD50)
    (data1_val=0071BD50)
    (data2_val=0071BD50)
    (data3_val=0071BD50)
    (data4_val=0071BD50)
    (data5_val=0071BD50)
    (data8_val=0071BD50)
    (data9_val=0071BD50)
    (data10_val=0071BD50)
    (data11_val=0071BD50)
target=25, binarySearch=[25, 954]
target=26
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071BE40)
    (data1_def=0071BE40)
    (data2_def=0071BE40)
    (data3_def=0071BE40)
    (data4_def=0071BE40)
    (data5_def=0071BE40)
    (data8_def=0071BE40)
    (data9_def=0071BE40)
   (data10_def=0071BE40)
    (data11_def=0071BE40)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071BE40)
    (data1=0071BE40)
    (data2=0071BE40)
    (data3=0071BE40)
    (data4=0071BE40)
    (data5=0071BE40)
    (data8=0071BE40)
    (data9=0071BE40)
    (data10=0071BE40)
    (data11=0071BE40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071BE40)
    (data1_val=0071BE40)
    (data2_val=0071BE40)
    (data3_val=0071BE40)
    (data4_val=0071BE40)
    (data5_val=0071BE40)
    (data8_val=0071BE40)
    (data9_val=0071BE40)
    (data10_val=0071BE40)
    (data11_val=0071BE40)
target=26, binarySearch=[26, 41]
target=27
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071BF30)
    (data1_def=0071BF30)
    (data2_def=0071BF30)
    (data3_def=0071BF30)
    (data4_def=0071BF30)
    (data5_def=0071BF30)
    (data8_def=0071BF30)
    (data9_def=0071BF30)
   (data10_def=0071BF30)
    (data11_def=0071BF30)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071BF30)
    (data1=0071BF30)
    (data2=0071BF30)
    (data3=0071BF30)
    (data4=0071BF30)
    (data5=0071BF30)
    (data8=0071BF30)
    (data9=0071BF30)
    (data10=0071BF30)
    (data11=0071BF30)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071BF30)
    (data1_val=0071BF30)
    (data2_val=0071BF30)
    (data3_val=0071BF30)
    (data4_val=0071BF30)
    (data5_val=0071BF30)
    (data8_val=0071BF30)
    (data9_val=0071BF30)
    (data10_val=0071BF30)
    (data11_val=0071BF30)
target=27, binarySearch=[27, 754]
target=28
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C020)
    (data1_def=0071C020)
    (data2_def=0071C020)
    (data3_def=0071C020)
    (data4_def=0071C020)
    (data5_def=0071C020)
    (data8_def=0071C020)
    (data9_def=0071C020)
   (data10_def=0071C020)
    (data11_def=0071C020)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C020)
    (data1=0071C020)
    (data2=0071C020)
    (data3=0071C020)
    (data4=0071C020)
    (data5=0071C020)
    (data8=0071C020)
    (data9=0071C020)
    (data10=0071C020)
    (data11=0071C020)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C020)
    (data1_val=0071C020)
    (data2_val=0071C020)
    (data3_val=0071C020)
    (data4_val=0071C020)
    (data5_val=0071C020)
    (data8_val=0071C020)
    (data9_val=0071C020)
    (data10_val=0071C020)
    (data11_val=0071C020)
target=28, binarySearch=[28, 701]
target=29
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C110)
    (data1_def=0071C110)
    (data2_def=0071C110)
    (data3_def=0071C110)
    (data4_def=0071C110)
    (data5_def=0071C110)
    (data8_def=0071C110)
    (data9_def=0071C110)
   (data10_def=0071C110)
    (data11_def=0071C110)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C110)
    (data1=0071C110)
    (data2=0071C110)
    (data3=0071C110)
    (data4=0071C110)
    (data5=0071C110)
    (data8=0071C110)
    (data9=0071C110)
    (data10=0071C110)
    (data11=0071C110)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C110)
    (data1_val=0071C110)
    (data2_val=0071C110)
    (data3_val=0071C110)
    (data4_val=0071C110)
    (data5_val=0071C110)
    (data8_val=0071C110)
    (data9_val=0071C110)
    (data10_val=0071C110)
    (data11_val=0071C110)
target=29, binarySearch=[29, 411]
target=30
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C200)
    (data1_def=0071C200)
    (data2_def=0071C200)
    (data3_def=0071C200)
    (data4_def=0071C200)
    (data5_def=0071C200)
    (data8_def=0071C200)
    (data9_def=0071C200)
   (data10_def=0071C200)
    (data11_def=0071C200)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C200)
    (data1=0071C200)
    (data2=0071C200)
    (data3=0071C200)
    (data4=0071C200)
    (data5=0071C200)
    (data8=0071C200)
    (data9=0071C200)
    (data10=0071C200)
    (data11=0071C200)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C200)
    (data1_val=0071C200)
    (data2_val=0071C200)
    (data3_val=0071C200)
    (data4_val=0071C200)
    (data5_val=0071C200)
    (data8_val=0071C200)
    (data9_val=0071C200)
    (data10_val=0071C200)
    (data11_val=0071C200)
target=30, binarySearch=[30, 915]
target=31
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C2F0)
    (data1_def=0071C2F0)
    (data2_def=0071C2F0)
    (data3_def=0071C2F0)
    (data4_def=0071C2F0)
    (data5_def=0071C2F0)
    (data8_def=0071C2F0)
    (data9_def=0071C2F0)
   (data10_def=0071C2F0)
    (data11_def=0071C2F0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C2F0)
    (data1=0071C2F0)
    (data2=0071C2F0)
    (data3=0071C2F0)
    (data4=0071C2F0)
    (data5=0071C2F0)
    (data8=0071C2F0)
    (data9=0071C2F0)
    (data10=0071C2F0)
    (data11=0071C2F0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C2F0)
    (data1_val=0071C2F0)
    (data2_val=0071C2F0)
    (data3_val=0071C2F0)
    (data4_val=0071C2F0)
    (data5_val=0071C2F0)
    (data8_val=0071C2F0)
    (data9_val=0071C2F0)
    (data10_val=0071C2F0)
    (data11_val=0071C2F0)
target=31, binarySearch=[31, 713]
target=32
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C3E0)
    (data1_def=0071C3E0)
    (data2_def=0071C3E0)
    (data3_def=0071C3E0)
    (data4_def=0071C3E0)
    (data5_def=0071C3E0)
    (data8_def=0071C3E0)
    (data9_def=0071C3E0)
   (data10_def=0071C3E0)
    (data11_def=0071C3E0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C3E0)
    (data1=0071C3E0)
    (data2=0071C3E0)
    (data3=0071C3E0)
    (data4=0071C3E0)
    (data5=0071C3E0)
    (data8=0071C3E0)
    (data9=0071C3E0)
    (data10=0071C3E0)
    (data11=0071C3E0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C3E0)
    (data1_val=0071C3E0)
    (data2_val=0071C3E0)
    (data3_val=0071C3E0)
    (data4_val=0071C3E0)
    (data5_val=0071C3E0)
    (data8_val=0071C3E0)
    (data9_val=0071C3E0)
    (data10_val=0071C3E0)
    (data11_val=0071C3E0)
target=32, binarySearch=[32, 354]
target=33
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C4D0)
    (data1_def=0071C4D0)
    (data2_def=0071C4D0)
    (data3_def=0071C4D0)
    (data4_def=0071C4D0)
    (data5_def=0071C4D0)
    (data8_def=0071C4D0)
    (data9_def=0071C4D0)
   (data10_def=0071C4D0)
    (data11_def=0071C4D0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C4D0)
    (data1=0071C4D0)
    (data2=0071C4D0)
    (data3=0071C4D0)
    (data4=0071C4D0)
    (data5=0071C4D0)
    (data8=0071C4D0)
    (data9=0071C4D0)
    (data10=0071C4D0)
    (data11=0071C4D0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C4D0)
    (data1_val=0071C4D0)
    (data2_val=0071C4D0)
    (data3_val=0071C4D0)
    (data4_val=0071C4D0)
    (data5_val=0071C4D0)
    (data8_val=0071C4D0)
    (data9_val=0071C4D0)
    (data10_val=0071C4D0)
    (data11_val=0071C4D0)
target=33, binarySearch=[33, 364]
target=34
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C5C0)
    (data1_def=0071C5C0)
    (data2_def=0071C5C0)
    (data3_def=0071C5C0)
    (data4_def=0071C5C0)
    (data5_def=0071C5C0)
    (data8_def=0071C5C0)
    (data9_def=0071C5C0)
   (data10_def=0071C5C0)
    (data11_def=0071C5C0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C5C0)
    (data1=0071C5C0)
    (data2=0071C5C0)
    (data3=0071C5C0)
    (data4=0071C5C0)
    (data5=0071C5C0)
    (data8=0071C5C0)
    (data9=0071C5C0)
    (data10=0071C5C0)
    (data11=0071C5C0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C5C0)
    (data1_val=0071C5C0)
    (data2_val=0071C5C0)
    (data3_val=0071C5C0)
    (data4_val=0071C5C0)
    (data5_val=0071C5C0)
    (data8_val=0071C5C0)
    (data9_val=0071C5C0)
    (data10_val=0071C5C0)
    (data11_val=0071C5C0)
target=34, binarySearch=[34, 240]
target=35
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C6B0)
    (data1_def=0071C6B0)
    (data2_def=0071C6B0)
    (data3_def=0071C6B0)
    (data4_def=0071C6B0)
    (data5_def=0071C6B0)
    (data8_def=0071C6B0)
    (data9_def=0071C6B0)
   (data10_def=0071C6B0)
    (data11_def=0071C6B0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C6B0)
    (data1=0071C6B0)
    (data2=0071C6B0)
    (data3=0071C6B0)
    (data4=0071C6B0)
    (data5=0071C6B0)
    (data8=0071C6B0)
    (data9=0071C6B0)
    (data10=0071C6B0)
    (data11=0071C6B0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C6B0)
    (data1_val=0071C6B0)
    (data2_val=0071C6B0)
    (data3_val=0071C6B0)
    (data4_val=0071C6B0)
    (data5_val=0071C6B0)
    (data8_val=0071C6B0)
    (data9_val=0071C6B0)
    (data10_val=0071C6B0)
    (data11_val=0071C6B0)
target=35, binarySearch=[35, 549]
target=36
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C7A0)
    (data1_def=0071C7A0)
    (data2_def=0071C7A0)
    (data3_def=0071C7A0)
    (data4_def=0071C7A0)
    (data5_def=0071C7A0)
    (data8_def=0071C7A0)
    (data9_def=0071C7A0)
   (data10_def=0071C7A0)
    (data11_def=0071C7A0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C7A0)
    (data1=0071C7A0)
    (data2=0071C7A0)
    (data3=0071C7A0)
    (data4=0071C7A0)
    (data5=0071C7A0)
    (data8=0071C7A0)
    (data9=0071C7A0)
    (data10=0071C7A0)
    (data11=0071C7A0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C7A0)
    (data1_val=0071C7A0)
    (data2_val=0071C7A0)
    (data3_val=0071C7A0)
    (data4_val=0071C7A0)
    (data5_val=0071C7A0)
    (data8_val=0071C7A0)
    (data9_val=0071C7A0)
    (data10_val=0071C7A0)
    (data11_val=0071C7A0)
target=36, binarySearch=[36, 643]
target=37
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C890)
    (data1_def=0071C890)
    (data2_def=0071C890)
    (data3_def=0071C890)
    (data4_def=0071C890)
    (data5_def=0071C890)
    (data8_def=0071C890)
    (data9_def=0071C890)
   (data10_def=0071C890)
    (data11_def=0071C890)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C890)
    (data1=0071C890)
    (data2=0071C890)
    (data3=0071C890)
    (data4=0071C890)
    (data5=0071C890)
    (data8=0071C890)
    (data9=0071C890)
    (data10=0071C890)
    (data11=0071C890)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C890)
    (data1_val=0071C890)
    (data2_val=0071C890)
    (data3_val=0071C890)
    (data4_val=0071C890)
    (data5_val=0071C890)
    (data8_val=0071C890)
    (data9_val=0071C890)
    (data10_val=0071C890)
    (data11_val=0071C890)
target=37, binarySearch=[37, 45]
target=38
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071C980)
    (data1_def=0071C980)
    (data2_def=0071C980)
    (data3_def=0071C980)
    (data4_def=0071C980)
    (data5_def=0071C980)
    (data8_def=0071C980)
    (data9_def=0071C980)
   (data10_def=0071C980)
    (data11_def=0071C980)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071C980)
    (data1=0071C980)
    (data2=0071C980)
    (data3=0071C980)
    (data4=0071C980)
    (data5=0071C980)
    (data8=0071C980)
    (data9=0071C980)
    (data10=0071C980)
    (data11=0071C980)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071C980)
    (data1_val=0071C980)
    (data2_val=0071C980)
    (data3_val=0071C980)
    (data4_val=0071C980)
    (data5_val=0071C980)
    (data8_val=0071C980)
    (data9_val=0071C980)
    (data10_val=0071C980)
    (data11_val=0071C980)
target=38, binarySearch=[38, 56]
target=39
  binarySearchValue(*array_shuffle1, target);
    (data_def=0071CA70)
    (data1_def=0071CA70)
    (data2_def=0071CA70)
    (data3_def=0071CA70)
    (data4_def=0071CA70)
    (data5_def=0071CA70)
    (data8_def=0071CA70)
    (data9_def=0071CA70)
   (data10_def=0071CA70)
    (data11_def=0071CA70)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0071CA70)
    (data1=0071CA70)
    (data2=0071CA70)
    (data3=0071CA70)
    (data4=0071CA70)
    (data5=0071CA70)
    (data8=0071CA70)
    (data9=0071CA70)
    (data10=0071CA70)
    (data11=0071CA70)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0071CA70)
    (data1_val=0071CA70)
    (data2_val=0071CA70)
    (data3_val=0071CA70)
    (data4_val=0071CA70)
    (data5_val=0071CA70)
    (data8_val=0071CA70)
    (data9_val=0071CA70)
    (data10_val=0071CA70)
    (data11_val=0071CA70)
target=39, binarySearch=[39, 755]
============================================================
Finalize
============================================================
----- Delete array(shuffle1) -----
----- Delete array(shuffle2) -----
----- Delete array(shuffle3) -----
----- Delete array(ordered) -----
----- Delete array(reversed) -----
----- Delete array(ordered_without_both_ends) -----
----- Delete array(hard_with_quick_sort) -----


============================================================
End
============================================================
*elapsed time=1.501431100 sec.
