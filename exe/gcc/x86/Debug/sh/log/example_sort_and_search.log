============================================================
Initialize
============================================================
----- Make Array(shuffle1) -----
[NG] Array is NOT ordered! [NG=489 / record(s)=1000]
Array is stable.
----- Make Array(shuffle2) -----
[NG] Array is NOT ordered! [NG=493 / record(s)=1000]
Array is stable.
----- Make Array(shuffle3) -----
[NG] Array is NOT ordered! [NG=481 / record(s)=1000]
Array is stable.
----- Make Array(ordered) -----
Array is ordered. [record(s)=1000]
Array is stable.
----- Make Array(reversed) -----
[NG] Array is NOT ordered! [NG=333 / record(s)=1000]
Array is stable.
----- Make Array(ordered_without_both_ends) -----
[NG] Array is NOT ordered! [NG=2 / record(s)=1000]
Array is stable.
----- Make Array(hard_with_quick_sort) -----
[NG] Array is NOT ordered! [NG=482 / record(s)=1000]
Array is stable.


============================================================
Sort type: [C-Library qsort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000102000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000101000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000110000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000043000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000087000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000036000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000098000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [C-Library qsort]
* Total time       = 0.000577000 sec.
* Average time     = 0.000082429 sec.
* Min time         = 0.000036000 sec.
* Max time         = 0.000110000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000264000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000284000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000195000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000077000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000090000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000079000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000195000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with function)]
* Total time       = 0.001184000 sec.
* Average time     = 0.000169143 sec.
* Min time         = 0.000077000 sec.
* Max time         = 0.000284000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with inline function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000190000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000189000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000193000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000077000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000090000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000093000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000196000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with inline function)]
* Total time       = 0.001028000 sec.
* Average time     = 0.000146857 sec.
* Min time         = 0.000077000 sec.
* Max time         = 0.000196000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with functor)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000204000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000189000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000196000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000077000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000089000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000079000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000195000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with functor)]
* Total time       = 0.001029000 sec.
* Average time     = 0.000147000 sec.
* Min time         = 0.000077000 sec.
* Max time         = 0.000204000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with lamda)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000192000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000190000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000194000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000077000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000089000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000080000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000195000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with lamda)]
* Total time       = 0.001017000 sec.
* Average time     = 0.000145286 sec.
* Min time         = 0.000077000 sec.
* Max time         = 0.000195000 sec.
============================================================


============================================================
Sort type: [STL std::stable_sort *Not inplace]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000221000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000220000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000219000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000115000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000151000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000128000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000217000 sec.
Array is ordered. [record(s)=1000]
Array is stable.

============================================================
Sort type: [STL std::stable_sort *Not inplace]
* Total time       = 0.001271000 sec.
* Average time     = 0.000181571 sec.
* Min time         = 0.000115000 sec.
* Max time         = 0.000221000 sec.
============================================================


============================================================
Sort type: [Bubble sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.012523000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=253599 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.012034000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=239327 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.012510000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251599 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.021277000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.002194000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.016788000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373496 count(s)]

============================================================
Sort type: [Bubble sort]
* Total time       = 0.077331000 sec.
* Average time     = 0.011047286 sec.
* Min time         = 0.000005000 sec.
* Max time         = 0.021277000 sec.
* Total Swapped    =   1618517 count(s)
* Average  Swapped =    231216 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Shaker sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.011947000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=253599 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.010983000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=239327 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.011616000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251599 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.020800000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000085000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.016440000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373496 count(s)]

============================================================
Sort type: [Shaker sort]
* Total time       = 0.071876000 sec.
* Average time     = 0.010268000 sec.
* Min time         = 0.000005000 sec.
* Max time         = 0.020800000 sec.
* Total Swapped    =   1618517 count(s)
* Average  Swapped =    231216 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Odd-Even sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.043343000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=253599 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.041006000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=239327 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.040503000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251599 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000076000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.044266000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.040090000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.043602000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373496 count(s)]

============================================================
Sort type: [Odd-Even sort]
* Total time       = 0.252886000 sec.
* Average time     = 0.036126571 sec.
* Min time         = 0.000076000 sec.
* Max time         = 0.044266000 sec.
* Total Swapped    =   1618517 count(s)
* Average  Swapped =    231216 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Shear sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001169000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=50925 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001199000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=49225 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001213000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=49972 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000594000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=14850 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000960000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=43102 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000665000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=16789 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001200000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=48946 count(s)]

============================================================
Sort type: [Shear sort]
* Total time       = 0.007000000 sec.
* Average time     = 0.001000000 sec.
* Min time         = 0.000594000 sec.
* Max time         = 0.001213000 sec.
* Total Swapped    =    273809 count(s)
* Average  Swapped =     39115 count(s)
* Min Swapped      =     14850 count(s)
* Max Swapped      =     50925 count(s)
============================================================


============================================================
Sort type: [Comb sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000278000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3868 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000271000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3733 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000286000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=4009 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000069000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000135000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=1401 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000115000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=754 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000281000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=4065 count(s)]

============================================================
Sort type: [Comb sort]
* Total time       = 0.001435000 sec.
* Average time     = 0.000205000 sec.
* Min time         = 0.000069000 sec.
* Max time         = 0.000286000 sec.
* Total Swapped    =     17830 count(s)
* Average  Swapped =      2547 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      4065 count(s)
============================================================


============================================================
Sort type: [Gnome sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.010728000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=253599 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.010017000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=239327 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.010633000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=251599 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.020900000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=498501 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000089000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.015605000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=373496 count(s)]

============================================================
Sort type: [Gnome sort]
* Total time       = 0.067976000 sec.
* Average time     = 0.009710857 sec.
* Min time         = 0.000004000 sec.
* Max time         = 0.020900000 sec.
* Total Swapped    =   1618517 count(s)
* Average  Swapped =    231216 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =    498501 count(s)
============================================================


============================================================
Sort type: [Quick sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000217000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2630 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000209000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2567 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000209000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2558 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000087000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=333 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000085000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=833 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000072000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=334 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000229000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2813 count(s)]

============================================================
Sort type: [Quick sort]
* Total time       = 0.001108000 sec.
* Average time     = 0.000158286 sec.
* Min time         = 0.000072000 sec.
* Max time         = 0.000229000 sec.
* Total Swapped    =     12068 count(s)
* Average  Swapped =      1724 count(s)
* Min Swapped      =       333 count(s)
* Max Swapped      =      2813 count(s)
============================================================


============================================================
Sort type: [Selection sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001869000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=997 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001846000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=988 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001873000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=990 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001749000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001883000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=833 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001722000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001885000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=990 count(s)]

============================================================
Sort type: [Selection sort]
* Total time       = 0.012827000 sec.
* Average time     = 0.001832429 sec.
* Min time         = 0.001722000 sec.
* Max time         = 0.001885000 sec.
* Total Swapped    =      4801 count(s)
* Average  Swapped =       685 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       997 count(s)
============================================================


============================================================
Sort type: [Heap sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000513000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=9566 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000517000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=9631 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000529000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=9494 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000737000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=15116 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000440000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=8312 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000714000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=14570 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000502000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=8981 count(s)]

============================================================
Sort type: [Heap sort]
* Total time       = 0.003952000 sec.
* Average time     = 0.000564571 sec.
* Min time         = 0.000440000 sec.
* Max time         = 0.000737000 sec.
* Total Swapped    =     75670 count(s)
* Average  Swapped =     10810 count(s)
* Min Swapped      =      8312 count(s)
* Max Swapped      =     15116 count(s)
============================================================


============================================================
Sort type: [Insertion sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.004306000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=991 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.004040000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=995 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.004330000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=991 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.008525000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000063000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.006427000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=988 count(s)]

============================================================
Sort type: [Insertion sort]
* Total time       = 0.027695000 sec.
* Average time     = 0.003956429 sec.
* Min time         = 0.000004000 sec.
* Max time         = 0.008525000 sec.
* Total Swapped    =      5963 count(s)
* Average  Swapped =       851 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       999 count(s)
============================================================


============================================================
Sort type: [Shell sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000293000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3240 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000291000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3191 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000304000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3326 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000020000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000153000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2652 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000065000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=704 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000283000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=3342 count(s)]

============================================================
Sort type: [Shell sort]
* Total time       = 0.001409000 sec.
* Average time     = 0.000201286 sec.
* Min time         = 0.000020000 sec.
* Max time         = 0.000304000 sec.
* Total Swapped    =     16455 count(s)
* Average  Swapped =      2350 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      3342 count(s)
============================================================


============================================================
Sort type: [Inplace Merge sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.003567000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4300 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003602000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4287 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.003618000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4305 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000010000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.006998000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4516 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000098000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1006 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.005407000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4290 count(s)]

============================================================
Sort type: [Inplace Merge sort]
* Total time       = 0.023300000 sec.
* Average time     = 0.003328571 sec.
* Min time         = 0.000010000 sec.
* Max time         = 0.006998000 sec.
* Total Swapped    =     22704 count(s)
* Average  Swapped =      3243 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      4516 count(s)
============================================================


============================================================
Sort type: [Intro sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000196000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2351 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000191000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2303 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000188000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2291 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000055000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=576 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000034000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=78 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000199000 sec.
Array is ordered. [record(s)=1000]
Array is NOT STABLE.
[swapped=2557 count(s)]

============================================================
Sort type: [Intro sort]
* Total time       = 0.000868000 sec.
* Average time     = 0.000124000 sec.
* Min time         = 0.000005000 sec.
* Max time         = 0.000199000 sec.
* Total Swapped    =     10156 count(s)
* Average  Swapped =      1450 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      2557 count(s)
============================================================


============================================================
Sort type: [Radix sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000082000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1000 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000081000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=997 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000093000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=998 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000057000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000079000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=1000 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000056000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=4 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000081000 sec.
Array is ordered. [record(s)=1000]
Array is stable.
[swapped=999 count(s)]

============================================================
Sort type: [Radix sort]
* Total time       = 0.000529000 sec.
* Average time     = 0.000075571 sec.
* Min time         = 0.000056000 sec.
* Max time         = 0.000093000 sec.
* Total Swapped    =      4998 count(s)
* Average  Swapped =       714 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      1000 count(s)
============================================================


============================================================
Result(Summary)
============================================================
Array Element size = 80 Bytes
Array Element(s)   = 1000 Count(s)
Total Array size   = 80000 Bytes
--------------------------------------------------------------------------------------------------------------------------------
- Sort name:                Elapsed Time (Sum/Average/Min/Max) [sec.]             Swapped (Sum/Average/Min/Max) [count(s)]
--------------------------------------------------------------------------------------------------------------------------------
[C-Library sort](Quick sort)
- qsort(inline-function):   0.000577000/  0.000082429/  0.000036000/  0.000110000
--------------------------------------------------------------------------------------------------------------------------------
[STL sort](Intro sort)
- std::sort(function):      0.001184000/  0.000169143/  0.000077000/  0.000284000
- std::sort(inline-func):   0.001028000/  0.000146857/  0.000077000/  0.000196000
- std::sort(functor):       0.001029000/  0.000147000/  0.000077000/  0.000204000
- std::sort(lambda):        0.001017000/  0.000145286/  0.000077000/  0.000195000
--------------------------------------------------------------------------------------------------------------------------------
[STL stable sort](Merge sort) *Not In-place sort
- std::stable_sort<S>:      0.001271000/  0.000181571/  0.000115000/  0.000221000
--------------------------------------------------------------------------------------------------------------------------------
[Exchange sorts]
- Bubble sort<S>:           0.077331000/  0.011047286/  0.000005000/  0.021277000    1618517/     231216/          0/     498501
- Shaker sort<S>:           0.071876000/  0.010268000/  0.000005000/  0.020800000    1618517/     231216/          0/     498501
- Odd-Even sort<S>:         0.252886000/  0.036126571/  0.000076000/  0.044266000    1618517/     231216/          0/     498501
- Shear sort:               0.007000000/  0.001000000/  0.000594000/  0.001213000     273809/      39115/      14850/      50925
- Comb sort:                0.001435000/  0.000205000/  0.000069000/  0.000286000      17830/       2547/          0/       4065
- Gnome sort<S>:            0.067976000/  0.009710857/  0.000004000/  0.020900000    1618517/     231216/          0/     498501
--------------------------------------------------------------------------------------------------------------------------------
[Partition-exchange sorts]
- Quick sort:               0.001108000/  0.000158286/  0.000072000/  0.000229000      12068/       1724/        333/       2813
--------------------------------------------------------------------------------------------------------------------------------
[Selection sorts]
- Selection sort:           0.012827000/  0.001832429/  0.001722000/  0.001885000       4801/        685/          0/        997
- Heap sort:                0.003952000/  0.000564571/  0.000440000/  0.000737000      75670/      10810/       8312/      15116
--------------------------------------------------------------------------------------------------------------------------------
[Insertion sorts]
- Insertion sort<S>:        0.027695000/  0.003956429/  0.000004000/  0.008525000       5963/        851/          0/        999
- Shell sort:               0.001409000/  0.000201286/  0.000020000/  0.000304000      16455/       2350/          0/       3342
--------------------------------------------------------------------------------------------------------------------------------
[Merge sorts]
- Inplace-Merge sort<S>:    0.023300000/  0.003328571/  0.000010000/  0.006998000      22704/       3243/          0/       4516
--------------------------------------------------------------------------------------------------------------------------------
[Hybrid sorts]
- Intro sort:               0.000868000/  0.000124000/  0.000005000/  0.000199000      10156/       1450/          0/       2557
--------------------------------------------------------------------------------------------------------------------------------
[Distribution sorts] *Not In-place sort
- Radix sort<S>:            0.000529000/  0.000075571/  0.000056000/  0.000093000       4998/        714/          0/       1000
--------------------------------------------------------------------------------------------------------------------------------
* <S> ... Stable sort algorithm.


[Variation test for sort(intro-sort)]
(result=2351)
(result1=2351)
(result3=2351)
(result4=2351)
(result5=2351)
(result6=2351)
(result8=2351)
(result9=2351)
(result10=2351)
(result11=2312)

[Variation test for linear-search]
target=-1
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x0)
    (data1_def=0x0)
    (data2_def=0x0)
    (data3_def=0x0)
    (data4_def=0x0)
    (data5_def=0x0)
    (data8_def=0x0)
    (data9_def=0x0)
    (data10_def=0x0)
    (data11_def=0x0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x0)
    (data1=0x0)
    (data2=0x0)
    (data3=0x0)
    (data4=0x0)
    (data5=0x0)
    (data8=0x0)
    (data9=0x0)
    (data10=0x0)
    (data11=0x0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x0)
    (data1_val=0x0)
    (data2_val=0x0)
    (data3_val=0x0)
    (data4_val=0x0)
    (data5_val=0x0)
    (data8_val=0x0)
    (data9_val=0x0)
    (data10_val=0x0)
    (data11_val=0x0)
target=-1, linearSearch=nullptr
target=0
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800281c0)
    (data1_def=0x800281c0)
    (data2_def=0x800281c0)
    (data3_def=0x800281c0)
    (data4_def=0x800281c0)
    (data5_def=0x800281c0)
    (data8_def=0x800281c0)
    (data9_def=0x800281c0)
    (data10_def=0x800281c0)
    (data11_def=0x800281c0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800281c0)
    (data1=0x800281c0)
    (data2=0x800281c0)
    (data3=0x800281c0)
    (data4=0x800281c0)
    (data5=0x800281c0)
    (data8=0x800281c0)
    (data9=0x800281c0)
    (data10=0x800281c0)
    (data11=0x800281c0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800281c0)
    (data1_val=0x800281c0)
    (data2_val=0x800281c0)
    (data3_val=0x800281c0)
    (data4_val=0x800281c0)
    (data5_val=0x800281c0)
    (data8_val=0x800281c0)
    (data9_val=0x800281c0)
    (data10_val=0x800281c0)
    (data11_val=0x800281c0)
target=0, linearSearch=[0, 399]
target=1
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80022630)
    (data1_def=0x80022630)
    (data2_def=0x80022630)
    (data3_def=0x80022630)
    (data4_def=0x80022630)
    (data5_def=0x80022630)
    (data8_def=0x80022630)
    (data9_def=0x80022630)
    (data10_def=0x80022630)
    (data11_def=0x80022630)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80022630)
    (data1=0x80022630)
    (data2=0x80022630)
    (data3=0x80022630)
    (data4=0x80022630)
    (data5=0x80022630)
    (data8=0x80022630)
    (data9=0x80022630)
    (data10=0x80022630)
    (data11=0x80022630)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80022630)
    (data1_val=0x80022630)
    (data2_val=0x80022630)
    (data3_val=0x80022630)
    (data4_val=0x80022630)
    (data5_val=0x80022630)
    (data8_val=0x80022630)
    (data9_val=0x80022630)
    (data10_val=0x80022630)
    (data11_val=0x80022630)
target=1, linearSearch=[1, 106]
target=2
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80028da0)
    (data1_def=0x80028da0)
    (data2_def=0x80028da0)
    (data3_def=0x80028da0)
    (data4_def=0x80028da0)
    (data5_def=0x80028da0)
    (data8_def=0x80028da0)
    (data9_def=0x80028da0)
    (data10_def=0x80028da0)
    (data11_def=0x80028da0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80028da0)
    (data1=0x80028da0)
    (data2=0x80028da0)
    (data3=0x80028da0)
    (data4=0x80028da0)
    (data5=0x80028da0)
    (data8=0x80028da0)
    (data9=0x80028da0)
    (data10=0x80028da0)
    (data11=0x80028da0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80028da0)
    (data1_val=0x80028da0)
    (data2_val=0x80028da0)
    (data3_val=0x80028da0)
    (data4_val=0x80028da0)
    (data5_val=0x80028da0)
    (data8_val=0x80028da0)
    (data9_val=0x80028da0)
    (data10_val=0x80028da0)
    (data11_val=0x80028da0)
target=2, linearSearch=[2, 437]
target=3
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80022ea0)
    (data1_def=0x80022ea0)
    (data2_def=0x80022ea0)
    (data3_def=0x80022ea0)
    (data4_def=0x80022ea0)
    (data5_def=0x80022ea0)
    (data8_def=0x80022ea0)
    (data9_def=0x80022ea0)
    (data10_def=0x80022ea0)
    (data11_def=0x80022ea0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80022ea0)
    (data1=0x80022ea0)
    (data2=0x80022ea0)
    (data3=0x80022ea0)
    (data4=0x80022ea0)
    (data5=0x80022ea0)
    (data8=0x80022ea0)
    (data9=0x80022ea0)
    (data10=0x80022ea0)
    (data11=0x80022ea0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80022ea0)
    (data1_val=0x80022ea0)
    (data2_val=0x80022ea0)
    (data3_val=0x80022ea0)
    (data4_val=0x80022ea0)
    (data5_val=0x80022ea0)
    (data8_val=0x80022ea0)
    (data9_val=0x80022ea0)
    (data10_val=0x80022ea0)
    (data11_val=0x80022ea0)
target=3, linearSearch=[3, 133]
target=4
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80028850)
    (data1_def=0x80028850)
    (data2_def=0x80028850)
    (data3_def=0x80028850)
    (data4_def=0x80028850)
    (data5_def=0x80028850)
    (data8_def=0x80028850)
    (data9_def=0x80028850)
    (data10_def=0x80028850)
    (data11_def=0x80028850)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80028850)
    (data1=0x80028850)
    (data2=0x80028850)
    (data3=0x80028850)
    (data4=0x80028850)
    (data5=0x80028850)
    (data8=0x80028850)
    (data9=0x80028850)
    (data10=0x80028850)
    (data11=0x80028850)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80028850)
    (data1_val=0x80028850)
    (data2_val=0x80028850)
    (data3_val=0x80028850)
    (data4_val=0x80028850)
    (data5_val=0x80028850)
    (data8_val=0x80028850)
    (data9_val=0x80028850)
    (data10_val=0x80028850)
    (data11_val=0x80028850)
target=4, linearSearch=[4, 420]
target=5
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80022d10)
    (data1_def=0x80022d10)
    (data2_def=0x80022d10)
    (data3_def=0x80022d10)
    (data4_def=0x80022d10)
    (data5_def=0x80022d10)
    (data8_def=0x80022d10)
    (data9_def=0x80022d10)
    (data10_def=0x80022d10)
    (data11_def=0x80022d10)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80022d10)
    (data1=0x80022d10)
    (data2=0x80022d10)
    (data3=0x80022d10)
    (data4=0x80022d10)
    (data5=0x80022d10)
    (data8=0x80022d10)
    (data9=0x80022d10)
    (data10=0x80022d10)
    (data11=0x80022d10)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80022d10)
    (data1_val=0x80022d10)
    (data2_val=0x80022d10)
    (data3_val=0x80022d10)
    (data4_val=0x80022d10)
    (data5_val=0x80022d10)
    (data8_val=0x80022d10)
    (data9_val=0x80022d10)
    (data10_val=0x80022d10)
    (data11_val=0x80022d10)
target=5, linearSearch=[5, 128]
target=6
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002dd00)
    (data1_def=0x8002dd00)
    (data2_def=0x8002dd00)
    (data3_def=0x8002dd00)
    (data4_def=0x8002dd00)
    (data5_def=0x8002dd00)
    (data8_def=0x8002dd00)
    (data9_def=0x8002dd00)
    (data10_def=0x8002dd00)
    (data11_def=0x8002dd00)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002dd00)
    (data1=0x8002dd00)
    (data2=0x8002dd00)
    (data3=0x8002dd00)
    (data4=0x8002dd00)
    (data5=0x8002dd00)
    (data8=0x8002dd00)
    (data9=0x8002dd00)
    (data10=0x8002dd00)
    (data11=0x8002dd00)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002dd00)
    (data1_val=0x8002dd00)
    (data2_val=0x8002dd00)
    (data3_val=0x8002dd00)
    (data4_val=0x8002dd00)
    (data5_val=0x8002dd00)
    (data8_val=0x8002dd00)
    (data9_val=0x8002dd00)
    (data10_val=0x8002dd00)
    (data11_val=0x8002dd00)
target=6, linearSearch=[6, 691]
target=7
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80025e70)
    (data1_def=0x80025e70)
    (data2_def=0x80025e70)
    (data3_def=0x80025e70)
    (data4_def=0x80025e70)
    (data5_def=0x80025e70)
    (data8_def=0x80025e70)
    (data9_def=0x80025e70)
    (data10_def=0x80025e70)
    (data11_def=0x80025e70)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80025e70)
    (data1=0x80025e70)
    (data2=0x80025e70)
    (data3=0x80025e70)
    (data4=0x80025e70)
    (data5=0x80025e70)
    (data8=0x80025e70)
    (data9=0x80025e70)
    (data10=0x80025e70)
    (data11=0x80025e70)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80025e70)
    (data1_val=0x80025e70)
    (data2_val=0x80025e70)
    (data3_val=0x80025e70)
    (data4_val=0x80025e70)
    (data5_val=0x80025e70)
    (data8_val=0x80025e70)
    (data9_val=0x80025e70)
    (data10_val=0x80025e70)
    (data11_val=0x80025e70)
target=7, linearSearch=[7, 286]
target=8
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80025c90)
    (data1_def=0x80025c90)
    (data2_def=0x80025c90)
    (data3_def=0x80025c90)
    (data4_def=0x80025c90)
    (data5_def=0x80025c90)
    (data8_def=0x80025c90)
    (data9_def=0x80025c90)
    (data10_def=0x80025c90)
    (data11_def=0x80025c90)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80025c90)
    (data1=0x80025c90)
    (data2=0x80025c90)
    (data3=0x80025c90)
    (data4=0x80025c90)
    (data5=0x80025c90)
    (data8=0x80025c90)
    (data9=0x80025c90)
    (data10=0x80025c90)
    (data11=0x80025c90)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80025c90)
    (data1_val=0x80025c90)
    (data2_val=0x80025c90)
    (data3_val=0x80025c90)
    (data4_val=0x80025c90)
    (data5_val=0x80025c90)
    (data8_val=0x80025c90)
    (data9_val=0x80025c90)
    (data10_val=0x80025c90)
    (data11_val=0x80025c90)
target=8, linearSearch=[8, 280]
target=9
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80020ec0)
    (data1_def=0x80020ec0)
    (data2_def=0x80020ec0)
    (data3_def=0x80020ec0)
    (data4_def=0x80020ec0)
    (data5_def=0x80020ec0)
    (data8_def=0x80020ec0)
    (data9_def=0x80020ec0)
    (data10_def=0x80020ec0)
    (data11_def=0x80020ec0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80020ec0)
    (data1=0x80020ec0)
    (data2=0x80020ec0)
    (data3=0x80020ec0)
    (data4=0x80020ec0)
    (data5=0x80020ec0)
    (data8=0x80020ec0)
    (data9=0x80020ec0)
    (data10=0x80020ec0)
    (data11=0x80020ec0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80020ec0)
    (data1_val=0x80020ec0)
    (data2_val=0x80020ec0)
    (data3_val=0x80020ec0)
    (data4_val=0x80020ec0)
    (data5_val=0x80020ec0)
    (data8_val=0x80020ec0)
    (data9_val=0x80020ec0)
    (data10_val=0x80020ec0)
    (data11_val=0x80020ec0)
target=9, linearSearch=[9, 31]
target=10
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800239e0)
    (data1_def=0x800239e0)
    (data2_def=0x800239e0)
    (data3_def=0x800239e0)
    (data4_def=0x800239e0)
    (data5_def=0x800239e0)
    (data8_def=0x800239e0)
    (data9_def=0x800239e0)
    (data10_def=0x800239e0)
    (data11_def=0x800239e0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800239e0)
    (data1=0x800239e0)
    (data2=0x800239e0)
    (data3=0x800239e0)
    (data4=0x800239e0)
    (data5=0x800239e0)
    (data8=0x800239e0)
    (data9=0x800239e0)
    (data10=0x800239e0)
    (data11=0x800239e0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800239e0)
    (data1_val=0x800239e0)
    (data2_val=0x800239e0)
    (data3_val=0x800239e0)
    (data4_val=0x800239e0)
    (data5_val=0x800239e0)
    (data8_val=0x800239e0)
    (data9_val=0x800239e0)
    (data10_val=0x800239e0)
    (data11_val=0x800239e0)
target=10, linearSearch=[10, 169]
target=11
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80023990)
    (data1_def=0x80023990)
    (data2_def=0x80023990)
    (data3_def=0x80023990)
    (data4_def=0x80023990)
    (data5_def=0x80023990)
    (data8_def=0x80023990)
    (data9_def=0x80023990)
    (data10_def=0x80023990)
    (data11_def=0x80023990)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80023990)
    (data1=0x80023990)
    (data2=0x80023990)
    (data3=0x80023990)
    (data4=0x80023990)
    (data5=0x80023990)
    (data8=0x80023990)
    (data9=0x80023990)
    (data10=0x80023990)
    (data11=0x80023990)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80023990)
    (data1_val=0x80023990)
    (data2_val=0x80023990)
    (data3_val=0x80023990)
    (data4_val=0x80023990)
    (data5_val=0x80023990)
    (data8_val=0x80023990)
    (data9_val=0x80023990)
    (data10_val=0x80023990)
    (data11_val=0x80023990)
target=11, linearSearch=[11, 168]
target=12
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800218c0)
    (data1_def=0x800218c0)
    (data2_def=0x800218c0)
    (data3_def=0x800218c0)
    (data4_def=0x800218c0)
    (data5_def=0x800218c0)
    (data8_def=0x800218c0)
    (data9_def=0x800218c0)
    (data10_def=0x800218c0)
    (data11_def=0x800218c0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800218c0)
    (data1=0x800218c0)
    (data2=0x800218c0)
    (data3=0x800218c0)
    (data4=0x800218c0)
    (data5=0x800218c0)
    (data8=0x800218c0)
    (data9=0x800218c0)
    (data10=0x800218c0)
    (data11=0x800218c0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800218c0)
    (data1_val=0x800218c0)
    (data2_val=0x800218c0)
    (data3_val=0x800218c0)
    (data4_val=0x800218c0)
    (data5_val=0x800218c0)
    (data8_val=0x800218c0)
    (data9_val=0x800218c0)
    (data10_val=0x800218c0)
    (data11_val=0x800218c0)
target=12, linearSearch=[12, 63]
target=13
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80027b80)
    (data1_def=0x80027b80)
    (data2_def=0x80027b80)
    (data3_def=0x80027b80)
    (data4_def=0x80027b80)
    (data5_def=0x80027b80)
    (data8_def=0x80027b80)
    (data9_def=0x80027b80)
    (data10_def=0x80027b80)
    (data11_def=0x80027b80)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80027b80)
    (data1=0x80027b80)
    (data2=0x80027b80)
    (data3=0x80027b80)
    (data4=0x80027b80)
    (data5=0x80027b80)
    (data8=0x80027b80)
    (data9=0x80027b80)
    (data10=0x80027b80)
    (data11=0x80027b80)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80027b80)
    (data1_val=0x80027b80)
    (data2_val=0x80027b80)
    (data3_val=0x80027b80)
    (data4_val=0x80027b80)
    (data5_val=0x80027b80)
    (data8_val=0x80027b80)
    (data9_val=0x80027b80)
    (data10_val=0x80027b80)
    (data11_val=0x80027b80)
target=13, linearSearch=[13, 379]
target=14
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800240c0)
    (data1_def=0x800240c0)
    (data2_def=0x800240c0)
    (data3_def=0x800240c0)
    (data4_def=0x800240c0)
    (data5_def=0x800240c0)
    (data8_def=0x800240c0)
    (data9_def=0x800240c0)
    (data10_def=0x800240c0)
    (data11_def=0x800240c0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800240c0)
    (data1=0x800240c0)
    (data2=0x800240c0)
    (data3=0x800240c0)
    (data4=0x800240c0)
    (data5=0x800240c0)
    (data8=0x800240c0)
    (data9=0x800240c0)
    (data10=0x800240c0)
    (data11=0x800240c0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800240c0)
    (data1_val=0x800240c0)
    (data2_val=0x800240c0)
    (data3_val=0x800240c0)
    (data4_val=0x800240c0)
    (data5_val=0x800240c0)
    (data8_val=0x800240c0)
    (data9_val=0x800240c0)
    (data10_val=0x800240c0)
    (data11_val=0x800240c0)
target=14, linearSearch=[14, 191]
target=15
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80020ba0)
    (data1_def=0x80020ba0)
    (data2_def=0x80020ba0)
    (data3_def=0x80020ba0)
    (data4_def=0x80020ba0)
    (data5_def=0x80020ba0)
    (data8_def=0x80020ba0)
    (data9_def=0x80020ba0)
    (data10_def=0x80020ba0)
    (data11_def=0x80020ba0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80020ba0)
    (data1=0x80020ba0)
    (data2=0x80020ba0)
    (data3=0x80020ba0)
    (data4=0x80020ba0)
    (data5=0x80020ba0)
    (data8=0x80020ba0)
    (data9=0x80020ba0)
    (data10=0x80020ba0)
    (data11=0x80020ba0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80020ba0)
    (data1_val=0x80020ba0)
    (data2_val=0x80020ba0)
    (data3_val=0x80020ba0)
    (data4_val=0x80020ba0)
    (data5_val=0x80020ba0)
    (data8_val=0x80020ba0)
    (data9_val=0x80020ba0)
    (data10_val=0x80020ba0)
    (data11_val=0x80020ba0)
target=15, linearSearch=[15, 21]
target=16
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800256a0)
    (data1_def=0x800256a0)
    (data2_def=0x800256a0)
    (data3_def=0x800256a0)
    (data4_def=0x800256a0)
    (data5_def=0x800256a0)
    (data8_def=0x800256a0)
    (data9_def=0x800256a0)
    (data10_def=0x800256a0)
    (data11_def=0x800256a0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800256a0)
    (data1=0x800256a0)
    (data2=0x800256a0)
    (data3=0x800256a0)
    (data4=0x800256a0)
    (data5=0x800256a0)
    (data8=0x800256a0)
    (data9=0x800256a0)
    (data10=0x800256a0)
    (data11=0x800256a0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800256a0)
    (data1_val=0x800256a0)
    (data2_val=0x800256a0)
    (data3_val=0x800256a0)
    (data4_val=0x800256a0)
    (data5_val=0x800256a0)
    (data8_val=0x800256a0)
    (data9_val=0x800256a0)
    (data10_val=0x800256a0)
    (data11_val=0x800256a0)
target=16, linearSearch=[16, 261]
target=17
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002b370)
    (data1_def=0x8002b370)
    (data2_def=0x8002b370)
    (data3_def=0x8002b370)
    (data4_def=0x8002b370)
    (data5_def=0x8002b370)
    (data8_def=0x8002b370)
    (data9_def=0x8002b370)
    (data10_def=0x8002b370)
    (data11_def=0x8002b370)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002b370)
    (data1=0x8002b370)
    (data2=0x8002b370)
    (data3=0x8002b370)
    (data4=0x8002b370)
    (data5=0x8002b370)
    (data8=0x8002b370)
    (data9=0x8002b370)
    (data10=0x8002b370)
    (data11=0x8002b370)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002b370)
    (data1_val=0x8002b370)
    (data2_val=0x8002b370)
    (data3_val=0x8002b370)
    (data4_val=0x8002b370)
    (data5_val=0x8002b370)
    (data8_val=0x8002b370)
    (data9_val=0x8002b370)
    (data10_val=0x8002b370)
    (data11_val=0x8002b370)
target=17, linearSearch=[17, 558]
target=18
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800292f0)
    (data1_def=0x800292f0)
    (data2_def=0x800292f0)
    (data3_def=0x800292f0)
    (data4_def=0x800292f0)
    (data5_def=0x800292f0)
    (data8_def=0x800292f0)
    (data9_def=0x800292f0)
    (data10_def=0x800292f0)
    (data11_def=0x800292f0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800292f0)
    (data1=0x800292f0)
    (data2=0x800292f0)
    (data3=0x800292f0)
    (data4=0x800292f0)
    (data5=0x800292f0)
    (data8=0x800292f0)
    (data9=0x800292f0)
    (data10=0x800292f0)
    (data11=0x800292f0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800292f0)
    (data1_val=0x800292f0)
    (data2_val=0x800292f0)
    (data3_val=0x800292f0)
    (data4_val=0x800292f0)
    (data5_val=0x800292f0)
    (data8_val=0x800292f0)
    (data9_val=0x800292f0)
    (data10_val=0x800292f0)
    (data11_val=0x800292f0)
target=18, linearSearch=[18, 454]
target=19
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002d940)
    (data1_def=0x8002d940)
    (data2_def=0x8002d940)
    (data3_def=0x8002d940)
    (data4_def=0x8002d940)
    (data5_def=0x8002d940)
    (data8_def=0x8002d940)
    (data9_def=0x8002d940)
    (data10_def=0x8002d940)
    (data11_def=0x8002d940)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002d940)
    (data1=0x8002d940)
    (data2=0x8002d940)
    (data3=0x8002d940)
    (data4=0x8002d940)
    (data5=0x8002d940)
    (data8=0x8002d940)
    (data9=0x8002d940)
    (data10=0x8002d940)
    (data11=0x8002d940)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002d940)
    (data1_val=0x8002d940)
    (data2_val=0x8002d940)
    (data3_val=0x8002d940)
    (data4_val=0x8002d940)
    (data5_val=0x8002d940)
    (data8_val=0x8002d940)
    (data9_val=0x8002d940)
    (data10_val=0x8002d940)
    (data11_val=0x8002d940)
target=19, linearSearch=[19, 679]
target=20
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80020dd0)
    (data1_def=0x80020dd0)
    (data2_def=0x80020dd0)
    (data3_def=0x80020dd0)
    (data4_def=0x80020dd0)
    (data5_def=0x80020dd0)
    (data8_def=0x80020dd0)
    (data9_def=0x80020dd0)
    (data10_def=0x80020dd0)
    (data11_def=0x80020dd0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80020dd0)
    (data1=0x80020dd0)
    (data2=0x80020dd0)
    (data3=0x80020dd0)
    (data4=0x80020dd0)
    (data5=0x80020dd0)
    (data8=0x80020dd0)
    (data9=0x80020dd0)
    (data10=0x80020dd0)
    (data11=0x80020dd0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80020dd0)
    (data1_val=0x80020dd0)
    (data2_val=0x80020dd0)
    (data3_val=0x80020dd0)
    (data4_val=0x80020dd0)
    (data5_val=0x80020dd0)
    (data8_val=0x80020dd0)
    (data9_val=0x80020dd0)
    (data10_val=0x80020dd0)
    (data11_val=0x80020dd0)
target=20, linearSearch=[20, 28]
target=21
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80026460)
    (data1_def=0x80026460)
    (data2_def=0x80026460)
    (data3_def=0x80026460)
    (data4_def=0x80026460)
    (data5_def=0x80026460)
    (data8_def=0x80026460)
    (data9_def=0x80026460)
    (data10_def=0x80026460)
    (data11_def=0x80026460)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80026460)
    (data1=0x80026460)
    (data2=0x80026460)
    (data3=0x80026460)
    (data4=0x80026460)
    (data5=0x80026460)
    (data8=0x80026460)
    (data9=0x80026460)
    (data10=0x80026460)
    (data11=0x80026460)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80026460)
    (data1_val=0x80026460)
    (data2_val=0x80026460)
    (data3_val=0x80026460)
    (data4_val=0x80026460)
    (data5_val=0x80026460)
    (data8_val=0x80026460)
    (data9_val=0x80026460)
    (data10_val=0x80026460)
    (data11_val=0x80026460)
target=21, linearSearch=[21, 305]
target=22
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80026370)
    (data1_def=0x80026370)
    (data2_def=0x80026370)
    (data3_def=0x80026370)
    (data4_def=0x80026370)
    (data5_def=0x80026370)
    (data8_def=0x80026370)
    (data9_def=0x80026370)
    (data10_def=0x80026370)
    (data11_def=0x80026370)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80026370)
    (data1=0x80026370)
    (data2=0x80026370)
    (data3=0x80026370)
    (data4=0x80026370)
    (data5=0x80026370)
    (data8=0x80026370)
    (data9=0x80026370)
    (data10=0x80026370)
    (data11=0x80026370)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80026370)
    (data1_val=0x80026370)
    (data2_val=0x80026370)
    (data3_val=0x80026370)
    (data4_val=0x80026370)
    (data5_val=0x80026370)
    (data8_val=0x80026370)
    (data9_val=0x80026370)
    (data10_val=0x80026370)
    (data11_val=0x80026370)
target=22, linearSearch=[22, 302]
target=23
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002c5e0)
    (data1_def=0x8002c5e0)
    (data2_def=0x8002c5e0)
    (data3_def=0x8002c5e0)
    (data4_def=0x8002c5e0)
    (data5_def=0x8002c5e0)
    (data8_def=0x8002c5e0)
    (data9_def=0x8002c5e0)
    (data10_def=0x8002c5e0)
    (data11_def=0x8002c5e0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002c5e0)
    (data1=0x8002c5e0)
    (data2=0x8002c5e0)
    (data3=0x8002c5e0)
    (data4=0x8002c5e0)
    (data5=0x8002c5e0)
    (data8=0x8002c5e0)
    (data9=0x8002c5e0)
    (data10=0x8002c5e0)
    (data11=0x8002c5e0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002c5e0)
    (data1_val=0x8002c5e0)
    (data2_val=0x8002c5e0)
    (data3_val=0x8002c5e0)
    (data4_val=0x8002c5e0)
    (data5_val=0x8002c5e0)
    (data8_val=0x8002c5e0)
    (data9_val=0x8002c5e0)
    (data10_val=0x8002c5e0)
    (data11_val=0x8002c5e0)
target=23, linearSearch=[23, 617]
target=24
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80022540)
    (data1_def=0x80022540)
    (data2_def=0x80022540)
    (data3_def=0x80022540)
    (data4_def=0x80022540)
    (data5_def=0x80022540)
    (data8_def=0x80022540)
    (data9_def=0x80022540)
    (data10_def=0x80022540)
    (data11_def=0x80022540)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80022540)
    (data1=0x80022540)
    (data2=0x80022540)
    (data3=0x80022540)
    (data4=0x80022540)
    (data5=0x80022540)
    (data8=0x80022540)
    (data9=0x80022540)
    (data10=0x80022540)
    (data11=0x80022540)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80022540)
    (data1_val=0x80022540)
    (data2_val=0x80022540)
    (data3_val=0x80022540)
    (data4_val=0x80022540)
    (data5_val=0x80022540)
    (data8_val=0x80022540)
    (data9_val=0x80022540)
    (data10_val=0x80022540)
    (data11_val=0x80022540)
target=24, linearSearch=[24, 103]
target=25
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800244d0)
    (data1_def=0x800244d0)
    (data2_def=0x800244d0)
    (data3_def=0x800244d0)
    (data4_def=0x800244d0)
    (data5_def=0x800244d0)
    (data8_def=0x800244d0)
    (data9_def=0x800244d0)
    (data10_def=0x800244d0)
    (data11_def=0x800244d0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800244d0)
    (data1=0x800244d0)
    (data2=0x800244d0)
    (data3=0x800244d0)
    (data4=0x800244d0)
    (data5=0x800244d0)
    (data8=0x800244d0)
    (data9=0x800244d0)
    (data10=0x800244d0)
    (data11=0x800244d0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800244d0)
    (data1_val=0x800244d0)
    (data2_val=0x800244d0)
    (data3_val=0x800244d0)
    (data4_val=0x800244d0)
    (data5_val=0x800244d0)
    (data8_val=0x800244d0)
    (data9_val=0x800244d0)
    (data10_val=0x800244d0)
    (data11_val=0x800244d0)
target=25, linearSearch=[25, 204]
target=26
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002a6f0)
    (data1_def=0x8002a6f0)
    (data2_def=0x8002a6f0)
    (data3_def=0x8002a6f0)
    (data4_def=0x8002a6f0)
    (data5_def=0x8002a6f0)
    (data8_def=0x8002a6f0)
    (data9_def=0x8002a6f0)
    (data10_def=0x8002a6f0)
    (data11_def=0x8002a6f0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002a6f0)
    (data1=0x8002a6f0)
    (data2=0x8002a6f0)
    (data3=0x8002a6f0)
    (data4=0x8002a6f0)
    (data5=0x8002a6f0)
    (data8=0x8002a6f0)
    (data9=0x8002a6f0)
    (data10=0x8002a6f0)
    (data11=0x8002a6f0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002a6f0)
    (data1_val=0x8002a6f0)
    (data2_val=0x8002a6f0)
    (data3_val=0x8002a6f0)
    (data4_val=0x8002a6f0)
    (data5_val=0x8002a6f0)
    (data8_val=0x8002a6f0)
    (data9_val=0x8002a6f0)
    (data10_val=0x8002a6f0)
    (data11_val=0x8002a6f0)
target=26, linearSearch=[26, 518]
target=27
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80027a40)
    (data1_def=0x80027a40)
    (data2_def=0x80027a40)
    (data3_def=0x80027a40)
    (data4_def=0x80027a40)
    (data5_def=0x80027a40)
    (data8_def=0x80027a40)
    (data9_def=0x80027a40)
    (data10_def=0x80027a40)
    (data11_def=0x80027a40)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80027a40)
    (data1=0x80027a40)
    (data2=0x80027a40)
    (data3=0x80027a40)
    (data4=0x80027a40)
    (data5=0x80027a40)
    (data8=0x80027a40)
    (data9=0x80027a40)
    (data10=0x80027a40)
    (data11=0x80027a40)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80027a40)
    (data1_val=0x80027a40)
    (data2_val=0x80027a40)
    (data3_val=0x80027a40)
    (data4_val=0x80027a40)
    (data5_val=0x80027a40)
    (data8_val=0x80027a40)
    (data9_val=0x80027a40)
    (data10_val=0x80027a40)
    (data11_val=0x80027a40)
target=27, linearSearch=[27, 375]
target=28
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80026a00)
    (data1_def=0x80026a00)
    (data2_def=0x80026a00)
    (data3_def=0x80026a00)
    (data4_def=0x80026a00)
    (data5_def=0x80026a00)
    (data8_def=0x80026a00)
    (data9_def=0x80026a00)
    (data10_def=0x80026a00)
    (data11_def=0x80026a00)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80026a00)
    (data1=0x80026a00)
    (data2=0x80026a00)
    (data3=0x80026a00)
    (data4=0x80026a00)
    (data5=0x80026a00)
    (data8=0x80026a00)
    (data9=0x80026a00)
    (data10=0x80026a00)
    (data11=0x80026a00)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80026a00)
    (data1_val=0x80026a00)
    (data2_val=0x80026a00)
    (data3_val=0x80026a00)
    (data4_val=0x80026a00)
    (data5_val=0x80026a00)
    (data8_val=0x80026a00)
    (data9_val=0x80026a00)
    (data10_val=0x80026a00)
    (data11_val=0x80026a00)
target=28, linearSearch=[28, 323]
target=29
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80021ff0)
    (data1_def=0x80021ff0)
    (data2_def=0x80021ff0)
    (data3_def=0x80021ff0)
    (data4_def=0x80021ff0)
    (data5_def=0x80021ff0)
    (data8_def=0x80021ff0)
    (data9_def=0x80021ff0)
    (data10_def=0x80021ff0)
    (data11_def=0x80021ff0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80021ff0)
    (data1=0x80021ff0)
    (data2=0x80021ff0)
    (data3=0x80021ff0)
    (data4=0x80021ff0)
    (data5=0x80021ff0)
    (data8=0x80021ff0)
    (data9=0x80021ff0)
    (data10=0x80021ff0)
    (data11=0x80021ff0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80021ff0)
    (data1_val=0x80021ff0)
    (data2_val=0x80021ff0)
    (data3_val=0x80021ff0)
    (data4_val=0x80021ff0)
    (data5_val=0x80021ff0)
    (data8_val=0x80021ff0)
    (data9_val=0x80021ff0)
    (data10_val=0x80021ff0)
    (data11_val=0x80021ff0)
target=29, linearSearch=[29, 86]
target=30
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002a290)
    (data1_def=0x8002a290)
    (data2_def=0x8002a290)
    (data3_def=0x8002a290)
    (data4_def=0x8002a290)
    (data5_def=0x8002a290)
    (data8_def=0x8002a290)
    (data9_def=0x8002a290)
    (data10_def=0x8002a290)
    (data11_def=0x8002a290)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002a290)
    (data1=0x8002a290)
    (data2=0x8002a290)
    (data3=0x8002a290)
    (data4=0x8002a290)
    (data5=0x8002a290)
    (data8=0x8002a290)
    (data9=0x8002a290)
    (data10=0x8002a290)
    (data11=0x8002a290)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002a290)
    (data1_val=0x8002a290)
    (data2_val=0x8002a290)
    (data3_val=0x8002a290)
    (data4_val=0x8002a290)
    (data5_val=0x8002a290)
    (data8_val=0x8002a290)
    (data9_val=0x8002a290)
    (data10_val=0x8002a290)
    (data11_val=0x8002a290)
target=30, linearSearch=[30, 504]
target=31
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002ace0)
    (data1_def=0x8002ace0)
    (data2_def=0x8002ace0)
    (data3_def=0x8002ace0)
    (data4_def=0x8002ace0)
    (data5_def=0x8002ace0)
    (data8_def=0x8002ace0)
    (data9_def=0x8002ace0)
    (data10_def=0x8002ace0)
    (data11_def=0x8002ace0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002ace0)
    (data1=0x8002ace0)
    (data2=0x8002ace0)
    (data3=0x8002ace0)
    (data4=0x8002ace0)
    (data5=0x8002ace0)
    (data8=0x8002ace0)
    (data9=0x8002ace0)
    (data10=0x8002ace0)
    (data11=0x8002ace0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002ace0)
    (data1_val=0x8002ace0)
    (data2_val=0x8002ace0)
    (data3_val=0x8002ace0)
    (data4_val=0x8002ace0)
    (data5_val=0x8002ace0)
    (data8_val=0x8002ace0)
    (data9_val=0x8002ace0)
    (data10_val=0x8002ace0)
    (data11_val=0x8002ace0)
target=31, linearSearch=[31, 537]
target=32
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002e930)
    (data1_def=0x8002e930)
    (data2_def=0x8002e930)
    (data3_def=0x8002e930)
    (data4_def=0x8002e930)
    (data5_def=0x8002e930)
    (data8_def=0x8002e930)
    (data9_def=0x8002e930)
    (data10_def=0x8002e930)
    (data11_def=0x8002e930)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002e930)
    (data1=0x8002e930)
    (data2=0x8002e930)
    (data3=0x8002e930)
    (data4=0x8002e930)
    (data5=0x8002e930)
    (data8=0x8002e930)
    (data9=0x8002e930)
    (data10=0x8002e930)
    (data11=0x8002e930)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002e930)
    (data1_val=0x8002e930)
    (data2_val=0x8002e930)
    (data3_val=0x8002e930)
    (data4_val=0x8002e930)
    (data5_val=0x8002e930)
    (data8_val=0x8002e930)
    (data9_val=0x8002e930)
    (data10_val=0x8002e930)
    (data11_val=0x8002e930)
target=32, linearSearch=[32, 730]
target=33
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80024250)
    (data1_def=0x80024250)
    (data2_def=0x80024250)
    (data3_def=0x80024250)
    (data4_def=0x80024250)
    (data5_def=0x80024250)
    (data8_def=0x80024250)
    (data9_def=0x80024250)
    (data10_def=0x80024250)
    (data11_def=0x80024250)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80024250)
    (data1=0x80024250)
    (data2=0x80024250)
    (data3=0x80024250)
    (data4=0x80024250)
    (data5=0x80024250)
    (data8=0x80024250)
    (data9=0x80024250)
    (data10=0x80024250)
    (data11=0x80024250)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80024250)
    (data1_val=0x80024250)
    (data2_val=0x80024250)
    (data3_val=0x80024250)
    (data4_val=0x80024250)
    (data5_val=0x80024250)
    (data8_val=0x80024250)
    (data9_val=0x80024250)
    (data10_val=0x80024250)
    (data11_val=0x80024250)
target=33, linearSearch=[33, 196]
target=34
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800228b0)
    (data1_def=0x800228b0)
    (data2_def=0x800228b0)
    (data3_def=0x800228b0)
    (data4_def=0x800228b0)
    (data5_def=0x800228b0)
    (data8_def=0x800228b0)
    (data9_def=0x800228b0)
    (data10_def=0x800228b0)
    (data11_def=0x800228b0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800228b0)
    (data1=0x800228b0)
    (data2=0x800228b0)
    (data3=0x800228b0)
    (data4=0x800228b0)
    (data5=0x800228b0)
    (data8=0x800228b0)
    (data9=0x800228b0)
    (data10=0x800228b0)
    (data11=0x800228b0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800228b0)
    (data1_val=0x800228b0)
    (data2_val=0x800228b0)
    (data3_val=0x800228b0)
    (data4_val=0x800228b0)
    (data5_val=0x800228b0)
    (data8_val=0x800228b0)
    (data9_val=0x800228b0)
    (data10_val=0x800228b0)
    (data11_val=0x800228b0)
target=34, linearSearch=[34, 114]
target=35
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80026410)
    (data1_def=0x80026410)
    (data2_def=0x80026410)
    (data3_def=0x80026410)
    (data4_def=0x80026410)
    (data5_def=0x80026410)
    (data8_def=0x80026410)
    (data9_def=0x80026410)
    (data10_def=0x80026410)
    (data11_def=0x80026410)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80026410)
    (data1=0x80026410)
    (data2=0x80026410)
    (data3=0x80026410)
    (data4=0x80026410)
    (data5=0x80026410)
    (data8=0x80026410)
    (data9=0x80026410)
    (data10=0x80026410)
    (data11=0x80026410)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80026410)
    (data1_val=0x80026410)
    (data2_val=0x80026410)
    (data3_val=0x80026410)
    (data4_val=0x80026410)
    (data5_val=0x80026410)
    (data8_val=0x80026410)
    (data9_val=0x80026410)
    (data10_val=0x80026410)
    (data11_val=0x80026410)
target=35, linearSearch=[35, 304]
target=36
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800268c0)
    (data1_def=0x800268c0)
    (data2_def=0x800268c0)
    (data3_def=0x800268c0)
    (data4_def=0x800268c0)
    (data5_def=0x800268c0)
    (data8_def=0x800268c0)
    (data9_def=0x800268c0)
    (data10_def=0x800268c0)
    (data11_def=0x800268c0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800268c0)
    (data1=0x800268c0)
    (data2=0x800268c0)
    (data3=0x800268c0)
    (data4=0x800268c0)
    (data5=0x800268c0)
    (data8=0x800268c0)
    (data9=0x800268c0)
    (data10=0x800268c0)
    (data11=0x800268c0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800268c0)
    (data1_val=0x800268c0)
    (data2_val=0x800268c0)
    (data3_val=0x800268c0)
    (data4_val=0x800268c0)
    (data5_val=0x800268c0)
    (data8_val=0x800268c0)
    (data9_val=0x800268c0)
    (data10_val=0x800268c0)
    (data11_val=0x800268c0)
target=36, linearSearch=[36, 319]
target=37
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x8002bcd0)
    (data1_def=0x8002bcd0)
    (data2_def=0x8002bcd0)
    (data3_def=0x8002bcd0)
    (data4_def=0x8002bcd0)
    (data5_def=0x8002bcd0)
    (data8_def=0x8002bcd0)
    (data9_def=0x8002bcd0)
    (data10_def=0x8002bcd0)
    (data11_def=0x8002bcd0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x8002bcd0)
    (data1=0x8002bcd0)
    (data2=0x8002bcd0)
    (data3=0x8002bcd0)
    (data4=0x8002bcd0)
    (data5=0x8002bcd0)
    (data8=0x8002bcd0)
    (data9=0x8002bcd0)
    (data10=0x8002bcd0)
    (data11=0x8002bcd0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x8002bcd0)
    (data1_val=0x8002bcd0)
    (data2_val=0x8002bcd0)
    (data3_val=0x8002bcd0)
    (data4_val=0x8002bcd0)
    (data5_val=0x8002bcd0)
    (data8_val=0x8002bcd0)
    (data9_val=0x8002bcd0)
    (data10_val=0x8002bcd0)
    (data11_val=0x8002bcd0)
target=37, linearSearch=[37, 588]
target=38
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x800219b0)
    (data1_def=0x800219b0)
    (data2_def=0x800219b0)
    (data3_def=0x800219b0)
    (data4_def=0x800219b0)
    (data5_def=0x800219b0)
    (data8_def=0x800219b0)
    (data9_def=0x800219b0)
    (data10_def=0x800219b0)
    (data11_def=0x800219b0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x800219b0)
    (data1=0x800219b0)
    (data2=0x800219b0)
    (data3=0x800219b0)
    (data4=0x800219b0)
    (data5=0x800219b0)
    (data8=0x800219b0)
    (data9=0x800219b0)
    (data10=0x800219b0)
    (data11=0x800219b0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x800219b0)
    (data1_val=0x800219b0)
    (data2_val=0x800219b0)
    (data3_val=0x800219b0)
    (data4_val=0x800219b0)
    (data5_val=0x800219b0)
    (data8_val=0x800219b0)
    (data9_val=0x800219b0)
    (data10_val=0x800219b0)
    (data11_val=0x800219b0)
target=38, linearSearch=[38, 66]
target=39
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x80025fb0)
    (data1_def=0x80025fb0)
    (data2_def=0x80025fb0)
    (data3_def=0x80025fb0)
    (data4_def=0x80025fb0)
    (data5_def=0x80025fb0)
    (data8_def=0x80025fb0)
    (data9_def=0x80025fb0)
    (data10_def=0x80025fb0)
    (data11_def=0x80025fb0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x80025fb0)
    (data1=0x80025fb0)
    (data2=0x80025fb0)
    (data3=0x80025fb0)
    (data4=0x80025fb0)
    (data5=0x80025fb0)
    (data8=0x80025fb0)
    (data9=0x80025fb0)
    (data10=0x80025fb0)
    (data11=0x80025fb0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x80025fb0)
    (data1_val=0x80025fb0)
    (data2_val=0x80025fb0)
    (data3_val=0x80025fb0)
    (data4_val=0x80025fb0)
    (data5_val=0x80025fb0)
    (data8_val=0x80025fb0)
    (data9_val=0x80025fb0)
    (data10_val=0x80025fb0)
    (data11_val=0x80025fb0)
target=39, linearSearch=[39, 290]

[Variation test for binary-search]
target=-1
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x0)
    (data1_def=0x0)
    (data2_def=0x0)
    (data3_def=0x0)
    (data4_def=0x0)
    (data5_def=0x0)
    (data8_def=0x0)
    (data9_def=0x0)
   (data10_def=0x0)
    (data11_def=0x0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x0)
    (data1=0x0)
    (data2=0x0)
    (data3=0x0)
    (data4=0x0)
    (data5=0x0)
    (data8=0x0)
    (data9=0x0)
    (data10=0x0)
    (data11=0x0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x0)
    (data1_val=0x0)
    (data2_val=0x0)
    (data3_val=0x0)
    (data4_val=0x0)
    (data5_val=0x0)
    (data8_val=0x0)
    (data9_val=0x0)
    (data10_val=0x0)
    (data11_val=0x0)
target=-1, binarySearch=nullptr
target=0
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020510)
    (data1_def=0x80020510)
    (data2_def=0x80020510)
    (data3_def=0x80020510)
    (data4_def=0x80020510)
    (data5_def=0x80020510)
    (data8_def=0x80020510)
    (data9_def=0x80020510)
   (data10_def=0x80020510)
    (data11_def=0x80020510)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020510)
    (data1=0x80020510)
    (data2=0x80020510)
    (data3=0x80020510)
    (data4=0x80020510)
    (data5=0x80020510)
    (data8=0x80020510)
    (data9=0x80020510)
    (data10=0x80020510)
    (data11=0x80020510)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020510)
    (data1_val=0x80020510)
    (data2_val=0x80020510)
    (data3_val=0x80020510)
    (data4_val=0x80020510)
    (data5_val=0x80020510)
    (data8_val=0x80020510)
    (data9_val=0x80020510)
    (data10_val=0x80020510)
    (data11_val=0x80020510)
target=0, binarySearch=[0, 399]
target=1
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020600)
    (data1_def=0x80020600)
    (data2_def=0x80020600)
    (data3_def=0x80020600)
    (data4_def=0x80020600)
    (data5_def=0x80020600)
    (data8_def=0x80020600)
    (data9_def=0x80020600)
   (data10_def=0x80020600)
    (data11_def=0x80020600)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020600)
    (data1=0x80020600)
    (data2=0x80020600)
    (data3=0x80020600)
    (data4=0x80020600)
    (data5=0x80020600)
    (data8=0x80020600)
    (data9=0x80020600)
    (data10=0x80020600)
    (data11=0x80020600)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020600)
    (data1_val=0x80020600)
    (data2_val=0x80020600)
    (data3_val=0x80020600)
    (data4_val=0x80020600)
    (data5_val=0x80020600)
    (data8_val=0x80020600)
    (data9_val=0x80020600)
    (data10_val=0x80020600)
    (data11_val=0x80020600)
target=1, binarySearch=[1, 106]
target=2
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800206f0)
    (data1_def=0x800206f0)
    (data2_def=0x800206f0)
    (data3_def=0x800206f0)
    (data4_def=0x800206f0)
    (data5_def=0x800206f0)
    (data8_def=0x800206f0)
    (data9_def=0x800206f0)
   (data10_def=0x800206f0)
    (data11_def=0x800206f0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800206f0)
    (data1=0x800206f0)
    (data2=0x800206f0)
    (data3=0x800206f0)
    (data4=0x800206f0)
    (data5=0x800206f0)
    (data8=0x800206f0)
    (data9=0x800206f0)
    (data10=0x800206f0)
    (data11=0x800206f0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800206f0)
    (data1_val=0x800206f0)
    (data2_val=0x800206f0)
    (data3_val=0x800206f0)
    (data4_val=0x800206f0)
    (data5_val=0x800206f0)
    (data8_val=0x800206f0)
    (data9_val=0x800206f0)
    (data10_val=0x800206f0)
    (data11_val=0x800206f0)
target=2, binarySearch=[2, 736]
target=3
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800207e0)
    (data1_def=0x800207e0)
    (data2_def=0x800207e0)
    (data3_def=0x800207e0)
    (data4_def=0x800207e0)
    (data5_def=0x800207e0)
    (data8_def=0x800207e0)
    (data9_def=0x800207e0)
   (data10_def=0x800207e0)
    (data11_def=0x800207e0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800207e0)
    (data1=0x800207e0)
    (data2=0x800207e0)
    (data3=0x800207e0)
    (data4=0x800207e0)
    (data5=0x800207e0)
    (data8=0x800207e0)
    (data9=0x800207e0)
    (data10=0x800207e0)
    (data11=0x800207e0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800207e0)
    (data1_val=0x800207e0)
    (data2_val=0x800207e0)
    (data3_val=0x800207e0)
    (data4_val=0x800207e0)
    (data5_val=0x800207e0)
    (data8_val=0x800207e0)
    (data9_val=0x800207e0)
    (data10_val=0x800207e0)
    (data11_val=0x800207e0)
target=3, binarySearch=[3, 240]
target=4
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800208d0)
    (data1_def=0x800208d0)
    (data2_def=0x800208d0)
    (data3_def=0x800208d0)
    (data4_def=0x800208d0)
    (data5_def=0x800208d0)
    (data8_def=0x800208d0)
    (data9_def=0x800208d0)
   (data10_def=0x800208d0)
    (data11_def=0x800208d0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800208d0)
    (data1=0x800208d0)
    (data2=0x800208d0)
    (data3=0x800208d0)
    (data4=0x800208d0)
    (data5=0x800208d0)
    (data8=0x800208d0)
    (data9=0x800208d0)
    (data10=0x800208d0)
    (data11=0x800208d0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800208d0)
    (data1_val=0x800208d0)
    (data2_val=0x800208d0)
    (data3_val=0x800208d0)
    (data4_val=0x800208d0)
    (data5_val=0x800208d0)
    (data8_val=0x800208d0)
    (data9_val=0x800208d0)
    (data10_val=0x800208d0)
    (data11_val=0x800208d0)
target=4, binarySearch=[4, 420]
target=5
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800209c0)
    (data1_def=0x800209c0)
    (data2_def=0x800209c0)
    (data3_def=0x800209c0)
    (data4_def=0x800209c0)
    (data5_def=0x800209c0)
    (data8_def=0x800209c0)
    (data9_def=0x800209c0)
   (data10_def=0x800209c0)
    (data11_def=0x800209c0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800209c0)
    (data1=0x800209c0)
    (data2=0x800209c0)
    (data3=0x800209c0)
    (data4=0x800209c0)
    (data5=0x800209c0)
    (data8=0x800209c0)
    (data9=0x800209c0)
    (data10=0x800209c0)
    (data11=0x800209c0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800209c0)
    (data1_val=0x800209c0)
    (data2_val=0x800209c0)
    (data3_val=0x800209c0)
    (data4_val=0x800209c0)
    (data5_val=0x800209c0)
    (data8_val=0x800209c0)
    (data9_val=0x800209c0)
    (data10_val=0x800209c0)
    (data11_val=0x800209c0)
target=5, binarySearch=[5, 320]
target=6
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020ab0)
    (data1_def=0x80020ab0)
    (data2_def=0x80020ab0)
    (data3_def=0x80020ab0)
    (data4_def=0x80020ab0)
    (data5_def=0x80020ab0)
    (data8_def=0x80020ab0)
    (data9_def=0x80020ab0)
   (data10_def=0x80020ab0)
    (data11_def=0x80020ab0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020ab0)
    (data1=0x80020ab0)
    (data2=0x80020ab0)
    (data3=0x80020ab0)
    (data4=0x80020ab0)
    (data5=0x80020ab0)
    (data8=0x80020ab0)
    (data9=0x80020ab0)
    (data10=0x80020ab0)
    (data11=0x80020ab0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020ab0)
    (data1_val=0x80020ab0)
    (data2_val=0x80020ab0)
    (data3_val=0x80020ab0)
    (data4_val=0x80020ab0)
    (data5_val=0x80020ab0)
    (data8_val=0x80020ab0)
    (data9_val=0x80020ab0)
    (data10_val=0x80020ab0)
    (data11_val=0x80020ab0)
target=6, binarySearch=[6, 817]
target=7
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020ba0)
    (data1_def=0x80020ba0)
    (data2_def=0x80020ba0)
    (data3_def=0x80020ba0)
    (data4_def=0x80020ba0)
    (data5_def=0x80020ba0)
    (data8_def=0x80020ba0)
    (data9_def=0x80020ba0)
   (data10_def=0x80020ba0)
    (data11_def=0x80020ba0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020ba0)
    (data1=0x80020ba0)
    (data2=0x80020ba0)
    (data3=0x80020ba0)
    (data4=0x80020ba0)
    (data5=0x80020ba0)
    (data8=0x80020ba0)
    (data9=0x80020ba0)
    (data10=0x80020ba0)
    (data11=0x80020ba0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020ba0)
    (data1_val=0x80020ba0)
    (data2_val=0x80020ba0)
    (data3_val=0x80020ba0)
    (data4_val=0x80020ba0)
    (data5_val=0x80020ba0)
    (data8_val=0x80020ba0)
    (data9_val=0x80020ba0)
    (data10_val=0x80020ba0)
    (data11_val=0x80020ba0)
target=7, binarySearch=[7, 637]
target=8
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020c90)
    (data1_def=0x80020c90)
    (data2_def=0x80020c90)
    (data3_def=0x80020c90)
    (data4_def=0x80020c90)
    (data5_def=0x80020c90)
    (data8_def=0x80020c90)
    (data9_def=0x80020c90)
   (data10_def=0x80020c90)
    (data11_def=0x80020c90)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020c90)
    (data1=0x80020c90)
    (data2=0x80020c90)
    (data3=0x80020c90)
    (data4=0x80020c90)
    (data5=0x80020c90)
    (data8=0x80020c90)
    (data9=0x80020c90)
    (data10=0x80020c90)
    (data11=0x80020c90)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020c90)
    (data1_val=0x80020c90)
    (data2_val=0x80020c90)
    (data3_val=0x80020c90)
    (data4_val=0x80020c90)
    (data5_val=0x80020c90)
    (data8_val=0x80020c90)
    (data9_val=0x80020c90)
    (data10_val=0x80020c90)
    (data11_val=0x80020c90)
target=8, binarySearch=[8, 461]
target=9
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020d80)
    (data1_def=0x80020d80)
    (data2_def=0x80020d80)
    (data3_def=0x80020d80)
    (data4_def=0x80020d80)
    (data5_def=0x80020d80)
    (data8_def=0x80020d80)
    (data9_def=0x80020d80)
   (data10_def=0x80020d80)
    (data11_def=0x80020d80)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020d80)
    (data1=0x80020d80)
    (data2=0x80020d80)
    (data3=0x80020d80)
    (data4=0x80020d80)
    (data5=0x80020d80)
    (data8=0x80020d80)
    (data9=0x80020d80)
    (data10=0x80020d80)
    (data11=0x80020d80)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020d80)
    (data1_val=0x80020d80)
    (data2_val=0x80020d80)
    (data3_val=0x80020d80)
    (data4_val=0x80020d80)
    (data5_val=0x80020d80)
    (data8_val=0x80020d80)
    (data9_val=0x80020d80)
    (data10_val=0x80020d80)
    (data11_val=0x80020d80)
target=9, binarySearch=[9, 31]
target=10
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020e70)
    (data1_def=0x80020e70)
    (data2_def=0x80020e70)
    (data3_def=0x80020e70)
    (data4_def=0x80020e70)
    (data5_def=0x80020e70)
    (data8_def=0x80020e70)
    (data9_def=0x80020e70)
   (data10_def=0x80020e70)
    (data11_def=0x80020e70)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020e70)
    (data1=0x80020e70)
    (data2=0x80020e70)
    (data3=0x80020e70)
    (data4=0x80020e70)
    (data5=0x80020e70)
    (data8=0x80020e70)
    (data9=0x80020e70)
    (data10=0x80020e70)
    (data11=0x80020e70)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020e70)
    (data1_val=0x80020e70)
    (data2_val=0x80020e70)
    (data3_val=0x80020e70)
    (data4_val=0x80020e70)
    (data5_val=0x80020e70)
    (data8_val=0x80020e70)
    (data9_val=0x80020e70)
    (data10_val=0x80020e70)
    (data11_val=0x80020e70)
target=10, binarySearch=[10, 255]
target=11
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80020f60)
    (data1_def=0x80020f60)
    (data2_def=0x80020f60)
    (data3_def=0x80020f60)
    (data4_def=0x80020f60)
    (data5_def=0x80020f60)
    (data8_def=0x80020f60)
    (data9_def=0x80020f60)
   (data10_def=0x80020f60)
    (data11_def=0x80020f60)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80020f60)
    (data1=0x80020f60)
    (data2=0x80020f60)
    (data3=0x80020f60)
    (data4=0x80020f60)
    (data5=0x80020f60)
    (data8=0x80020f60)
    (data9=0x80020f60)
    (data10=0x80020f60)
    (data11=0x80020f60)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80020f60)
    (data1_val=0x80020f60)
    (data2_val=0x80020f60)
    (data3_val=0x80020f60)
    (data4_val=0x80020f60)
    (data5_val=0x80020f60)
    (data8_val=0x80020f60)
    (data9_val=0x80020f60)
    (data10_val=0x80020f60)
    (data11_val=0x80020f60)
target=11, binarySearch=[11, 168]
target=12
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021050)
    (data1_def=0x80021050)
    (data2_def=0x80021050)
    (data3_def=0x80021050)
    (data4_def=0x80021050)
    (data5_def=0x80021050)
    (data8_def=0x80021050)
    (data9_def=0x80021050)
   (data10_def=0x80021050)
    (data11_def=0x80021050)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021050)
    (data1=0x80021050)
    (data2=0x80021050)
    (data3=0x80021050)
    (data4=0x80021050)
    (data5=0x80021050)
    (data8=0x80021050)
    (data9=0x80021050)
    (data10=0x80021050)
    (data11=0x80021050)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021050)
    (data1_val=0x80021050)
    (data2_val=0x80021050)
    (data3_val=0x80021050)
    (data4_val=0x80021050)
    (data5_val=0x80021050)
    (data8_val=0x80021050)
    (data9_val=0x80021050)
    (data10_val=0x80021050)
    (data11_val=0x80021050)
target=12, binarySearch=[12, 695]
target=13
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021140)
    (data1_def=0x80021140)
    (data2_def=0x80021140)
    (data3_def=0x80021140)
    (data4_def=0x80021140)
    (data5_def=0x80021140)
    (data8_def=0x80021140)
    (data9_def=0x80021140)
   (data10_def=0x80021140)
    (data11_def=0x80021140)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021140)
    (data1=0x80021140)
    (data2=0x80021140)
    (data3=0x80021140)
    (data4=0x80021140)
    (data5=0x80021140)
    (data8=0x80021140)
    (data9=0x80021140)
    (data10=0x80021140)
    (data11=0x80021140)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021140)
    (data1_val=0x80021140)
    (data2_val=0x80021140)
    (data3_val=0x80021140)
    (data4_val=0x80021140)
    (data5_val=0x80021140)
    (data8_val=0x80021140)
    (data9_val=0x80021140)
    (data10_val=0x80021140)
    (data11_val=0x80021140)
target=13, binarySearch=[13, 608]
target=14
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021230)
    (data1_def=0x80021230)
    (data2_def=0x80021230)
    (data3_def=0x80021230)
    (data4_def=0x80021230)
    (data5_def=0x80021230)
    (data8_def=0x80021230)
    (data9_def=0x80021230)
   (data10_def=0x80021230)
    (data11_def=0x80021230)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021230)
    (data1=0x80021230)
    (data2=0x80021230)
    (data3=0x80021230)
    (data4=0x80021230)
    (data5=0x80021230)
    (data8=0x80021230)
    (data9=0x80021230)
    (data10=0x80021230)
    (data11=0x80021230)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021230)
    (data1_val=0x80021230)
    (data2_val=0x80021230)
    (data3_val=0x80021230)
    (data4_val=0x80021230)
    (data5_val=0x80021230)
    (data8_val=0x80021230)
    (data9_val=0x80021230)
    (data10_val=0x80021230)
    (data11_val=0x80021230)
target=14, binarySearch=[14, 462]
target=15
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021320)
    (data1_def=0x80021320)
    (data2_def=0x80021320)
    (data3_def=0x80021320)
    (data4_def=0x80021320)
    (data5_def=0x80021320)
    (data8_def=0x80021320)
    (data9_def=0x80021320)
   (data10_def=0x80021320)
    (data11_def=0x80021320)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021320)
    (data1=0x80021320)
    (data2=0x80021320)
    (data3=0x80021320)
    (data4=0x80021320)
    (data5=0x80021320)
    (data8=0x80021320)
    (data9=0x80021320)
    (data10=0x80021320)
    (data11=0x80021320)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021320)
    (data1_val=0x80021320)
    (data2_val=0x80021320)
    (data3_val=0x80021320)
    (data4_val=0x80021320)
    (data5_val=0x80021320)
    (data8_val=0x80021320)
    (data9_val=0x80021320)
    (data10_val=0x80021320)
    (data11_val=0x80021320)
target=15, binarySearch=[15, 665]
target=16
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021410)
    (data1_def=0x80021410)
    (data2_def=0x80021410)
    (data3_def=0x80021410)
    (data4_def=0x80021410)
    (data5_def=0x80021410)
    (data8_def=0x80021410)
    (data9_def=0x80021410)
   (data10_def=0x80021410)
    (data11_def=0x80021410)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021410)
    (data1=0x80021410)
    (data2=0x80021410)
    (data3=0x80021410)
    (data4=0x80021410)
    (data5=0x80021410)
    (data8=0x80021410)
    (data9=0x80021410)
    (data10=0x80021410)
    (data11=0x80021410)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021410)
    (data1_val=0x80021410)
    (data2_val=0x80021410)
    (data3_val=0x80021410)
    (data4_val=0x80021410)
    (data5_val=0x80021410)
    (data8_val=0x80021410)
    (data9_val=0x80021410)
    (data10_val=0x80021410)
    (data11_val=0x80021410)
target=16, binarySearch=[16, 970]
target=17
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021500)
    (data1_def=0x80021500)
    (data2_def=0x80021500)
    (data3_def=0x80021500)
    (data4_def=0x80021500)
    (data5_def=0x80021500)
    (data8_def=0x80021500)
    (data9_def=0x80021500)
   (data10_def=0x80021500)
    (data11_def=0x80021500)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021500)
    (data1=0x80021500)
    (data2=0x80021500)
    (data3=0x80021500)
    (data4=0x80021500)
    (data5=0x80021500)
    (data8=0x80021500)
    (data9=0x80021500)
    (data10=0x80021500)
    (data11=0x80021500)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021500)
    (data1_val=0x80021500)
    (data2_val=0x80021500)
    (data3_val=0x80021500)
    (data4_val=0x80021500)
    (data5_val=0x80021500)
    (data8_val=0x80021500)
    (data9_val=0x80021500)
    (data10_val=0x80021500)
    (data11_val=0x80021500)
target=17, binarySearch=[17, 558]
target=18
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800215f0)
    (data1_def=0x800215f0)
    (data2_def=0x800215f0)
    (data3_def=0x800215f0)
    (data4_def=0x800215f0)
    (data5_def=0x800215f0)
    (data8_def=0x800215f0)
    (data9_def=0x800215f0)
   (data10_def=0x800215f0)
    (data11_def=0x800215f0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800215f0)
    (data1=0x800215f0)
    (data2=0x800215f0)
    (data3=0x800215f0)
    (data4=0x800215f0)
    (data5=0x800215f0)
    (data8=0x800215f0)
    (data9=0x800215f0)
    (data10=0x800215f0)
    (data11=0x800215f0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800215f0)
    (data1_val=0x800215f0)
    (data2_val=0x800215f0)
    (data3_val=0x800215f0)
    (data4_val=0x800215f0)
    (data5_val=0x800215f0)
    (data8_val=0x800215f0)
    (data9_val=0x800215f0)
    (data10_val=0x800215f0)
    (data11_val=0x800215f0)
target=18, binarySearch=[18, 499]
target=19
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800216e0)
    (data1_def=0x800216e0)
    (data2_def=0x800216e0)
    (data3_def=0x800216e0)
    (data4_def=0x800216e0)
    (data5_def=0x800216e0)
    (data8_def=0x800216e0)
    (data9_def=0x800216e0)
   (data10_def=0x800216e0)
    (data11_def=0x800216e0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800216e0)
    (data1=0x800216e0)
    (data2=0x800216e0)
    (data3=0x800216e0)
    (data4=0x800216e0)
    (data5=0x800216e0)
    (data8=0x800216e0)
    (data9=0x800216e0)
    (data10=0x800216e0)
    (data11=0x800216e0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800216e0)
    (data1_val=0x800216e0)
    (data2_val=0x800216e0)
    (data3_val=0x800216e0)
    (data4_val=0x800216e0)
    (data5_val=0x800216e0)
    (data8_val=0x800216e0)
    (data9_val=0x800216e0)
    (data10_val=0x800216e0)
    (data11_val=0x800216e0)
target=19, binarySearch=[19, 757]
target=20
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800217d0)
    (data1_def=0x800217d0)
    (data2_def=0x800217d0)
    (data3_def=0x800217d0)
    (data4_def=0x800217d0)
    (data5_def=0x800217d0)
    (data8_def=0x800217d0)
    (data9_def=0x800217d0)
   (data10_def=0x800217d0)
    (data11_def=0x800217d0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800217d0)
    (data1=0x800217d0)
    (data2=0x800217d0)
    (data3=0x800217d0)
    (data4=0x800217d0)
    (data5=0x800217d0)
    (data8=0x800217d0)
    (data9=0x800217d0)
    (data10=0x800217d0)
    (data11=0x800217d0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800217d0)
    (data1_val=0x800217d0)
    (data2_val=0x800217d0)
    (data3_val=0x800217d0)
    (data4_val=0x800217d0)
    (data5_val=0x800217d0)
    (data8_val=0x800217d0)
    (data9_val=0x800217d0)
    (data10_val=0x800217d0)
    (data11_val=0x800217d0)
target=20, binarySearch=[20, 798]
target=21
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800218c0)
    (data1_def=0x800218c0)
    (data2_def=0x800218c0)
    (data3_def=0x800218c0)
    (data4_def=0x800218c0)
    (data5_def=0x800218c0)
    (data8_def=0x800218c0)
    (data9_def=0x800218c0)
   (data10_def=0x800218c0)
    (data11_def=0x800218c0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800218c0)
    (data1=0x800218c0)
    (data2=0x800218c0)
    (data3=0x800218c0)
    (data4=0x800218c0)
    (data5=0x800218c0)
    (data8=0x800218c0)
    (data9=0x800218c0)
    (data10=0x800218c0)
    (data11=0x800218c0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800218c0)
    (data1_val=0x800218c0)
    (data2_val=0x800218c0)
    (data3_val=0x800218c0)
    (data4_val=0x800218c0)
    (data5_val=0x800218c0)
    (data8_val=0x800218c0)
    (data9_val=0x800218c0)
    (data10_val=0x800218c0)
    (data11_val=0x800218c0)
target=21, binarySearch=[21, 469]
target=22
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800219b0)
    (data1_def=0x800219b0)
    (data2_def=0x800219b0)
    (data3_def=0x800219b0)
    (data4_def=0x800219b0)
    (data5_def=0x800219b0)
    (data8_def=0x800219b0)
    (data9_def=0x800219b0)
   (data10_def=0x800219b0)
    (data11_def=0x800219b0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800219b0)
    (data1=0x800219b0)
    (data2=0x800219b0)
    (data3=0x800219b0)
    (data4=0x800219b0)
    (data5=0x800219b0)
    (data8=0x800219b0)
    (data9=0x800219b0)
    (data10=0x800219b0)
    (data11=0x800219b0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800219b0)
    (data1_val=0x800219b0)
    (data2_val=0x800219b0)
    (data3_val=0x800219b0)
    (data4_val=0x800219b0)
    (data5_val=0x800219b0)
    (data8_val=0x800219b0)
    (data9_val=0x800219b0)
    (data10_val=0x800219b0)
    (data11_val=0x800219b0)
target=22, binarySearch=[22, 341]
target=23
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021aa0)
    (data1_def=0x80021aa0)
    (data2_def=0x80021aa0)
    (data3_def=0x80021aa0)
    (data4_def=0x80021aa0)
    (data5_def=0x80021aa0)
    (data8_def=0x80021aa0)
    (data9_def=0x80021aa0)
   (data10_def=0x80021aa0)
    (data11_def=0x80021aa0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021aa0)
    (data1=0x80021aa0)
    (data2=0x80021aa0)
    (data3=0x80021aa0)
    (data4=0x80021aa0)
    (data5=0x80021aa0)
    (data8=0x80021aa0)
    (data9=0x80021aa0)
    (data10=0x80021aa0)
    (data11=0x80021aa0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021aa0)
    (data1_val=0x80021aa0)
    (data2_val=0x80021aa0)
    (data3_val=0x80021aa0)
    (data4_val=0x80021aa0)
    (data5_val=0x80021aa0)
    (data8_val=0x80021aa0)
    (data9_val=0x80021aa0)
    (data10_val=0x80021aa0)
    (data11_val=0x80021aa0)
target=23, binarySearch=[23, 617]
target=24
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021b90)
    (data1_def=0x80021b90)
    (data2_def=0x80021b90)
    (data3_def=0x80021b90)
    (data4_def=0x80021b90)
    (data5_def=0x80021b90)
    (data8_def=0x80021b90)
    (data9_def=0x80021b90)
   (data10_def=0x80021b90)
    (data11_def=0x80021b90)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021b90)
    (data1=0x80021b90)
    (data2=0x80021b90)
    (data3=0x80021b90)
    (data4=0x80021b90)
    (data5=0x80021b90)
    (data8=0x80021b90)
    (data9=0x80021b90)
    (data10=0x80021b90)
    (data11=0x80021b90)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021b90)
    (data1_val=0x80021b90)
    (data2_val=0x80021b90)
    (data3_val=0x80021b90)
    (data4_val=0x80021b90)
    (data5_val=0x80021b90)
    (data8_val=0x80021b90)
    (data9_val=0x80021b90)
    (data10_val=0x80021b90)
    (data11_val=0x80021b90)
target=24, binarySearch=[24, 103]
target=25
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021c80)
    (data1_def=0x80021c80)
    (data2_def=0x80021c80)
    (data3_def=0x80021c80)
    (data4_def=0x80021c80)
    (data5_def=0x80021c80)
    (data8_def=0x80021c80)
    (data9_def=0x80021c80)
   (data10_def=0x80021c80)
    (data11_def=0x80021c80)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021c80)
    (data1=0x80021c80)
    (data2=0x80021c80)
    (data3=0x80021c80)
    (data4=0x80021c80)
    (data5=0x80021c80)
    (data8=0x80021c80)
    (data9=0x80021c80)
    (data10=0x80021c80)
    (data11=0x80021c80)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021c80)
    (data1_val=0x80021c80)
    (data2_val=0x80021c80)
    (data3_val=0x80021c80)
    (data4_val=0x80021c80)
    (data5_val=0x80021c80)
    (data8_val=0x80021c80)
    (data9_val=0x80021c80)
    (data10_val=0x80021c80)
    (data11_val=0x80021c80)
target=25, binarySearch=[25, 758]
target=26
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021d70)
    (data1_def=0x80021d70)
    (data2_def=0x80021d70)
    (data3_def=0x80021d70)
    (data4_def=0x80021d70)
    (data5_def=0x80021d70)
    (data8_def=0x80021d70)
    (data9_def=0x80021d70)
   (data10_def=0x80021d70)
    (data11_def=0x80021d70)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021d70)
    (data1=0x80021d70)
    (data2=0x80021d70)
    (data3=0x80021d70)
    (data4=0x80021d70)
    (data5=0x80021d70)
    (data8=0x80021d70)
    (data9=0x80021d70)
    (data10=0x80021d70)
    (data11=0x80021d70)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021d70)
    (data1_val=0x80021d70)
    (data2_val=0x80021d70)
    (data3_val=0x80021d70)
    (data4_val=0x80021d70)
    (data5_val=0x80021d70)
    (data8_val=0x80021d70)
    (data9_val=0x80021d70)
    (data10_val=0x80021d70)
    (data11_val=0x80021d70)
target=26, binarySearch=[26, 939]
target=27
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021e60)
    (data1_def=0x80021e60)
    (data2_def=0x80021e60)
    (data3_def=0x80021e60)
    (data4_def=0x80021e60)
    (data5_def=0x80021e60)
    (data8_def=0x80021e60)
    (data9_def=0x80021e60)
   (data10_def=0x80021e60)
    (data11_def=0x80021e60)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021e60)
    (data1=0x80021e60)
    (data2=0x80021e60)
    (data3=0x80021e60)
    (data4=0x80021e60)
    (data5=0x80021e60)
    (data8=0x80021e60)
    (data9=0x80021e60)
    (data10=0x80021e60)
    (data11=0x80021e60)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021e60)
    (data1_val=0x80021e60)
    (data2_val=0x80021e60)
    (data3_val=0x80021e60)
    (data4_val=0x80021e60)
    (data5_val=0x80021e60)
    (data8_val=0x80021e60)
    (data9_val=0x80021e60)
    (data10_val=0x80021e60)
    (data11_val=0x80021e60)
target=27, binarySearch=[27, 650]
target=28
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80021f50)
    (data1_def=0x80021f50)
    (data2_def=0x80021f50)
    (data3_def=0x80021f50)
    (data4_def=0x80021f50)
    (data5_def=0x80021f50)
    (data8_def=0x80021f50)
    (data9_def=0x80021f50)
   (data10_def=0x80021f50)
    (data11_def=0x80021f50)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80021f50)
    (data1=0x80021f50)
    (data2=0x80021f50)
    (data3=0x80021f50)
    (data4=0x80021f50)
    (data5=0x80021f50)
    (data8=0x80021f50)
    (data9=0x80021f50)
    (data10=0x80021f50)
    (data11=0x80021f50)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80021f50)
    (data1_val=0x80021f50)
    (data2_val=0x80021f50)
    (data3_val=0x80021f50)
    (data4_val=0x80021f50)
    (data5_val=0x80021f50)
    (data8_val=0x80021f50)
    (data9_val=0x80021f50)
    (data10_val=0x80021f50)
    (data11_val=0x80021f50)
target=28, binarySearch=[28, 323]
target=29
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80022040)
    (data1_def=0x80022040)
    (data2_def=0x80022040)
    (data3_def=0x80022040)
    (data4_def=0x80022040)
    (data5_def=0x80022040)
    (data8_def=0x80022040)
    (data9_def=0x80022040)
   (data10_def=0x80022040)
    (data11_def=0x80022040)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80022040)
    (data1=0x80022040)
    (data2=0x80022040)
    (data3=0x80022040)
    (data4=0x80022040)
    (data5=0x80022040)
    (data8=0x80022040)
    (data9=0x80022040)
    (data10=0x80022040)
    (data11=0x80022040)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80022040)
    (data1_val=0x80022040)
    (data2_val=0x80022040)
    (data3_val=0x80022040)
    (data4_val=0x80022040)
    (data5_val=0x80022040)
    (data8_val=0x80022040)
    (data9_val=0x80022040)
    (data10_val=0x80022040)
    (data11_val=0x80022040)
target=29, binarySearch=[29, 86]
target=30
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80022130)
    (data1_def=0x80022130)
    (data2_def=0x80022130)
    (data3_def=0x80022130)
    (data4_def=0x80022130)
    (data5_def=0x80022130)
    (data8_def=0x80022130)
    (data9_def=0x80022130)
   (data10_def=0x80022130)
    (data11_def=0x80022130)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80022130)
    (data1=0x80022130)
    (data2=0x80022130)
    (data3=0x80022130)
    (data4=0x80022130)
    (data5=0x80022130)
    (data8=0x80022130)
    (data9=0x80022130)
    (data10=0x80022130)
    (data11=0x80022130)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80022130)
    (data1_val=0x80022130)
    (data2_val=0x80022130)
    (data3_val=0x80022130)
    (data4_val=0x80022130)
    (data5_val=0x80022130)
    (data8_val=0x80022130)
    (data9_val=0x80022130)
    (data10_val=0x80022130)
    (data11_val=0x80022130)
target=30, binarySearch=[30, 723]
target=31
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80022220)
    (data1_def=0x80022220)
    (data2_def=0x80022220)
    (data3_def=0x80022220)
    (data4_def=0x80022220)
    (data5_def=0x80022220)
    (data8_def=0x80022220)
    (data9_def=0x80022220)
   (data10_def=0x80022220)
    (data11_def=0x80022220)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80022220)
    (data1=0x80022220)
    (data2=0x80022220)
    (data3=0x80022220)
    (data4=0x80022220)
    (data5=0x80022220)
    (data8=0x80022220)
    (data9=0x80022220)
    (data10=0x80022220)
    (data11=0x80022220)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80022220)
    (data1_val=0x80022220)
    (data2_val=0x80022220)
    (data3_val=0x80022220)
    (data4_val=0x80022220)
    (data5_val=0x80022220)
    (data8_val=0x80022220)
    (data9_val=0x80022220)
    (data10_val=0x80022220)
    (data11_val=0x80022220)
target=31, binarySearch=[31, 657]
target=32
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80022310)
    (data1_def=0x80022310)
    (data2_def=0x80022310)
    (data3_def=0x80022310)
    (data4_def=0x80022310)
    (data5_def=0x80022310)
    (data8_def=0x80022310)
    (data9_def=0x80022310)
   (data10_def=0x80022310)
    (data11_def=0x80022310)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80022310)
    (data1=0x80022310)
    (data2=0x80022310)
    (data3=0x80022310)
    (data4=0x80022310)
    (data5=0x80022310)
    (data8=0x80022310)
    (data9=0x80022310)
    (data10=0x80022310)
    (data11=0x80022310)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80022310)
    (data1_val=0x80022310)
    (data2_val=0x80022310)
    (data3_val=0x80022310)
    (data4_val=0x80022310)
    (data5_val=0x80022310)
    (data8_val=0x80022310)
    (data9_val=0x80022310)
    (data10_val=0x80022310)
    (data11_val=0x80022310)
target=32, binarySearch=[32, 730]
target=33
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x80022400)
    (data1_def=0x80022400)
    (data2_def=0x80022400)
    (data3_def=0x80022400)
    (data4_def=0x80022400)
    (data5_def=0x80022400)
    (data8_def=0x80022400)
    (data9_def=0x80022400)
   (data10_def=0x80022400)
    (data11_def=0x80022400)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x80022400)
    (data1=0x80022400)
    (data2=0x80022400)
    (data3=0x80022400)
    (data4=0x80022400)
    (data5=0x80022400)
    (data8=0x80022400)
    (data9=0x80022400)
    (data10=0x80022400)
    (data11=0x80022400)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x80022400)
    (data1_val=0x80022400)
    (data2_val=0x80022400)
    (data3_val=0x80022400)
    (data4_val=0x80022400)
    (data5_val=0x80022400)
    (data8_val=0x80022400)
    (data9_val=0x80022400)
    (data10_val=0x80022400)
    (data11_val=0x80022400)
target=33, binarySearch=[33, 196]
target=34
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800224f0)
    (data1_def=0x800224f0)
    (data2_def=0x800224f0)
    (data3_def=0x800224f0)
    (data4_def=0x800224f0)
    (data5_def=0x800224f0)
    (data8_def=0x800224f0)
    (data9_def=0x800224f0)
   (data10_def=0x800224f0)
    (data11_def=0x800224f0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800224f0)
    (data1=0x800224f0)
    (data2=0x800224f0)
    (data3=0x800224f0)
    (data4=0x800224f0)
    (data5=0x800224f0)
    (data8=0x800224f0)
    (data9=0x800224f0)
    (data10=0x800224f0)
    (data11=0x800224f0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800224f0)
    (data1_val=0x800224f0)
    (data2_val=0x800224f0)
    (data3_val=0x800224f0)
    (data4_val=0x800224f0)
    (data5_val=0x800224f0)
    (data8_val=0x800224f0)
    (data9_val=0x800224f0)
    (data10_val=0x800224f0)
    (data11_val=0x800224f0)
target=34, binarySearch=[34, 114]
target=35
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800225e0)
    (data1_def=0x800225e0)
    (data2_def=0x800225e0)
    (data3_def=0x800225e0)
    (data4_def=0x800225e0)
    (data5_def=0x800225e0)
    (data8_def=0x800225e0)
    (data9_def=0x800225e0)
   (data10_def=0x800225e0)
    (data11_def=0x800225e0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800225e0)
    (data1=0x800225e0)
    (data2=0x800225e0)
    (data3=0x800225e0)
    (data4=0x800225e0)
    (data5=0x800225e0)
    (data8=0x800225e0)
    (data9=0x800225e0)
    (data10=0x800225e0)
    (data11=0x800225e0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800225e0)
    (data1_val=0x800225e0)
    (data2_val=0x800225e0)
    (data3_val=0x800225e0)
    (data4_val=0x800225e0)
    (data5_val=0x800225e0)
    (data8_val=0x800225e0)
    (data9_val=0x800225e0)
    (data10_val=0x800225e0)
    (data11_val=0x800225e0)
target=35, binarySearch=[35, 724]
target=36
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800226d0)
    (data1_def=0x800226d0)
    (data2_def=0x800226d0)
    (data3_def=0x800226d0)
    (data4_def=0x800226d0)
    (data5_def=0x800226d0)
    (data8_def=0x800226d0)
    (data9_def=0x800226d0)
   (data10_def=0x800226d0)
    (data11_def=0x800226d0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800226d0)
    (data1=0x800226d0)
    (data2=0x800226d0)
    (data3=0x800226d0)
    (data4=0x800226d0)
    (data5=0x800226d0)
    (data8=0x800226d0)
    (data9=0x800226d0)
    (data10=0x800226d0)
    (data11=0x800226d0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800226d0)
    (data1_val=0x800226d0)
    (data2_val=0x800226d0)
    (data3_val=0x800226d0)
    (data4_val=0x800226d0)
    (data5_val=0x800226d0)
    (data8_val=0x800226d0)
    (data9_val=0x800226d0)
    (data10_val=0x800226d0)
    (data11_val=0x800226d0)
target=36, binarySearch=[36, 899]
target=37
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800227c0)
    (data1_def=0x800227c0)
    (data2_def=0x800227c0)
    (data3_def=0x800227c0)
    (data4_def=0x800227c0)
    (data5_def=0x800227c0)
    (data8_def=0x800227c0)
    (data9_def=0x800227c0)
   (data10_def=0x800227c0)
    (data11_def=0x800227c0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800227c0)
    (data1=0x800227c0)
    (data2=0x800227c0)
    (data3=0x800227c0)
    (data4=0x800227c0)
    (data5=0x800227c0)
    (data8=0x800227c0)
    (data9=0x800227c0)
    (data10=0x800227c0)
    (data11=0x800227c0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800227c0)
    (data1_val=0x800227c0)
    (data2_val=0x800227c0)
    (data3_val=0x800227c0)
    (data4_val=0x800227c0)
    (data5_val=0x800227c0)
    (data8_val=0x800227c0)
    (data9_val=0x800227c0)
    (data10_val=0x800227c0)
    (data11_val=0x800227c0)
target=37, binarySearch=[37, 588]
target=38
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800228b0)
    (data1_def=0x800228b0)
    (data2_def=0x800228b0)
    (data3_def=0x800228b0)
    (data4_def=0x800228b0)
    (data5_def=0x800228b0)
    (data8_def=0x800228b0)
    (data9_def=0x800228b0)
   (data10_def=0x800228b0)
    (data11_def=0x800228b0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800228b0)
    (data1=0x800228b0)
    (data2=0x800228b0)
    (data3=0x800228b0)
    (data4=0x800228b0)
    (data5=0x800228b0)
    (data8=0x800228b0)
    (data9=0x800228b0)
    (data10=0x800228b0)
    (data11=0x800228b0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800228b0)
    (data1_val=0x800228b0)
    (data2_val=0x800228b0)
    (data3_val=0x800228b0)
    (data4_val=0x800228b0)
    (data5_val=0x800228b0)
    (data8_val=0x800228b0)
    (data9_val=0x800228b0)
    (data10_val=0x800228b0)
    (data11_val=0x800228b0)
target=38, binarySearch=[38, 748]
target=39
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x800229a0)
    (data1_def=0x800229a0)
    (data2_def=0x800229a0)
    (data3_def=0x800229a0)
    (data4_def=0x800229a0)
    (data5_def=0x800229a0)
    (data8_def=0x800229a0)
    (data9_def=0x800229a0)
   (data10_def=0x800229a0)
    (data11_def=0x800229a0)
  binarySearch(*array_shuffle1, search_comparison);
    (data=0x800229a0)
    (data1=0x800229a0)
    (data2=0x800229a0)
    (data3=0x800229a0)
    (data4=0x800229a0)
    (data5=0x800229a0)
    (data8=0x800229a0)
    (data9=0x800229a0)
    (data10=0x800229a0)
    (data11=0x800229a0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x800229a0)
    (data1_val=0x800229a0)
    (data2_val=0x800229a0)
    (data3_val=0x800229a0)
    (data4_val=0x800229a0)
    (data5_val=0x800229a0)
    (data8_val=0x800229a0)
    (data9_val=0x800229a0)
    (data10_val=0x800229a0)
    (data11_val=0x800229a0)
target=39, binarySearch=[39, 785]
============================================================
Finalize
============================================================
----- Delete array(shuffle1) -----
----- Delete array(shuffle2) -----
----- Delete array(shuffle3) -----
----- Delete array(ordered) -----
----- Delete array(reversed) -----
----- Delete array(ordered_without_both_ends) -----
----- Delete array(hard_with_quick_sort) -----


============================================================
End
============================================================
*elapsed time=0.571387000 sec.
