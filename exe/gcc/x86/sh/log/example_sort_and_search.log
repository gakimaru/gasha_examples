============================================================
Initialize
============================================================
----- Make Array(shuffle1) -----
[NG] Array is NOT ordered! [NG=5004 / record(s)=10000]
Array is stable.
----- Make Array(shuffle2) -----
[NG] Array is NOT ordered! [NG=5040 / record(s)=10000]
Array is stable.
----- Make Array(shuffle3) -----
[NG] Array is NOT ordered! [NG=4994 / record(s)=10000]
Array is stable.
----- Make Array(ordered) -----
Array is ordered. [record(s)=10000]
Array is stable.
----- Make Array(reversed) -----
[NG] Array is NOT ordered! [NG=3333 / record(s)=10000]
Array is stable.
----- Make Array(ordered_without_both_ends) -----
[NG] Array is NOT ordered! [NG=2 / record(s)=10000]
Array is stable.
----- Make Array(hard_with_quick_sort) -----
[NG] Array is NOT ordered! [NG=4943 / record(s)=10000]
Array is stable.


============================================================
Sort type: [C-Library qsort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001351000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001313000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001301000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000439000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000804000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000438000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001347000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [C-Library qsort]
* Total time       = 0.006993000 sec.
* Average time     = 0.000999000 sec.
* Min time         = 0.000438000 sec.
* Max time         = 0.001351000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001937000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001889000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001992000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000687000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000780000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000698000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001907000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with function)]
* Total time       = 0.009890000 sec.
* Average time     = 0.001412857 sec.
* Min time         = 0.000687000 sec.
* Max time         = 0.001992000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with inline function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001558000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001566000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001547000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000477000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000593000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000497000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001632000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with inline function)]
* Total time       = 0.007870000 sec.
* Average time     = 0.001124286 sec.
* Min time         = 0.000477000 sec.
* Max time         = 0.001632000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with functor)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001580000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001578000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001565000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000501000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000597000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000482000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001598000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with functor)]
* Total time       = 0.007901000 sec.
* Average time     = 0.001128714 sec.
* Min time         = 0.000482000 sec.
* Max time         = 0.001598000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with lamda)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001563000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001598000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001581000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000493000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000599000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000495000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001613000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with lamda)]
* Total time       = 0.007942000 sec.
* Average time     = 0.001134571 sec.
* Min time         = 0.000493000 sec.
* Max time         = 0.001613000 sec.
============================================================


============================================================
Sort type: [STL std::stable_sort *Not inplace]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002427000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002325000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002331000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001374000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001627000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001496000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002291000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

============================================================
Sort type: [STL std::stable_sort *Not inplace]
* Total time       = 0.013871000 sec.
* Average time     = 0.001981571 sec.
* Min time         = 0.001374000 sec.
* Max time         = 0.002427000 sec.
============================================================


============================================================
Sort type: [Bubble sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.819904000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.823552000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.871028000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000028000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=1.505745000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.064475000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=1.229351000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Bubble sort]
* Total time       = 5.314083000 sec.
* Average time     = 0.759154714 sec.
* Min time         = 0.000028000 sec.
* Max time         = 1.505745000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Shaker sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.779579000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.772563000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.803048000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000030000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=1.615443000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001038000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=1.212626000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Shaker sort]
* Total time       = 5.184327000 sec.
* Average time     = 0.740618143 sec.
* Min time         = 0.000030000 sec.
* Max time         = 1.615443000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Odd-Even sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.622057000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.622788000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.620028000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000087000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.782859000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.448137000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.723662000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Odd-Even sort]
* Total time       = 3.819618000 sec.
* Average time     = 0.545659714 sec.
* Min time         = 0.000087000 sec.
* Max time         = 0.782859000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Shear sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.020658000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1880292 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.019527000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1853286 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.016935000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1884921 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.004174000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=485134 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.011917000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1465201 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.004422000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=485527 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.017266000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1875160 count(s)]

============================================================
Sort type: [Shear sort]
* Total time       = 0.094899000 sec.
* Average time     = 0.013557000 sec.
* Min time         = 0.004174000 sec.
* Max time         = 0.020658000 sec.
* Total Swapped    =   9929521 count(s)
* Average  Swapped =   1418503 count(s)
* Min Swapped      =    485134 count(s)
* Max Swapped      =   1884921 count(s)
============================================================


============================================================
Sort type: [Comb sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002452000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=56744 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002455000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=57503 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002474000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=57626 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000502000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001075000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=18345 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000763000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=7303 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002516000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=58579 count(s)]

============================================================
Sort type: [Comb sort]
* Total time       = 0.012237000 sec.
* Average time     = 0.001748143 sec.
* Min time         = 0.000502000 sec.
* Max time         = 0.002516000 sec.
* Total Swapped    =    256100 count(s)
* Average  Swapped =     36585 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     58579 count(s)
============================================================


============================================================
Sort type: [Gnome sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.824072000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.786509000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.743339000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000030000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=1.492302000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000576000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=1.110494000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Gnome sort]
* Total time       = 4.957322000 sec.
* Average time     = 0.708188857 sec.
* Min time         = 0.000030000 sec.
* Max time         = 1.492302000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Quick sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001596000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33316 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001591000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33617 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001503000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33331 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000268000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=3333 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000421000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=8333 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000288000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=3334 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001626000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=35947 count(s)]

============================================================
Sort type: [Quick sort]
* Total time       = 0.007293000 sec.
* Average time     = 0.001041857 sec.
* Min time         = 0.000268000 sec.
* Max time         = 0.001626000 sec.
* Total Swapped    =    151211 count(s)
* Average  Swapped =     21601 count(s)
* Min Swapped      =      3333 count(s)
* Max Swapped      =     35947 count(s)
============================================================


============================================================
Sort type: [Selection sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.075822000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9987 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.075292000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9993 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.075763000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9995 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.075377000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.076484000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=8333 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.076313000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.075708000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9987 count(s)]

============================================================
Sort type: [Selection sort]
* Total time       = 0.530759000 sec.
* Average time     = 0.075822714 sec.
* Min time         = 0.075292000 sec.
* Max time         = 0.076484000 sec.
* Total Swapped    =     48298 count(s)
* Average  Swapped =      6899 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      9995 count(s)
============================================================


============================================================
Sort type: [Heap sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.004838000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129453 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.004861000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129590 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.004848000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129406 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.007231000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=218680 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.004018000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=116627 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.007003000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=213143 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.004728000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=123233 count(s)]

============================================================
Sort type: [Heap sort]
* Total time       = 0.037527000 sec.
* Average time     = 0.005361000 sec.
* Min time         = 0.004018000 sec.
* Max time         = 0.007231000 sec.
* Total Swapped    =   1060132 count(s)
* Average  Swapped =    151447 count(s)
* Min Swapped      =    116627 count(s)
* Max Swapped      =    218680 count(s)
============================================================


============================================================
Sort type: [Insertion sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.282695000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9988 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.280834000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.285128000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9988 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000025000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.572845000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000411000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.431196000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9986 count(s)]

============================================================
Sort type: [Insertion sort]
* Total time       = 1.853134000 sec.
* Average time     = 0.264733429 sec.
* Min time         = 0.000025000 sec.
* Max time         = 0.572845000 sec.
* Total Swapped    =     59952 count(s)
* Average  Swapped =      8564 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      9999 count(s)
============================================================


============================================================
Sort type: [Shell sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.003495000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=48881 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003443000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=48400 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.003580000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=49161 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000214000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001486000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=37222 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000402000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=5156 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.003128000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=49801 count(s)]

============================================================
Sort type: [Shell sort]
* Total time       = 0.015748000 sec.
* Average time     = 0.002249714 sec.
* Min time         = 0.000214000 sec.
* Max time         = 0.003580000 sec.
* Total Swapped    =    238621 count(s)
* Average  Swapped =     34088 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     49801 count(s)
============================================================


============================================================
Sort type: [Inplace Merge sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.251102000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58247 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.251690000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58256 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.253952000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58341 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000063000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.510929000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=60442 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000501000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10006 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.378324000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58237 count(s)]

============================================================
Sort type: [Inplace Merge sort]
* Total time       = 1.646561000 sec.
* Average time     = 0.235223000 sec.
* Min time         = 0.000063000 sec.
* Max time         = 0.510929000 sec.
* Total Swapped    =    303529 count(s)
* Average  Swapped =     43361 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     60442 count(s)
============================================================


============================================================
Sort type: [Intro sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001551000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=31094 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001588000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=30961 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001553000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=31118 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000022000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000317000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=6022 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000157000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1024 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001636000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=34513 count(s)]

============================================================
Sort type: [Intro sort]
* Total time       = 0.006824000 sec.
* Average time     = 0.000974857 sec.
* Min time         = 0.000022000 sec.
* Max time         = 0.001636000 sec.
* Total Swapped    =    134732 count(s)
* Average  Swapped =     19247 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     34513 count(s)
============================================================


============================================================
Sort type: [Radix sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000427000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000441000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000383000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000111000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000237000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000111000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=4 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000371000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

============================================================
Sort type: [Radix sort]
* Total time       = 0.002081000 sec.
* Average time     = 0.000297286 sec.
* Min time         = 0.000111000 sec.
* Max time         = 0.000441000 sec.
* Total Swapped    =     50002 count(s)
* Average  Swapped =      7143 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     10000 count(s)
============================================================


============================================================
Result(Summary)
============================================================
Array Element size = 80 Bytes
Array Element(s)   = 10000 Count(s)
Total Array size   = 800000 Bytes
--------------------------------------------------------------------------------------------------------------------------------
- Sort name:                Elapsed Time (Sum/Average/Min/Max) [sec.]             Swapped (Sum/Average/Min/Max) [count(s)]
--------------------------------------------------------------------------------------------------------------------------------
[C-Library sort](Quick sort)
- qsort(inline-function):   0.006993000/  0.000999000/  0.000438000/  0.001351000
--------------------------------------------------------------------------------------------------------------------------------
[STL sort](Intro sort)
- std::sort(function):      0.009890000/  0.001412857/  0.000687000/  0.001992000
- std::sort(inline-func):   0.007870000/  0.001124286/  0.000477000/  0.001632000
- std::sort(functor):       0.007901000/  0.001128714/  0.000482000/  0.001598000
- std::sort(lambda):        0.007942000/  0.001134571/  0.000493000/  0.001613000
--------------------------------------------------------------------------------------------------------------------------------
[STL stable sort](Merge sort) *Not In-place sort
- std::stable_sort<S>:      0.013871000/  0.001981571/  0.001374000/  0.002427000
--------------------------------------------------------------------------------------------------------------------------------
[Exchange sorts]
- Bubble sort<S>:           5.314083000/  0.759154714/  0.000028000/  1.505745000  162065650/   23152235/          0/   49985001
- Shaker sort<S>:           5.184327000/  0.740618143/  0.000030000/  1.615443000  162065650/   23152235/          0/   49985001
- Odd-Even sort<S>:         3.819618000/  0.545659714/  0.000087000/  0.782859000  162065650/   23152235/          0/   49985001
- Shear sort:               0.094899000/  0.013557000/  0.004174000/  0.020658000    9929521/    1418503/     485134/    1884921
- Comb sort:                0.012237000/  0.001748143/  0.000502000/  0.002516000     256100/      36585/          0/      58579
- Gnome sort<S>:            4.957322000/  0.708188857/  0.000030000/  1.492302000  162065650/   23152235/          0/   49985001
--------------------------------------------------------------------------------------------------------------------------------
[Partition-exchange sorts]
- Quick sort:               0.007293000/  0.001041857/  0.000268000/  0.001626000     151211/      21601/       3333/      35947
--------------------------------------------------------------------------------------------------------------------------------
[Selection sorts]
- Selection sort:           0.530759000/  0.075822714/  0.075292000/  0.076484000      48298/       6899/          0/       9995
- Heap sort:                0.037527000/  0.005361000/  0.004018000/  0.007231000    1060132/     151447/     116627/     218680
--------------------------------------------------------------------------------------------------------------------------------
[Insertion sorts]
- Insertion sort<S>:        1.853134000/  0.264733429/  0.000025000/  0.572845000      59952/       8564/          0/       9999
- Shell sort:               0.015748000/  0.002249714/  0.000214000/  0.003580000     238621/      34088/          0/      49801
--------------------------------------------------------------------------------------------------------------------------------
[Merge sorts]
- Inplace-Merge sort<S>:    1.646561000/  0.235223000/  0.000063000/  0.510929000     303529/      43361/          0/      60442
--------------------------------------------------------------------------------------------------------------------------------
[Hybrid sorts]
- Intro sort:               0.006824000/  0.000974857/  0.000022000/  0.001636000     134732/      19247/          0/      34513
--------------------------------------------------------------------------------------------------------------------------------
[Distribution sorts] *Not In-place sort
- Radix sort<S>:            0.002081000/  0.000297286/  0.000111000/  0.000441000      50002/       7143/          0/      10000
--------------------------------------------------------------------------------------------------------------------------------
* <S> ... Stable sort algorithm.

--------------------------------------------------------------------------------------------------------------------------------
Functoin variation test for sort and search.
--------------------------------------------------------------------------------------------------------------------------------

[Variation test for sort(intro-sort)]
(result=31094)
(result1=31094)
(result3=31094)
(result4=31094)
(result5=31094)
(result6=31094)
(result8=31094)
(result9=31094)
(result10=31094)
(result11=31462)

[Variation test for linear-search]
target=-1
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x0)
    (data1_def=0x0)
    (data2_def=0x0)
    (data3_def=0x0)
    (data4_def=0x0)
    (data5_def=0x0)
    (data8_def=0x0)
    (data9_def=0x0)
    (data10_def=0x0)
    (data11_def=0x0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x0)
    (data1=0x0)
    (data2=0x0)
    (data3=0x0)
    (data4=0x0)
    (data5=0x0)
    (data8=0x0)
    (data9=0x0)
    (data10=0x0)
    (data11=0x0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x0)
    (data1_val=0x0)
    (data2_val=0x0)
    (data3_val=0x0)
    (data4_val=0x0)
    (data5_val=0x0)
    (data8_val=0x0)
    (data9_val=0x0)
    (data10_val=0x0)
    (data11_val=0x0)
target=-1, linearSearch=nullptr
target=0
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffde8ee0)
    (data1_def=0xffde8ee0)
    (data2_def=0xffde8ee0)
    (data3_def=0xffde8ee0)
    (data4_def=0xffde8ee0)
    (data5_def=0xffde8ee0)
    (data8_def=0xffde8ee0)
    (data9_def=0xffde8ee0)
    (data10_def=0xffde8ee0)
    (data11_def=0xffde8ee0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffde8ee0)
    (data1=0xffde8ee0)
    (data2=0xffde8ee0)
    (data3=0xffde8ee0)
    (data4=0xffde8ee0)
    (data5=0xffde8ee0)
    (data8=0xffde8ee0)
    (data9=0xffde8ee0)
    (data10=0xffde8ee0)
    (data11=0xffde8ee0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffde8ee0)
    (data1_val=0xffde8ee0)
    (data2_val=0xffde8ee0)
    (data3_val=0xffde8ee0)
    (data4_val=0xffde8ee0)
    (data5_val=0xffde8ee0)
    (data8_val=0xffde8ee0)
    (data9_val=0xffde8ee0)
    (data10_val=0xffde8ee0)
    (data11_val=0xffde8ee0)
target=0, linearSearch=[0, 1276]
target=2
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdde620)
    (data1_def=0xffdde620)
    (data2_def=0xffdde620)
    (data3_def=0xffdde620)
    (data4_def=0xffdde620)
    (data5_def=0xffdde620)
    (data8_def=0xffdde620)
    (data9_def=0xffdde620)
    (data10_def=0xffdde620)
    (data11_def=0xffdde620)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdde620)
    (data1=0xffdde620)
    (data2=0xffdde620)
    (data3=0xffdde620)
    (data4=0xffdde620)
    (data5=0xffdde620)
    (data8=0xffdde620)
    (data9=0xffdde620)
    (data10=0xffdde620)
    (data11=0xffdde620)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdde620)
    (data1_val=0xffdde620)
    (data2_val=0xffdde620)
    (data3_val=0xffdde620)
    (data4_val=0xffdde620)
    (data5_val=0xffdde620)
    (data8_val=0xffdde620)
    (data9_val=0xffdde620)
    (data10_val=0xffdde620)
    (data11_val=0xffdde620)
target=2, linearSearch=[2, 736]
target=6
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffddff70)
    (data1_def=0xffddff70)
    (data2_def=0xffddff70)
    (data3_def=0xffddff70)
    (data4_def=0xffddff70)
    (data5_def=0xffddff70)
    (data8_def=0xffddff70)
    (data9_def=0xffddff70)
    (data10_def=0xffddff70)
    (data11_def=0xffddff70)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffddff70)
    (data1=0xffddff70)
    (data2=0xffddff70)
    (data3=0xffddff70)
    (data4=0xffddff70)
    (data5=0xffddff70)
    (data8=0xffddff70)
    (data9=0xffddff70)
    (data10=0xffddff70)
    (data11=0xffddff70)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffddff70)
    (data1_val=0xffddff70)
    (data2_val=0xffddff70)
    (data3_val=0xffddff70)
    (data4_val=0xffddff70)
    (data5_val=0xffddff70)
    (data8_val=0xffddff70)
    (data9_val=0xffddff70)
    (data10_val=0xffddff70)
    (data11_val=0xffddff70)
target=6, linearSearch=[6, 817]
target=14
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdd3bd0)
    (data1_def=0xffdd3bd0)
    (data2_def=0xffdd3bd0)
    (data3_def=0xffdd3bd0)
    (data4_def=0xffdd3bd0)
    (data5_def=0xffdd3bd0)
    (data8_def=0xffdd3bd0)
    (data9_def=0xffdd3bd0)
    (data10_def=0xffdd3bd0)
    (data11_def=0xffdd3bd0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdd3bd0)
    (data1=0xffdd3bd0)
    (data2=0xffdd3bd0)
    (data3=0xffdd3bd0)
    (data4=0xffdd3bd0)
    (data5=0xffdd3bd0)
    (data8=0xffdd3bd0)
    (data9=0xffdd3bd0)
    (data10=0xffdd3bd0)
    (data11=0xffdd3bd0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdd3bd0)
    (data1_val=0xffdd3bd0)
    (data2_val=0xffdd3bd0)
    (data3_val=0xffdd3bd0)
    (data4_val=0xffdd3bd0)
    (data5_val=0xffdd3bd0)
    (data8_val=0xffdd3bd0)
    (data9_val=0xffdd3bd0)
    (data10_val=0xffdd3bd0)
    (data11_val=0xffdd3bd0)
target=14, linearSearch=[14, 191]
target=30
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffe167a0)
    (data1_def=0xffe167a0)
    (data2_def=0xffe167a0)
    (data3_def=0xffe167a0)
    (data4_def=0xffe167a0)
    (data5_def=0xffe167a0)
    (data8_def=0xffe167a0)
    (data9_def=0xffe167a0)
    (data10_def=0xffe167a0)
    (data11_def=0xffe167a0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffe167a0)
    (data1=0xffe167a0)
    (data2=0xffe167a0)
    (data3=0xffe167a0)
    (data4=0xffe167a0)
    (data5=0xffe167a0)
    (data8=0xffe167a0)
    (data9=0xffe167a0)
    (data10=0xffe167a0)
    (data11=0xffe167a0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffe167a0)
    (data1_val=0xffe167a0)
    (data2_val=0xffe167a0)
    (data3_val=0xffe167a0)
    (data4_val=0xffe167a0)
    (data5_val=0xffe167a0)
    (data8_val=0xffe167a0)
    (data9_val=0xffe167a0)
    (data10_val=0xffe167a0)
    (data11_val=0xffe167a0)
target=30, linearSearch=[30, 3608]
target=62
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdfb720)
    (data1_def=0xffdfb720)
    (data2_def=0xffdfb720)
    (data3_def=0xffdfb720)
    (data4_def=0xffdfb720)
    (data5_def=0xffdfb720)
    (data8_def=0xffdfb720)
    (data9_def=0xffdfb720)
    (data10_def=0xffdfb720)
    (data11_def=0xffdfb720)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdfb720)
    (data1=0xffdfb720)
    (data2=0xffdfb720)
    (data3=0xffdfb720)
    (data4=0xffdfb720)
    (data5=0xffdfb720)
    (data8=0xffdfb720)
    (data9=0xffdfb720)
    (data10=0xffdfb720)
    (data11=0xffdfb720)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdfb720)
    (data1_val=0xffdfb720)
    (data2_val=0xffdfb720)
    (data3_val=0xffdfb720)
    (data4_val=0xffdfb720)
    (data5_val=0xffdfb720)
    (data8_val=0xffdfb720)
    (data9_val=0xffdfb720)
    (data10_val=0xffdfb720)
    (data11_val=0xffdfb720)
target=62, linearSearch=[62, 2224]
target=126
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdeec50)
    (data1_def=0xffdeec50)
    (data2_def=0xffdeec50)
    (data3_def=0xffdeec50)
    (data4_def=0xffdeec50)
    (data5_def=0xffdeec50)
    (data8_def=0xffdeec50)
    (data9_def=0xffdeec50)
    (data10_def=0xffdeec50)
    (data11_def=0xffdeec50)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdeec50)
    (data1=0xffdeec50)
    (data2=0xffdeec50)
    (data3=0xffdeec50)
    (data4=0xffdeec50)
    (data5=0xffdeec50)
    (data8=0xffdeec50)
    (data9=0xffdeec50)
    (data10=0xffdeec50)
    (data11=0xffdeec50)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdeec50)
    (data1_val=0xffdeec50)
    (data2_val=0xffdeec50)
    (data3_val=0xffdeec50)
    (data4_val=0xffdeec50)
    (data5_val=0xffdeec50)
    (data8_val=0xffdeec50)
    (data9_val=0xffdeec50)
    (data10_val=0xffdeec50)
    (data11_val=0xffdeec50)
target=126, linearSearch=[126, 1575]
target=254
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffe442e0)
    (data1_def=0xffe442e0)
    (data2_def=0xffe442e0)
    (data3_def=0xffe442e0)
    (data4_def=0xffe442e0)
    (data5_def=0xffe442e0)
    (data8_def=0xffe442e0)
    (data9_def=0xffe442e0)
    (data10_def=0xffe442e0)
    (data11_def=0xffe442e0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffe442e0)
    (data1=0xffe442e0)
    (data2=0xffe442e0)
    (data3=0xffe442e0)
    (data4=0xffe442e0)
    (data5=0xffe442e0)
    (data8=0xffe442e0)
    (data9=0xffe442e0)
    (data10=0xffe442e0)
    (data11=0xffe442e0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffe442e0)
    (data1_val=0xffe442e0)
    (data2_val=0xffe442e0)
    (data3_val=0xffe442e0)
    (data4_val=0xffe442e0)
    (data5_val=0xffe442e0)
    (data8_val=0xffe442e0)
    (data9_val=0xffe442e0)
    (data10_val=0xffe442e0)
    (data11_val=0xffe442e0)
target=254, linearSearch=[254, 5948]

[Variation test for binary-search]
target=-1
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x0)
    (data1_def=0x0)
    (data2_def=0x0)
    (data3_def=0x0)
    (data4_def=0x0)
    (data5_def=0x0)
    (data8_def=0x0)
    (data9_def=0x0)
   (data10_def=0x0)
    (data11_def=0x0)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x0)
    (data1=0x0)
    (data2=0x0)
    (data3=0x0)
    (data4=0x0)
    (data5=0x0)
    (data8=0x0)
    (data9=0x0)
    (data10=0x0)
    (data11=0x0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x0)
    (data1_val=0x0)
    (data2_val=0x0)
    (data3_val=0x0)
    (data4_val=0x0)
    (data5_val=0x0)
    (data8_val=0x0)
    (data9_val=0x0)
    (data10_val=0x0)
    (data11_val=0x0)
target=-1, binarySearch=nullptr
target=0
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd0020)
    (data1_def=0xffdd0020)
    (data2_def=0xffdd0020)
    (data3_def=0xffdd0020)
    (data4_def=0xffdd0020)
    (data5_def=0xffdd0020)
    (data8_def=0xffdd0020)
    (data9_def=0xffdd0020)
   (data10_def=0xffdd0020)
    (data11_def=0xffdd0020)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd0020)
    (data1=0xffdd0020)
    (data2=0xffdd0020)
    (data3=0xffdd0020)
    (data4=0xffdd0020)
    (data5=0xffdd0020)
    (data8=0xffdd0020)
    (data9=0xffdd0020)
    (data10=0xffdd0020)
    (data11=0xffdd0020)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd0020)
    (data1_val=0xffdd0020)
    (data2_val=0xffdd0020)
    (data3_val=0xffdd0020)
    (data4_val=0xffdd0020)
    (data5_val=0xffdd0020)
    (data8_val=0xffdd0020)
    (data9_val=0xffdd0020)
    (data10_val=0xffdd0020)
    (data11_val=0xffdd0020)
target=0, binarySearch=[0, 1276]
target=2
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd0200)
    (data1_def=0xffdd0200)
    (data2_def=0xffdd0200)
    (data3_def=0xffdd0200)
    (data4_def=0xffdd0200)
    (data5_def=0xffdd0200)
    (data8_def=0xffdd0200)
    (data9_def=0xffdd0200)
   (data10_def=0xffdd0200)
    (data11_def=0xffdd0200)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd0200)
    (data1=0xffdd0200)
    (data2=0xffdd0200)
    (data3=0xffdd0200)
    (data4=0xffdd0200)
    (data5=0xffdd0200)
    (data8=0xffdd0200)
    (data9=0xffdd0200)
    (data10=0xffdd0200)
    (data11=0xffdd0200)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd0200)
    (data1_val=0xffdd0200)
    (data2_val=0xffdd0200)
    (data3_val=0xffdd0200)
    (data4_val=0xffdd0200)
    (data5_val=0xffdd0200)
    (data8_val=0xffdd0200)
    (data9_val=0xffdd0200)
    (data10_val=0xffdd0200)
    (data11_val=0xffdd0200)
target=2, binarySearch=[2, 4297]
target=6
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd05c0)
    (data1_def=0xffdd05c0)
    (data2_def=0xffdd05c0)
    (data3_def=0xffdd05c0)
    (data4_def=0xffdd05c0)
    (data5_def=0xffdd05c0)
    (data8_def=0xffdd05c0)
    (data9_def=0xffdd05c0)
   (data10_def=0xffdd05c0)
    (data11_def=0xffdd05c0)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd05c0)
    (data1=0xffdd05c0)
    (data2=0xffdd05c0)
    (data3=0xffdd05c0)
    (data4=0xffdd05c0)
    (data5=0xffdd05c0)
    (data8=0xffdd05c0)
    (data9=0xffdd05c0)
    (data10=0xffdd05c0)
    (data11=0xffdd05c0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd05c0)
    (data1_val=0xffdd05c0)
    (data2_val=0xffdd05c0)
    (data3_val=0xffdd05c0)
    (data4_val=0xffdd05c0)
    (data5_val=0xffdd05c0)
    (data8_val=0xffdd05c0)
    (data9_val=0xffdd05c0)
    (data10_val=0xffdd05c0)
    (data11_val=0xffdd05c0)
target=6, binarySearch=[6, 1745]
target=14
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd0d40)
    (data1_def=0xffdd0d40)
    (data2_def=0xffdd0d40)
    (data3_def=0xffdd0d40)
    (data4_def=0xffdd0d40)
    (data5_def=0xffdd0d40)
    (data8_def=0xffdd0d40)
    (data9_def=0xffdd0d40)
   (data10_def=0xffdd0d40)
    (data11_def=0xffdd0d40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd0d40)
    (data1=0xffdd0d40)
    (data2=0xffdd0d40)
    (data3=0xffdd0d40)
    (data4=0xffdd0d40)
    (data5=0xffdd0d40)
    (data8=0xffdd0d40)
    (data9=0xffdd0d40)
    (data10=0xffdd0d40)
    (data11=0xffdd0d40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd0d40)
    (data1_val=0xffdd0d40)
    (data2_val=0xffdd0d40)
    (data3_val=0xffdd0d40)
    (data4_val=0xffdd0d40)
    (data5_val=0xffdd0d40)
    (data8_val=0xffdd0d40)
    (data9_val=0xffdd0d40)
    (data10_val=0xffdd0d40)
    (data11_val=0xffdd0d40)
target=14, binarySearch=[14, 191]
target=30
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd1c40)
    (data1_def=0xffdd1c40)
    (data2_def=0xffdd1c40)
    (data3_def=0xffdd1c40)
    (data4_def=0xffdd1c40)
    (data5_def=0xffdd1c40)
    (data8_def=0xffdd1c40)
    (data9_def=0xffdd1c40)
   (data10_def=0xffdd1c40)
    (data11_def=0xffdd1c40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd1c40)
    (data1=0xffdd1c40)
    (data2=0xffdd1c40)
    (data3=0xffdd1c40)
    (data4=0xffdd1c40)
    (data5=0xffdd1c40)
    (data8=0xffdd1c40)
    (data9=0xffdd1c40)
    (data10=0xffdd1c40)
    (data11=0xffdd1c40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd1c40)
    (data1_val=0xffdd1c40)
    (data2_val=0xffdd1c40)
    (data3_val=0xffdd1c40)
    (data4_val=0xffdd1c40)
    (data5_val=0xffdd1c40)
    (data8_val=0xffdd1c40)
    (data9_val=0xffdd1c40)
    (data10_val=0xffdd1c40)
    (data11_val=0xffdd1c40)
target=30, binarySearch=[30, 6168]
target=62
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd3a40)
    (data1_def=0xffdd3a40)
    (data2_def=0xffdd3a40)
    (data3_def=0xffdd3a40)
    (data4_def=0xffdd3a40)
    (data5_def=0xffdd3a40)
    (data8_def=0xffdd3a40)
    (data9_def=0xffdd3a40)
   (data10_def=0xffdd3a40)
    (data11_def=0xffdd3a40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd3a40)
    (data1=0xffdd3a40)
    (data2=0xffdd3a40)
    (data3=0xffdd3a40)
    (data4=0xffdd3a40)
    (data5=0xffdd3a40)
    (data8=0xffdd3a40)
    (data9=0xffdd3a40)
    (data10=0xffdd3a40)
    (data11=0xffdd3a40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd3a40)
    (data1_val=0xffdd3a40)
    (data2_val=0xffdd3a40)
    (data3_val=0xffdd3a40)
    (data4_val=0xffdd3a40)
    (data5_val=0xffdd3a40)
    (data8_val=0xffdd3a40)
    (data9_val=0xffdd3a40)
    (data10_val=0xffdd3a40)
    (data11_val=0xffdd3a40)
target=62, binarySearch=[62, 4717]
target=126
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd7640)
    (data1_def=0xffdd7640)
    (data2_def=0xffdd7640)
    (data3_def=0xffdd7640)
    (data4_def=0xffdd7640)
    (data5_def=0xffdd7640)
    (data8_def=0xffdd7640)
    (data9_def=0xffdd7640)
   (data10_def=0xffdd7640)
    (data11_def=0xffdd7640)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd7640)
    (data1=0xffdd7640)
    (data2=0xffdd7640)
    (data3=0xffdd7640)
    (data4=0xffdd7640)
    (data5=0xffdd7640)
    (data8=0xffdd7640)
    (data9=0xffdd7640)
    (data10=0xffdd7640)
    (data11=0xffdd7640)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd7640)
    (data1_val=0xffdd7640)
    (data2_val=0xffdd7640)
    (data3_val=0xffdd7640)
    (data4_val=0xffdd7640)
    (data5_val=0xffdd7640)
    (data8_val=0xffdd7640)
    (data9_val=0xffdd7640)
    (data10_val=0xffdd7640)
    (data11_val=0xffdd7640)
target=126, binarySearch=[126, 2512]
target=254
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffddee40)
    (data1_def=0xffddee40)
    (data2_def=0xffddee40)
    (data3_def=0xffddee40)
    (data4_def=0xffddee40)
    (data5_def=0xffddee40)
    (data8_def=0xffddee40)
    (data9_def=0xffddee40)
   (data10_def=0xffddee40)
    (data11_def=0xffddee40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffddee40)
    (data1=0xffddee40)
    (data2=0xffddee40)
    (data3=0xffddee40)
    (data4=0xffddee40)
    (data5=0xffddee40)
    (data8=0xffddee40)
    (data9=0xffddee40)
    (data10=0xffddee40)
    (data11=0xffddee40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffddee40)
    (data1_val=0xffddee40)
    (data2_val=0xffddee40)
    (data3_val=0xffddee40)
    (data4_val=0xffddee40)
    (data5_val=0xffddee40)
    (data8_val=0xffddee40)
    (data9_val=0xffddee40)
    (data10_val=0xffddee40)
    (data11_val=0xffddee40)
target=254, binarySearch=[254, 8995]
============================================================
Finalize
============================================================
----- Delete array(shuffle1) -----
----- Delete array(shuffle2) -----
----- Delete array(shuffle3) -----
----- Delete array(ordered) -----
----- Delete array(reversed) -----
----- Delete array(ordered_without_both_ends) -----
----- Delete array(hard_with_quick_sort) -----


============================================================
End
============================================================
*elapsed time=23.621494000 sec.
