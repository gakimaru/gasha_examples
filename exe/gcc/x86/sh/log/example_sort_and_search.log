============================================================
Initialize
============================================================
----- Make Array(shuffle1) -----
[NG] Array is NOT ordered! [NG=5004 / record(s)=10000]
Array is stable.
----- Make Array(shuffle2) -----
[NG] Array is NOT ordered! [NG=5040 / record(s)=10000]
Array is stable.
----- Make Array(shuffle3) -----
[NG] Array is NOT ordered! [NG=4994 / record(s)=10000]
Array is stable.
----- Make Array(ordered) -----
Array is ordered. [record(s)=10000]
Array is stable.
----- Make Array(reversed) -----
[NG] Array is NOT ordered! [NG=3333 / record(s)=10000]
Array is stable.
----- Make Array(ordered_without_both_ends) -----
[NG] Array is NOT ordered! [NG=2 / record(s)=10000]
Array is stable.
----- Make Array(hard_with_quick_sort) -----
[NG] Array is NOT ordered! [NG=4943 / record(s)=10000]
Array is stable.


============================================================
Sort type: [C-Library qsort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001351000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001331000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001318000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000447000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000785000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000430000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001288000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [C-Library qsort]
* Total time       = 0.006950000 sec.
* Average time     = 0.000992857 sec.
* Min time         = 0.000430000 sec.
* Max time         = 0.001351000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001840000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001829000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001839000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000660000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000732000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000690000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001853000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with function)]
* Total time       = 0.009443000 sec.
* Average time     = 0.001349000 sec.
* Min time         = 0.000660000 sec.
* Max time         = 0.001853000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with inline function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001660000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001598000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001565000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000481000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000592000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000476000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001589000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with inline function)]
* Total time       = 0.007961000 sec.
* Average time     = 0.001137286 sec.
* Min time         = 0.000476000 sec.
* Max time         = 0.001660000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with functor)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001642000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001590000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001592000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000511000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000623000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000502000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001576000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with functor)]
* Total time       = 0.008036000 sec.
* Average time     = 0.001148000 sec.
* Min time         = 0.000502000 sec.
* Max time         = 0.001642000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with lamda)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001566000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001709000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001586000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000503000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000595000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000493000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001580000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with lamda)]
* Total time       = 0.008032000 sec.
* Average time     = 0.001147429 sec.
* Min time         = 0.000493000 sec.
* Max time         = 0.001709000 sec.
============================================================


============================================================
Sort type: [STL std::stable_sort *Not inplace]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002451000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002362000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002317000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.001346000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001601000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001423000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002222000 sec.
Array is ordered. [record(s)=10000]
Array is stable.

============================================================
Sort type: [STL std::stable_sort *Not inplace]
* Total time       = 0.013722000 sec.
* Average time     = 0.001960286 sec.
* Min time         = 0.001346000 sec.
* Max time         = 0.002451000 sec.
============================================================


============================================================
Sort type: [Bubble sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.786811000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.783008000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.790450000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000014000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=1.422559000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.063338000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=1.091510000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Bubble sort]
* Total time       = 4.937690000 sec.
* Average time     = 0.705384286 sec.
* Min time         = 0.000014000 sec.
* Max time         = 1.422559000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Shaker sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.777503000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.778416000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.777216000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000014000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=1.466271000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000613000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=1.133200000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Shaker sort]
* Total time       = 4.933233000 sec.
* Average time     = 0.704747571 sec.
* Min time         = 0.000014000 sec.
* Max time         = 1.466271000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Odd-Even sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.612303000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.610528000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.605560000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000120000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.741327000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.439036000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.691951000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Odd-Even sort]
* Total time       = 3.700825000 sec.
* Average time     = 0.528689286 sec.
* Min time         = 0.000120000 sec.
* Max time         = 0.741327000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Shear sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.016426000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1907513 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.016422000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1900610 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.016064000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1913805 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.004429000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=494802 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.011208000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1474414 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.004630000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=514605 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.015162000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1895833 count(s)]

============================================================
Sort type: [Shear sort]
* Total time       = 0.084341000 sec.
* Average time     = 0.012048714 sec.
* Min time         = 0.004429000 sec.
* Max time         = 0.016426000 sec.
* Total Swapped    =  10101582 count(s)
* Average  Swapped =   1443083 count(s)
* Min Swapped      =    494802 count(s)
* Max Swapped      =   1913805 count(s)
============================================================


============================================================
Sort type: [Comb sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002419000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=56744 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002421000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=57503 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002433000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=57626 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000482000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001069000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=18345 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000738000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=7303 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002492000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=58579 count(s)]

============================================================
Sort type: [Comb sort]
* Total time       = 0.012054000 sec.
* Average time     = 0.001722000 sec.
* Min time         = 0.000482000 sec.
* Max time         = 0.002492000 sec.
* Total Swapped    =    256100 count(s)
* Average  Swapped =     36585 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     58579 count(s)
============================================================


============================================================
Sort type: [Gnome sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.729090000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.723365000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.735807000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000020000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=1.466890000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000589000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=1.087827000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Gnome sort]
* Total time       = 4.743588000 sec.
* Average time     = 0.677655429 sec.
* Min time         = 0.000020000 sec.
* Max time         = 1.466890000 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Quick sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001569000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33316 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001550000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33617 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001566000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33331 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000264000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=3333 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000434000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=8333 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000266000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=3334 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001641000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=35947 count(s)]

============================================================
Sort type: [Quick sort]
* Total time       = 0.007290000 sec.
* Average time     = 0.001041429 sec.
* Min time         = 0.000264000 sec.
* Max time         = 0.001641000 sec.
* Total Swapped    =    151211 count(s)
* Average  Swapped =     21601 count(s)
* Min Swapped      =      3333 count(s)
* Max Swapped      =     35947 count(s)
============================================================


============================================================
Sort type: [Selection sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.075131000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9987 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.075504000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9993 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.075744000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9995 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.074313000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.074305000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=8333 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.073963000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.074433000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9987 count(s)]

============================================================
Sort type: [Selection sort]
* Total time       = 0.523393000 sec.
* Average time     = 0.074770429 sec.
* Min time         = 0.073963000 sec.
* Max time         = 0.075744000 sec.
* Total Swapped    =     48298 count(s)
* Average  Swapped =      6899 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      9995 count(s)
============================================================


============================================================
Sort type: [Heap sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.004775000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129453 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.004673000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129590 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.004783000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129406 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.006799000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=218680 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.003904000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=116627 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.006738000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=213143 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.004578000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=123233 count(s)]

============================================================
Sort type: [Heap sort]
* Total time       = 0.036250000 sec.
* Average time     = 0.005178571 sec.
* Min time         = 0.003904000 sec.
* Max time         = 0.006799000 sec.
* Total Swapped    =   1060132 count(s)
* Average  Swapped =    151447 count(s)
* Min Swapped      =    116627 count(s)
* Max Swapped      =    218680 count(s)
============================================================


============================================================
Sort type: [Insertion sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.278848000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9988 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.276476000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.280460000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9988 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000018000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.566788000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000407000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.423779000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9986 count(s)]

============================================================
Sort type: [Insertion sort]
* Total time       = 1.826776000 sec.
* Average time     = 0.260968000 sec.
* Min time         = 0.000018000 sec.
* Max time         = 0.566788000 sec.
* Total Swapped    =     59952 count(s)
* Average  Swapped =      8564 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      9999 count(s)
============================================================


============================================================
Sort type: [Shell sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.003479000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=48881 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.003333000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=48400 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.003491000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=49161 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000173000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001455000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=37222 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000372000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=5156 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.003211000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=49801 count(s)]

============================================================
Sort type: [Shell sort]
* Total time       = 0.015514000 sec.
* Average time     = 0.002216286 sec.
* Min time         = 0.000173000 sec.
* Max time         = 0.003491000 sec.
* Total Swapped    =    238621 count(s)
* Average  Swapped =     34088 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     49801 count(s)
============================================================


============================================================
Sort type: [Inplace Merge sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.248866000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58247 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.249636000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58256 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.251636000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58341 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000037000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.497475000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=60442 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000574000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10006 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.369821000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58237 count(s)]

============================================================
Sort type: [Inplace Merge sort]
* Total time       = 1.618045000 sec.
* Average time     = 0.231149286 sec.
* Min time         = 0.000037000 sec.
* Max time         = 0.497475000 sec.
* Total Swapped    =    303529 count(s)
* Average  Swapped =     43361 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     60442 count(s)
============================================================


============================================================
Sort type: [Intro sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001512000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=31094 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001563000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=30961 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001540000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=31118 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000015000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000294000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=6022 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000152000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1024 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001631000 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=34513 count(s)]

============================================================
Sort type: [Intro sort]
* Total time       = 0.006707000 sec.
* Average time     = 0.000958143 sec.
* Min time         = 0.000015000 sec.
* Max time         = 0.001631000 sec.
* Total Swapped    =    134732 count(s)
* Average  Swapped =     19247 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     34513 count(s)
============================================================


============================================================
Sort type: [Radix sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000405000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000345000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000345000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000125000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000236000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000132000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=4 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000355000 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

============================================================
Sort type: [Radix sort]
* Total time       = 0.001943000 sec.
* Average time     = 0.000277571 sec.
* Min time         = 0.000125000 sec.
* Max time         = 0.000405000 sec.
* Total Swapped    =     50002 count(s)
* Average  Swapped =      7143 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     10000 count(s)
============================================================


============================================================
Result(Summary)
============================================================
Array Element size = 80 Bytes
Array Element(s)   = 10000 Count(s)
Total Array size   = 800000 Bytes
--------------------------------------------------------------------------------------------------------------------------------
- Sort name:                Elapsed Time (Sum/Average/Min/Max) [sec.]             Swapped (Sum/Average/Min/Max) [count(s)]
--------------------------------------------------------------------------------------------------------------------------------
[C-Library sort](Quick sort)
- qsort(inline-function):   0.006950000/  0.000992857/  0.000430000/  0.001351000
--------------------------------------------------------------------------------------------------------------------------------
[STL sort](Intro sort)
- std::sort(function):      0.009443000/  0.001349000/  0.000660000/  0.001853000
- std::sort(inline-func):   0.007961000/  0.001137286/  0.000476000/  0.001660000
- std::sort(functor):       0.008036000/  0.001148000/  0.000502000/  0.001642000
- std::sort(lambda):        0.008032000/  0.001147429/  0.000493000/  0.001709000
--------------------------------------------------------------------------------------------------------------------------------
[STL stable sort](Merge sort) *Not In-place sort
- std::stable_sort<S>:      0.013722000/  0.001960286/  0.001346000/  0.002451000
--------------------------------------------------------------------------------------------------------------------------------
[Exchange sorts]
- Bubble sort<S>:           4.937690000/  0.705384286/  0.000014000/  1.422559000  162065650/   23152235/          0/   49985001
- Shaker sort<S>:           4.933233000/  0.704747571/  0.000014000/  1.466271000  162065650/   23152235/          0/   49985001
- Odd-Even sort<S>:         3.700825000/  0.528689286/  0.000120000/  0.741327000  162065650/   23152235/          0/   49985001
- Shear sort:               0.084341000/  0.012048714/  0.004429000/  0.016426000   10101582/    1443083/     494802/    1913805
- Comb sort:                0.012054000/  0.001722000/  0.000482000/  0.002492000     256100/      36585/          0/      58579
- Gnome sort<S>:            4.743588000/  0.677655429/  0.000020000/  1.466890000  162065650/   23152235/          0/   49985001
--------------------------------------------------------------------------------------------------------------------------------
[Partition-exchange sorts]
- Quick sort:               0.007290000/  0.001041429/  0.000264000/  0.001641000     151211/      21601/       3333/      35947
--------------------------------------------------------------------------------------------------------------------------------
[Selection sorts]
- Selection sort:           0.523393000/  0.074770429/  0.073963000/  0.075744000      48298/       6899/          0/       9995
- Heap sort:                0.036250000/  0.005178571/  0.003904000/  0.006799000    1060132/     151447/     116627/     218680
--------------------------------------------------------------------------------------------------------------------------------
[Insertion sorts]
- Insertion sort<S>:        1.826776000/  0.260968000/  0.000018000/  0.566788000      59952/       8564/          0/       9999
- Shell sort:               0.015514000/  0.002216286/  0.000173000/  0.003491000     238621/      34088/          0/      49801
--------------------------------------------------------------------------------------------------------------------------------
[Merge sorts]
- Inplace-Merge sort<S>:    1.618045000/  0.231149286/  0.000037000/  0.497475000     303529/      43361/          0/      60442
--------------------------------------------------------------------------------------------------------------------------------
[Hybrid sorts]
- Intro sort:               0.006707000/  0.000958143/  0.000015000/  0.001631000     134732/      19247/          0/      34513
--------------------------------------------------------------------------------------------------------------------------------
[Distribution sorts] *Not In-place sort
- Radix sort<S>:            0.001943000/  0.000277571/  0.000125000/  0.000405000      50002/       7143/          0/      10000
--------------------------------------------------------------------------------------------------------------------------------
* <S> ... Stable sort algorithm.

--------------------------------------------------------------------------------------------------------------------------------
Functoin variation test for sort and search.
--------------------------------------------------------------------------------------------------------------------------------

[Variation test for sort(intro-sort)]
(result=31094)
(result1=31094)
(result3=31094)
(result4=31094)
(result5=31094)
(result6=31094)
(result8=31094)
(result9=31094)
(result10=31094)
(result11=31462)

[Variation test for linear-search]
target=-1
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x0)
    (data1_def=0x0)
    (data2_def=0x0)
    (data3_def=0x0)
    (data4_def=0x0)
    (data5_def=0x0)
    (data8_def=0x0)
    (data9_def=0x0)
    (data10_def=0x0)
    (data11_def=0x0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x0)
    (data1=0x0)
    (data2=0x0)
    (data3=0x0)
    (data4=0x0)
    (data5=0x0)
    (data8=0x0)
    (data9=0x0)
    (data10=0x0)
    (data11=0x0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x0)
    (data1_val=0x0)
    (data2_val=0x0)
    (data3_val=0x0)
    (data4_val=0x0)
    (data5_val=0x0)
    (data8_val=0x0)
    (data9_val=0x0)
    (data10_val=0x0)
    (data11_val=0x0)
target=-1, linearSearch=nullptr
target=0
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffde8ee0)
    (data1_def=0xffde8ee0)
    (data2_def=0xffde8ee0)
    (data3_def=0xffde8ee0)
    (data4_def=0xffde8ee0)
    (data5_def=0xffde8ee0)
    (data8_def=0xffde8ee0)
    (data9_def=0xffde8ee0)
    (data10_def=0xffde8ee0)
    (data11_def=0xffde8ee0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffde8ee0)
    (data1=0xffde8ee0)
    (data2=0xffde8ee0)
    (data3=0xffde8ee0)
    (data4=0xffde8ee0)
    (data5=0xffde8ee0)
    (data8=0xffde8ee0)
    (data9=0xffde8ee0)
    (data10=0xffde8ee0)
    (data11=0xffde8ee0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffde8ee0)
    (data1_val=0xffde8ee0)
    (data2_val=0xffde8ee0)
    (data3_val=0xffde8ee0)
    (data4_val=0xffde8ee0)
    (data5_val=0xffde8ee0)
    (data8_val=0xffde8ee0)
    (data9_val=0xffde8ee0)
    (data10_val=0xffde8ee0)
    (data11_val=0xffde8ee0)
target=0, linearSearch=[0, 1276]
target=2
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdde620)
    (data1_def=0xffdde620)
    (data2_def=0xffdde620)
    (data3_def=0xffdde620)
    (data4_def=0xffdde620)
    (data5_def=0xffdde620)
    (data8_def=0xffdde620)
    (data9_def=0xffdde620)
    (data10_def=0xffdde620)
    (data11_def=0xffdde620)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdde620)
    (data1=0xffdde620)
    (data2=0xffdde620)
    (data3=0xffdde620)
    (data4=0xffdde620)
    (data5=0xffdde620)
    (data8=0xffdde620)
    (data9=0xffdde620)
    (data10=0xffdde620)
    (data11=0xffdde620)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdde620)
    (data1_val=0xffdde620)
    (data2_val=0xffdde620)
    (data3_val=0xffdde620)
    (data4_val=0xffdde620)
    (data5_val=0xffdde620)
    (data8_val=0xffdde620)
    (data9_val=0xffdde620)
    (data10_val=0xffdde620)
    (data11_val=0xffdde620)
target=2, linearSearch=[2, 736]
target=6
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffddff70)
    (data1_def=0xffddff70)
    (data2_def=0xffddff70)
    (data3_def=0xffddff70)
    (data4_def=0xffddff70)
    (data5_def=0xffddff70)
    (data8_def=0xffddff70)
    (data9_def=0xffddff70)
    (data10_def=0xffddff70)
    (data11_def=0xffddff70)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffddff70)
    (data1=0xffddff70)
    (data2=0xffddff70)
    (data3=0xffddff70)
    (data4=0xffddff70)
    (data5=0xffddff70)
    (data8=0xffddff70)
    (data9=0xffddff70)
    (data10=0xffddff70)
    (data11=0xffddff70)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffddff70)
    (data1_val=0xffddff70)
    (data2_val=0xffddff70)
    (data3_val=0xffddff70)
    (data4_val=0xffddff70)
    (data5_val=0xffddff70)
    (data8_val=0xffddff70)
    (data9_val=0xffddff70)
    (data10_val=0xffddff70)
    (data11_val=0xffddff70)
target=6, linearSearch=[6, 817]
target=14
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdd3bd0)
    (data1_def=0xffdd3bd0)
    (data2_def=0xffdd3bd0)
    (data3_def=0xffdd3bd0)
    (data4_def=0xffdd3bd0)
    (data5_def=0xffdd3bd0)
    (data8_def=0xffdd3bd0)
    (data9_def=0xffdd3bd0)
    (data10_def=0xffdd3bd0)
    (data11_def=0xffdd3bd0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdd3bd0)
    (data1=0xffdd3bd0)
    (data2=0xffdd3bd0)
    (data3=0xffdd3bd0)
    (data4=0xffdd3bd0)
    (data5=0xffdd3bd0)
    (data8=0xffdd3bd0)
    (data9=0xffdd3bd0)
    (data10=0xffdd3bd0)
    (data11=0xffdd3bd0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdd3bd0)
    (data1_val=0xffdd3bd0)
    (data2_val=0xffdd3bd0)
    (data3_val=0xffdd3bd0)
    (data4_val=0xffdd3bd0)
    (data5_val=0xffdd3bd0)
    (data8_val=0xffdd3bd0)
    (data9_val=0xffdd3bd0)
    (data10_val=0xffdd3bd0)
    (data11_val=0xffdd3bd0)
target=14, linearSearch=[14, 191]
target=30
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffe167a0)
    (data1_def=0xffe167a0)
    (data2_def=0xffe167a0)
    (data3_def=0xffe167a0)
    (data4_def=0xffe167a0)
    (data5_def=0xffe167a0)
    (data8_def=0xffe167a0)
    (data9_def=0xffe167a0)
    (data10_def=0xffe167a0)
    (data11_def=0xffe167a0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffe167a0)
    (data1=0xffe167a0)
    (data2=0xffe167a0)
    (data3=0xffe167a0)
    (data4=0xffe167a0)
    (data5=0xffe167a0)
    (data8=0xffe167a0)
    (data9=0xffe167a0)
    (data10=0xffe167a0)
    (data11=0xffe167a0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffe167a0)
    (data1_val=0xffe167a0)
    (data2_val=0xffe167a0)
    (data3_val=0xffe167a0)
    (data4_val=0xffe167a0)
    (data5_val=0xffe167a0)
    (data8_val=0xffe167a0)
    (data9_val=0xffe167a0)
    (data10_val=0xffe167a0)
    (data11_val=0xffe167a0)
target=30, linearSearch=[30, 3608]
target=62
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdfb720)
    (data1_def=0xffdfb720)
    (data2_def=0xffdfb720)
    (data3_def=0xffdfb720)
    (data4_def=0xffdfb720)
    (data5_def=0xffdfb720)
    (data8_def=0xffdfb720)
    (data9_def=0xffdfb720)
    (data10_def=0xffdfb720)
    (data11_def=0xffdfb720)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdfb720)
    (data1=0xffdfb720)
    (data2=0xffdfb720)
    (data3=0xffdfb720)
    (data4=0xffdfb720)
    (data5=0xffdfb720)
    (data8=0xffdfb720)
    (data9=0xffdfb720)
    (data10=0xffdfb720)
    (data11=0xffdfb720)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdfb720)
    (data1_val=0xffdfb720)
    (data2_val=0xffdfb720)
    (data3_val=0xffdfb720)
    (data4_val=0xffdfb720)
    (data5_val=0xffdfb720)
    (data8_val=0xffdfb720)
    (data9_val=0xffdfb720)
    (data10_val=0xffdfb720)
    (data11_val=0xffdfb720)
target=62, linearSearch=[62, 2224]
target=126
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffdeec50)
    (data1_def=0xffdeec50)
    (data2_def=0xffdeec50)
    (data3_def=0xffdeec50)
    (data4_def=0xffdeec50)
    (data5_def=0xffdeec50)
    (data8_def=0xffdeec50)
    (data9_def=0xffdeec50)
    (data10_def=0xffdeec50)
    (data11_def=0xffdeec50)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffdeec50)
    (data1=0xffdeec50)
    (data2=0xffdeec50)
    (data3=0xffdeec50)
    (data4=0xffdeec50)
    (data5=0xffdeec50)
    (data8=0xffdeec50)
    (data9=0xffdeec50)
    (data10=0xffdeec50)
    (data11=0xffdeec50)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffdeec50)
    (data1_val=0xffdeec50)
    (data2_val=0xffdeec50)
    (data3_val=0xffdeec50)
    (data4_val=0xffdeec50)
    (data5_val=0xffdeec50)
    (data8_val=0xffdeec50)
    (data9_val=0xffdeec50)
    (data10_val=0xffdeec50)
    (data11_val=0xffdeec50)
target=126, linearSearch=[126, 1575]
target=254
  linearSearchValue(*array_shuffle1, target);
    (data_def=0xffe442e0)
    (data1_def=0xffe442e0)
    (data2_def=0xffe442e0)
    (data3_def=0xffe442e0)
    (data4_def=0xffe442e0)
    (data5_def=0xffe442e0)
    (data8_def=0xffe442e0)
    (data9_def=0xffe442e0)
    (data10_def=0xffe442e0)
    (data11_def=0xffe442e0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0xffe442e0)
    (data1=0xffe442e0)
    (data2=0xffe442e0)
    (data3=0xffe442e0)
    (data4=0xffe442e0)
    (data5=0xffe442e0)
    (data8=0xffe442e0)
    (data9=0xffe442e0)
    (data10=0xffe442e0)
    (data11=0xffe442e0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0xffe442e0)
    (data1_val=0xffe442e0)
    (data2_val=0xffe442e0)
    (data3_val=0xffe442e0)
    (data4_val=0xffe442e0)
    (data5_val=0xffe442e0)
    (data8_val=0xffe442e0)
    (data9_val=0xffe442e0)
    (data10_val=0xffe442e0)
    (data11_val=0xffe442e0)
target=254, linearSearch=[254, 5948]

[Variation test for binary-search]
target=-1
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x0)
    (data1_def=0x0)
    (data2_def=0x0)
    (data3_def=0x0)
    (data4_def=0x0)
    (data5_def=0x0)
    (data8_def=0x0)
    (data9_def=0x0)
   (data10_def=0x0)
    (data11_def=0x0)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x0)
    (data1=0x0)
    (data2=0x0)
    (data3=0x0)
    (data4=0x0)
    (data5=0x0)
    (data8=0x0)
    (data9=0x0)
    (data10=0x0)
    (data11=0x0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x0)
    (data1_val=0x0)
    (data2_val=0x0)
    (data3_val=0x0)
    (data4_val=0x0)
    (data5_val=0x0)
    (data8_val=0x0)
    (data9_val=0x0)
    (data10_val=0x0)
    (data11_val=0x0)
target=-1, binarySearch=nullptr
target=0
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd0020)
    (data1_def=0xffdd0020)
    (data2_def=0xffdd0020)
    (data3_def=0xffdd0020)
    (data4_def=0xffdd0020)
    (data5_def=0xffdd0020)
    (data8_def=0xffdd0020)
    (data9_def=0xffdd0020)
   (data10_def=0xffdd0020)
    (data11_def=0xffdd0020)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd0020)
    (data1=0xffdd0020)
    (data2=0xffdd0020)
    (data3=0xffdd0020)
    (data4=0xffdd0020)
    (data5=0xffdd0020)
    (data8=0xffdd0020)
    (data9=0xffdd0020)
    (data10=0xffdd0020)
    (data11=0xffdd0020)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd0020)
    (data1_val=0xffdd0020)
    (data2_val=0xffdd0020)
    (data3_val=0xffdd0020)
    (data4_val=0xffdd0020)
    (data5_val=0xffdd0020)
    (data8_val=0xffdd0020)
    (data9_val=0xffdd0020)
    (data10_val=0xffdd0020)
    (data11_val=0xffdd0020)
target=0, binarySearch=[0, 1276]
target=2
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd0200)
    (data1_def=0xffdd0200)
    (data2_def=0xffdd0200)
    (data3_def=0xffdd0200)
    (data4_def=0xffdd0200)
    (data5_def=0xffdd0200)
    (data8_def=0xffdd0200)
    (data9_def=0xffdd0200)
   (data10_def=0xffdd0200)
    (data11_def=0xffdd0200)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd0200)
    (data1=0xffdd0200)
    (data2=0xffdd0200)
    (data3=0xffdd0200)
    (data4=0xffdd0200)
    (data5=0xffdd0200)
    (data8=0xffdd0200)
    (data9=0xffdd0200)
    (data10=0xffdd0200)
    (data11=0xffdd0200)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd0200)
    (data1_val=0xffdd0200)
    (data2_val=0xffdd0200)
    (data3_val=0xffdd0200)
    (data4_val=0xffdd0200)
    (data5_val=0xffdd0200)
    (data8_val=0xffdd0200)
    (data9_val=0xffdd0200)
    (data10_val=0xffdd0200)
    (data11_val=0xffdd0200)
target=2, binarySearch=[2, 4297]
target=6
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd05c0)
    (data1_def=0xffdd05c0)
    (data2_def=0xffdd05c0)
    (data3_def=0xffdd05c0)
    (data4_def=0xffdd05c0)
    (data5_def=0xffdd05c0)
    (data8_def=0xffdd05c0)
    (data9_def=0xffdd05c0)
   (data10_def=0xffdd05c0)
    (data11_def=0xffdd05c0)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd05c0)
    (data1=0xffdd05c0)
    (data2=0xffdd05c0)
    (data3=0xffdd05c0)
    (data4=0xffdd05c0)
    (data5=0xffdd05c0)
    (data8=0xffdd05c0)
    (data9=0xffdd05c0)
    (data10=0xffdd05c0)
    (data11=0xffdd05c0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd05c0)
    (data1_val=0xffdd05c0)
    (data2_val=0xffdd05c0)
    (data3_val=0xffdd05c0)
    (data4_val=0xffdd05c0)
    (data5_val=0xffdd05c0)
    (data8_val=0xffdd05c0)
    (data9_val=0xffdd05c0)
    (data10_val=0xffdd05c0)
    (data11_val=0xffdd05c0)
target=6, binarySearch=[6, 1745]
target=14
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd0d40)
    (data1_def=0xffdd0d40)
    (data2_def=0xffdd0d40)
    (data3_def=0xffdd0d40)
    (data4_def=0xffdd0d40)
    (data5_def=0xffdd0d40)
    (data8_def=0xffdd0d40)
    (data9_def=0xffdd0d40)
   (data10_def=0xffdd0d40)
    (data11_def=0xffdd0d40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd0d40)
    (data1=0xffdd0d40)
    (data2=0xffdd0d40)
    (data3=0xffdd0d40)
    (data4=0xffdd0d40)
    (data5=0xffdd0d40)
    (data8=0xffdd0d40)
    (data9=0xffdd0d40)
    (data10=0xffdd0d40)
    (data11=0xffdd0d40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd0d40)
    (data1_val=0xffdd0d40)
    (data2_val=0xffdd0d40)
    (data3_val=0xffdd0d40)
    (data4_val=0xffdd0d40)
    (data5_val=0xffdd0d40)
    (data8_val=0xffdd0d40)
    (data9_val=0xffdd0d40)
    (data10_val=0xffdd0d40)
    (data11_val=0xffdd0d40)
target=14, binarySearch=[14, 191]
target=30
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd1c40)
    (data1_def=0xffdd1c40)
    (data2_def=0xffdd1c40)
    (data3_def=0xffdd1c40)
    (data4_def=0xffdd1c40)
    (data5_def=0xffdd1c40)
    (data8_def=0xffdd1c40)
    (data9_def=0xffdd1c40)
   (data10_def=0xffdd1c40)
    (data11_def=0xffdd1c40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd1c40)
    (data1=0xffdd1c40)
    (data2=0xffdd1c40)
    (data3=0xffdd1c40)
    (data4=0xffdd1c40)
    (data5=0xffdd1c40)
    (data8=0xffdd1c40)
    (data9=0xffdd1c40)
    (data10=0xffdd1c40)
    (data11=0xffdd1c40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd1c40)
    (data1_val=0xffdd1c40)
    (data2_val=0xffdd1c40)
    (data3_val=0xffdd1c40)
    (data4_val=0xffdd1c40)
    (data5_val=0xffdd1c40)
    (data8_val=0xffdd1c40)
    (data9_val=0xffdd1c40)
    (data10_val=0xffdd1c40)
    (data11_val=0xffdd1c40)
target=30, binarySearch=[30, 6168]
target=62
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd3a40)
    (data1_def=0xffdd3a40)
    (data2_def=0xffdd3a40)
    (data3_def=0xffdd3a40)
    (data4_def=0xffdd3a40)
    (data5_def=0xffdd3a40)
    (data8_def=0xffdd3a40)
    (data9_def=0xffdd3a40)
   (data10_def=0xffdd3a40)
    (data11_def=0xffdd3a40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd3a40)
    (data1=0xffdd3a40)
    (data2=0xffdd3a40)
    (data3=0xffdd3a40)
    (data4=0xffdd3a40)
    (data5=0xffdd3a40)
    (data8=0xffdd3a40)
    (data9=0xffdd3a40)
    (data10=0xffdd3a40)
    (data11=0xffdd3a40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd3a40)
    (data1_val=0xffdd3a40)
    (data2_val=0xffdd3a40)
    (data3_val=0xffdd3a40)
    (data4_val=0xffdd3a40)
    (data5_val=0xffdd3a40)
    (data8_val=0xffdd3a40)
    (data9_val=0xffdd3a40)
    (data10_val=0xffdd3a40)
    (data11_val=0xffdd3a40)
target=62, binarySearch=[62, 4717]
target=126
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffdd7640)
    (data1_def=0xffdd7640)
    (data2_def=0xffdd7640)
    (data3_def=0xffdd7640)
    (data4_def=0xffdd7640)
    (data5_def=0xffdd7640)
    (data8_def=0xffdd7640)
    (data9_def=0xffdd7640)
   (data10_def=0xffdd7640)
    (data11_def=0xffdd7640)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffdd7640)
    (data1=0xffdd7640)
    (data2=0xffdd7640)
    (data3=0xffdd7640)
    (data4=0xffdd7640)
    (data5=0xffdd7640)
    (data8=0xffdd7640)
    (data9=0xffdd7640)
    (data10=0xffdd7640)
    (data11=0xffdd7640)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffdd7640)
    (data1_val=0xffdd7640)
    (data2_val=0xffdd7640)
    (data3_val=0xffdd7640)
    (data4_val=0xffdd7640)
    (data5_val=0xffdd7640)
    (data8_val=0xffdd7640)
    (data9_val=0xffdd7640)
    (data10_val=0xffdd7640)
    (data11_val=0xffdd7640)
target=126, binarySearch=[126, 2512]
target=254
  binarySearchValue(*array_shuffle1, target);
    (data_def=0xffddee40)
    (data1_def=0xffddee40)
    (data2_def=0xffddee40)
    (data3_def=0xffddee40)
    (data4_def=0xffddee40)
    (data5_def=0xffddee40)
    (data8_def=0xffddee40)
    (data9_def=0xffddee40)
   (data10_def=0xffddee40)
    (data11_def=0xffddee40)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0xffddee40)
    (data1=0xffddee40)
    (data2=0xffddee40)
    (data3=0xffddee40)
    (data4=0xffddee40)
    (data5=0xffddee40)
    (data8=0xffddee40)
    (data9=0xffddee40)
    (data10=0xffddee40)
    (data11=0xffddee40)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0xffddee40)
    (data1_val=0xffddee40)
    (data2_val=0xffddee40)
    (data3_val=0xffddee40)
    (data4_val=0xffddee40)
    (data5_val=0xffddee40)
    (data8_val=0xffddee40)
    (data9_val=0xffddee40)
    (data10_val=0xffddee40)
    (data11_val=0xffddee40)
target=254, binarySearch=[254, 8995]
============================================================
Finalize
============================================================
----- Delete array(shuffle1) -----
----- Delete array(shuffle2) -----
----- Delete array(shuffle3) -----
----- Delete array(ordered) -----
----- Delete array(reversed) -----
----- Delete array(ordered_without_both_ends) -----
----- Delete array(hard_with_quick_sort) -----


============================================================
End
============================================================
*elapsed time=22.583984000 sec.
