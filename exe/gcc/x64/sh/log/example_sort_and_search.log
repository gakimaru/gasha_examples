============================================================
Initialize
============================================================
----- Make Array(shuffle1) -----
[NG] Array is NOT ordered! [NG=5004 / record(s)=10000]
Array is stable.
----- Make Array(shuffle2) -----
[NG] Array is NOT ordered! [NG=5040 / record(s)=10000]
Array is stable.
----- Make Array(shuffle3) -----
[NG] Array is NOT ordered! [NG=4994 / record(s)=10000]
Array is stable.
----- Make Array(ordered) -----
Array is ordered. [record(s)=10000]
Array is stable.
----- Make Array(reversed) -----
[NG] Array is NOT ordered! [NG=3333 / record(s)=10000]
Array is stable.
----- Make Array(ordered_without_both_ends) -----
[NG] Array is NOT ordered! [NG=2 / record(s)=10000]
Array is stable.
----- Make Array(hard_with_quick_sort) -----
[NG] Array is NOT ordered! [NG=4943 / record(s)=10000]
Array is stable.


============================================================
Sort type: [C-Library qsort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001389117 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001235613 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001168882 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000280358 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000512618 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000332357 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002274174 sec.
Array is ordered. [record(s)=10000]
Array is stable.

============================================================
Sort type: [C-Library qsort]
* Total time       = 0.007193119 sec.
* Average time     = 0.001027588 sec.
* Min time         = 0.000280358 sec.
* Max time         = 0.002274174 sec.
============================================================


============================================================
Sort type: [STL std::sort(with function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000987103 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000950163 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000949838 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000430395 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000515001 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.002046573 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000952005 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with function)]
* Total time       = 0.006831078 sec.
* Average time     = 0.000975868 sec.
* Min time         = 0.000430395 sec.
* Max time         = 0.002046573 sec.
============================================================


============================================================
Sort type: [STL std::sort(with inline function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000821034 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000782143 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000983854 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000276025 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000328024 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000280684 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000831217 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with inline function)]
* Total time       = 0.004302981 sec.
* Average time     = 0.000614712 sec.
* Min time         = 0.000276025 sec.
* Max time         = 0.000983854 sec.
============================================================


============================================================
Sort type: [STL std::sort(with functor)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000821250 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000770769 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000839125 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000284366 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000395730 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000292924 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000790918 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with functor)]
* Total time       = 0.004195082 sec.
* Average time     = 0.000599297 sec.
* Min time         = 0.000284366 sec.
* Max time         = 0.000839125 sec.
============================================================


============================================================
Sort type: [STL std::sort(with lamda)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000783552 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000769144 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000779327 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000288916 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000317949 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000284367 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000825258 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with lamda)]
* Total time       = 0.004048513 sec.
* Average time     = 0.000578359 sec.
* Min time         = 0.000284367 sec.
* Max time         = 0.000825258 sec.
============================================================


============================================================
Sort type: [STL std::stable_sort *Not inplace]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001364634 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001265729 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001269520 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000939764 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001011045 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000997178 sec.
Array is ordered. [record(s)=10000]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001266812 sec.
Array is ordered. [record(s)=10000]
Array is stable.

============================================================
Sort type: [STL std::stable_sort *Not inplace]
* Total time       = 0.008114682 sec.
* Average time     = 0.001159240 sec.
* Min time         = 0.000939764 sec.
* Max time         = 0.001364634 sec.
============================================================


============================================================
Sort type: [Bubble sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.326227310 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.386292774 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.333820708 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000050157 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.509599831 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.104723354 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.488257394 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Bubble sort]
* Total time       = 2.148971528 sec.
* Average time     = 0.306995933 sec.
* Min time         = 0.000050157 sec.
* Max time         = 0.509599831 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Shaker sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.363629576 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.410554165 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.483728545 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000028490 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.703927775 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000228901 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.586598913 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Shaker sort]
* Total time       = 2.548696365 sec.
* Average time     = 0.364099481 sec.
* Min time         = 0.000028490 sec.
* Max time         = 0.703927775 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Odd-Even sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.397025362 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.252387241 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.222504385 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000018958 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.329065775 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.055859439 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.336719405 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Odd-Even sort]
* Total time       = 1.593580565 sec.
* Average time     = 0.227654366 sec.
* Min time         = 0.000018958 sec.
* Max time         = 0.397025362 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Shear sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.012101338 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1907513 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.011967226 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1900610 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.020335075 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1913805 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.002562548 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=494802 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.008736605 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1474414 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.002980161 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=514605 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.012178144 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1895833 count(s)]

============================================================
Sort type: [Shear sort]
* Total time       = 0.070861097 sec.
* Average time     = 0.010123014 sec.
* Min time         = 0.002562548 sec.
* Max time         = 0.020335075 sec.
* Total Swapped    =  10101582 count(s)
* Average  Swapped =   1443083 count(s)
* Min Swapped      =    494802 count(s)
* Max Swapped      =   1913805 count(s)
============================================================


============================================================
Sort type: [Comb sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001259987 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=56744 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001222830 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=57503 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001236046 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=57626 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000537534 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000727545 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=18345 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000650956 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=7303 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001300719 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=58579 count(s)]

============================================================
Sort type: [Comb sort]
* Total time       = 0.006935617 sec.
* Average time     = 0.000990802 sec.
* Min time         = 0.000537534 sec.
* Max time         = 0.001300719 sec.
* Total Swapped    =    256100 count(s)
* Average  Swapped =     36585 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     58579 count(s)
============================================================


============================================================
Sort type: [Gnome sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.299586015 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24928612 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.282149852 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=24785773 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.338936056 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=25072530 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000034124 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.617310062 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=49985001 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000208643 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=19995 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.419120692 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=37273739 count(s)]

============================================================
Sort type: [Gnome sort]
* Total time       = 1.957345444 sec.
* Average time     = 0.279620778 sec.
* Min time         = 0.000034124 sec.
* Max time         = 0.617310062 sec.
* Total Swapped    = 162065650 count(s)
* Average  Swapped =  23152235 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =  49985001 count(s)
============================================================


============================================================
Sort type: [Quick sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001085468 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33316 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001213622 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33617 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000910731 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=33331 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000238435 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=3333 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000291624 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=8333 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000227927 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=3334 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000960237 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=35947 count(s)]

============================================================
Sort type: [Quick sort]
* Total time       = 0.004928044 sec.
* Average time     = 0.000704006 sec.
* Min time         = 0.000227927 sec.
* Max time         = 0.001213622 sec.
* Total Swapped    =    151211 count(s)
* Average  Swapped =     21601 count(s)
* Min Swapped      =      3333 count(s)
* Max Swapped      =     35947 count(s)
============================================================


============================================================
Sort type: [Selection sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.128750103 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9987 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.120778308 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9993 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.103961469 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9995 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.107134024 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.089660487 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=8333 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.109596909 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.087512194 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=9987 count(s)]

============================================================
Sort type: [Selection sort]
* Total time       = 0.747393494 sec.
* Average time     = 0.106770499 sec.
* Min time         = 0.087512194 sec.
* Max time         = 0.128750103 sec.
* Total Swapped    =     48298 count(s)
* Average  Swapped =      6899 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      9995 count(s)
============================================================


============================================================
Sort type: [Heap sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001969225 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129453 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002454218 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129590 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.002011473 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=129406 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.003713990 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=218680 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.003314468 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=116627 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.004114377 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=213143 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001867610 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=123233 count(s)]

============================================================
Sort type: [Heap sort]
* Total time       = 0.019445361 sec.
* Average time     = 0.002777909 sec.
* Min time         = 0.001867610 sec.
* Max time         = 0.004114377 sec.
* Total Swapped    =   1060132 count(s)
* Average  Swapped =    151447 count(s)
* Min Swapped      =    116627 count(s)
* Max Swapped      =    218680 count(s)
============================================================


============================================================
Sort type: [Insertion sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.209725875 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9988 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.172099149 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9992 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.177635034 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9988 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000036399 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.416381891 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000160437 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.256243793 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9986 count(s)]

============================================================
Sort type: [Insertion sort]
* Total time       = 1.232282578 sec.
* Average time     = 0.176040368 sec.
* Min time         = 0.000036399 sec.
* Max time         = 0.416381891 sec.
* Total Swapped    =     59952 count(s)
* Average  Swapped =      8564 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =      9999 count(s)
============================================================


============================================================
Sort type: [Shell sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.001513263 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=48881 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.002235608 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=48400 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001528646 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=49161 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000161845 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000557684 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=37222 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000230743 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=5156 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001435808 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=49801 count(s)]

============================================================
Sort type: [Shell sort]
* Total time       = 0.007663597 sec.
* Average time     = 0.001094800 sec.
* Min time         = 0.000161845 sec.
* Max time         = 0.002235608 sec.
* Total Swapped    =    238621 count(s)
* Average  Swapped =     34088 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     49801 count(s)
============================================================


============================================================
Sort type: [Inplace Merge sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.118129853 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58247 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.130194793 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58256 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.101898539 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58341 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000041815 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.214511465 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=60442 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000186003 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10006 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.198063707 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=58237 count(s)]

============================================================
Sort type: [Inplace Merge sort]
* Total time       = 0.763026175 sec.
* Average time     = 0.109003739 sec.
* Min time         = 0.000041815 sec.
* Max time         = 0.214511465 sec.
* Total Swapped    =    303529 count(s)
* Average  Swapped =     43361 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     60442 count(s)
============================================================


============================================================
Sort type: [Intro sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000822984 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=31094 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000839016 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=30961 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000836416 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=31118 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000026324 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000199869 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=6022 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000183728 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=1024 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.002141686 sec.
Array is ordered. [record(s)=10000]
Array is NOT STABLE.
[swapped=34513 count(s)]

============================================================
Sort type: [Intro sort]
* Total time       = 0.005050023 sec.
* Average time     = 0.000721432 sec.
* Min time         = 0.000026324 sec.
* Max time         = 0.002141686 sec.
* Total Swapped    =    134732 count(s)
* Average  Swapped =     19247 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     34513 count(s)
============================================================


============================================================
Sort type: [Radix sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000658864 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000415879 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000448487 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000123821 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000191095 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=10000 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000125013 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=4 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000370273 sec.
Array is ordered. [record(s)=10000]
Array is stable.
[swapped=9999 count(s)]

============================================================
Sort type: [Radix sort]
* Total time       = 0.002333432 sec.
* Average time     = 0.000333347 sec.
* Min time         = 0.000123821 sec.
* Max time         = 0.000658864 sec.
* Total Swapped    =     50002 count(s)
* Average  Swapped =      7143 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =     10000 count(s)
============================================================


============================================================
Result(Summary)
============================================================
Array Element size = 80 Bytes
Array Element(s)   = 10000 Count(s)
Total Array size   = 800000 Bytes
--------------------------------------------------------------------------------------------------------------------------------
- Sort name:                Elapsed Time (Sum/Average/Min/Max) [sec.]             Swapped (Sum/Average/Min/Max) [count(s)]
--------------------------------------------------------------------------------------------------------------------------------
[C-Library sort](Quick sort)
- qsort(inline-function):   0.007193119/  0.001027588/  0.000280358/  0.002274174
--------------------------------------------------------------------------------------------------------------------------------
[STL sort](Intro sort)
- std::sort(function):      0.006831078/  0.000975868/  0.000430395/  0.002046573
- std::sort(inline-func):   0.004302981/  0.000614712/  0.000276025/  0.000983854
- std::sort(functor):       0.004195082/  0.000599297/  0.000284366/  0.000839125
- std::sort(lambda):        0.004048513/  0.000578359/  0.000284367/  0.000825258
--------------------------------------------------------------------------------------------------------------------------------
[STL stable sort](Merge sort) *Not In-place sort
- std::stable_sort<S>:      0.008114682/  0.001159240/  0.000939764/  0.001364634
--------------------------------------------------------------------------------------------------------------------------------
[Exchange sorts]
- Bubble sort<S>:           2.148971528/  0.306995933/  0.000050157/  0.509599831  162065650/   23152235/          0/   49985001
- Shaker sort<S>:           2.548696365/  0.364099481/  0.000028490/  0.703927775  162065650/   23152235/          0/   49985001
- Odd-Even sort<S>:         1.593580565/  0.227654366/  0.000018958/  0.397025362  162065650/   23152235/          0/   49985001
- Shear sort:               0.070861097/  0.010123014/  0.002562548/  0.020335075   10101582/    1443083/     494802/    1913805
- Comb sort:                0.006935617/  0.000990802/  0.000537534/  0.001300719     256100/      36585/          0/      58579
- Gnome sort<S>:            1.957345444/  0.279620778/  0.000034124/  0.617310062  162065650/   23152235/          0/   49985001
--------------------------------------------------------------------------------------------------------------------------------
[Partition-exchange sorts]
- Quick sort:               0.004928044/  0.000704006/  0.000227927/  0.001213622     151211/      21601/       3333/      35947
--------------------------------------------------------------------------------------------------------------------------------
[Selection sorts]
- Selection sort:           0.747393494/  0.106770499/  0.087512194/  0.128750103      48298/       6899/          0/       9995
- Heap sort:                0.019445361/  0.002777909/  0.001867610/  0.004114377    1060132/     151447/     116627/     218680
--------------------------------------------------------------------------------------------------------------------------------
[Insertion sorts]
- Insertion sort<S>:        1.232282578/  0.176040368/  0.000036399/  0.416381891      59952/       8564/          0/       9999
- Shell sort:               0.007663597/  0.001094800/  0.000161845/  0.002235608     238621/      34088/          0/      49801
--------------------------------------------------------------------------------------------------------------------------------
[Merge sorts]
- Inplace-Merge sort<S>:    0.763026175/  0.109003739/  0.000041815/  0.214511465     303529/      43361/          0/      60442
--------------------------------------------------------------------------------------------------------------------------------
[Hybrid sorts]
- Intro sort:               0.005050023/  0.000721432/  0.000026324/  0.002141686     134732/      19247/          0/      34513
--------------------------------------------------------------------------------------------------------------------------------
[Distribution sorts] *Not In-place sort
- Radix sort<S>:            0.002333432/  0.000333347/  0.000123821/  0.000658864      50002/       7143/          0/      10000
--------------------------------------------------------------------------------------------------------------------------------
* <S> ... Stable sort algorithm.

--------------------------------------------------------------------------------------------------------------------------------
Functoin variation test for sort and search.
--------------------------------------------------------------------------------------------------------------------------------

[Variation test for sort(intro-sort)]
(result=31094)
(result1=31094)
(result3=31094)
(result4=31094)
(result5=31094)
(result6=31094)
(result8=31094)
(result9=31094)
(result10=31094)
(result11=31462)

[Variation test for linear-search]
target=-1
  linearSearchValue(*array_shuffle1, target);
    (data_def=(nil))
    (data1_def=(nil))
    (data2_def=(nil))
    (data3_def=(nil))
    (data4_def=(nil))
    (data5_def=(nil))
    (data8_def=(nil))
    (data9_def=(nil))
    (data10_def=(nil))
    (data11_def=(nil))
  linearSearch(*array_shuffle1, search_predicate);
    (data=(nil))
    (data1=(nil))
    (data2=(nil))
    (data3=(nil))
    (data4=(nil))
    (data5=(nil))
    (data8=(nil))
    (data9=(nil))
    (data10=(nil))
    (data11=(nil))
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=(nil))
    (data1_val=(nil))
    (data2_val=(nil))
    (data3_val=(nil))
    (data4_val=(nil))
    (data5_val=(nil))
    (data8_val=(nil))
    (data9_val=(nil))
    (data10_val=(nil))
    (data11_val=(nil))
target=-1, linearSearch=nullptr
target=0
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bd0ed0)
    (data1_def=0x7fbbe1bd0ed0)
    (data2_def=0x7fbbe1bd0ed0)
    (data3_def=0x7fbbe1bd0ed0)
    (data4_def=0x7fbbe1bd0ed0)
    (data5_def=0x7fbbe1bd0ed0)
    (data8_def=0x7fbbe1bd0ed0)
    (data9_def=0x7fbbe1bd0ed0)
    (data10_def=0x7fbbe1bd0ed0)
    (data11_def=0x7fbbe1bd0ed0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1bd0ed0)
    (data1=0x7fbbe1bd0ed0)
    (data2=0x7fbbe1bd0ed0)
    (data3=0x7fbbe1bd0ed0)
    (data4=0x7fbbe1bd0ed0)
    (data5=0x7fbbe1bd0ed0)
    (data8=0x7fbbe1bd0ed0)
    (data9=0x7fbbe1bd0ed0)
    (data10=0x7fbbe1bd0ed0)
    (data11=0x7fbbe1bd0ed0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1bd0ed0)
    (data1_val=0x7fbbe1bd0ed0)
    (data2_val=0x7fbbe1bd0ed0)
    (data3_val=0x7fbbe1bd0ed0)
    (data4_val=0x7fbbe1bd0ed0)
    (data5_val=0x7fbbe1bd0ed0)
    (data8_val=0x7fbbe1bd0ed0)
    (data9_val=0x7fbbe1bd0ed0)
    (data10_val=0x7fbbe1bd0ed0)
    (data11_val=0x7fbbe1bd0ed0)
target=0, linearSearch=[0, 1276]
target=2
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bc6610)
    (data1_def=0x7fbbe1bc6610)
    (data2_def=0x7fbbe1bc6610)
    (data3_def=0x7fbbe1bc6610)
    (data4_def=0x7fbbe1bc6610)
    (data5_def=0x7fbbe1bc6610)
    (data8_def=0x7fbbe1bc6610)
    (data9_def=0x7fbbe1bc6610)
    (data10_def=0x7fbbe1bc6610)
    (data11_def=0x7fbbe1bc6610)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1bc6610)
    (data1=0x7fbbe1bc6610)
    (data2=0x7fbbe1bc6610)
    (data3=0x7fbbe1bc6610)
    (data4=0x7fbbe1bc6610)
    (data5=0x7fbbe1bc6610)
    (data8=0x7fbbe1bc6610)
    (data9=0x7fbbe1bc6610)
    (data10=0x7fbbe1bc6610)
    (data11=0x7fbbe1bc6610)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1bc6610)
    (data1_val=0x7fbbe1bc6610)
    (data2_val=0x7fbbe1bc6610)
    (data3_val=0x7fbbe1bc6610)
    (data4_val=0x7fbbe1bc6610)
    (data5_val=0x7fbbe1bc6610)
    (data8_val=0x7fbbe1bc6610)
    (data9_val=0x7fbbe1bc6610)
    (data10_val=0x7fbbe1bc6610)
    (data11_val=0x7fbbe1bc6610)
target=2, linearSearch=[2, 736]
target=6
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bc7f60)
    (data1_def=0x7fbbe1bc7f60)
    (data2_def=0x7fbbe1bc7f60)
    (data3_def=0x7fbbe1bc7f60)
    (data4_def=0x7fbbe1bc7f60)
    (data5_def=0x7fbbe1bc7f60)
    (data8_def=0x7fbbe1bc7f60)
    (data9_def=0x7fbbe1bc7f60)
    (data10_def=0x7fbbe1bc7f60)
    (data11_def=0x7fbbe1bc7f60)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1bc7f60)
    (data1=0x7fbbe1bc7f60)
    (data2=0x7fbbe1bc7f60)
    (data3=0x7fbbe1bc7f60)
    (data4=0x7fbbe1bc7f60)
    (data5=0x7fbbe1bc7f60)
    (data8=0x7fbbe1bc7f60)
    (data9=0x7fbbe1bc7f60)
    (data10=0x7fbbe1bc7f60)
    (data11=0x7fbbe1bc7f60)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1bc7f60)
    (data1_val=0x7fbbe1bc7f60)
    (data2_val=0x7fbbe1bc7f60)
    (data3_val=0x7fbbe1bc7f60)
    (data4_val=0x7fbbe1bc7f60)
    (data5_val=0x7fbbe1bc7f60)
    (data8_val=0x7fbbe1bc7f60)
    (data9_val=0x7fbbe1bc7f60)
    (data10_val=0x7fbbe1bc7f60)
    (data11_val=0x7fbbe1bc7f60)
target=6, linearSearch=[6, 817]
target=14
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bbbbc0)
    (data1_def=0x7fbbe1bbbbc0)
    (data2_def=0x7fbbe1bbbbc0)
    (data3_def=0x7fbbe1bbbbc0)
    (data4_def=0x7fbbe1bbbbc0)
    (data5_def=0x7fbbe1bbbbc0)
    (data8_def=0x7fbbe1bbbbc0)
    (data9_def=0x7fbbe1bbbbc0)
    (data10_def=0x7fbbe1bbbbc0)
    (data11_def=0x7fbbe1bbbbc0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1bbbbc0)
    (data1=0x7fbbe1bbbbc0)
    (data2=0x7fbbe1bbbbc0)
    (data3=0x7fbbe1bbbbc0)
    (data4=0x7fbbe1bbbbc0)
    (data5=0x7fbbe1bbbbc0)
    (data8=0x7fbbe1bbbbc0)
    (data9=0x7fbbe1bbbbc0)
    (data10=0x7fbbe1bbbbc0)
    (data11=0x7fbbe1bbbbc0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1bbbbc0)
    (data1_val=0x7fbbe1bbbbc0)
    (data2_val=0x7fbbe1bbbbc0)
    (data3_val=0x7fbbe1bbbbc0)
    (data4_val=0x7fbbe1bbbbc0)
    (data5_val=0x7fbbe1bbbbc0)
    (data8_val=0x7fbbe1bbbbc0)
    (data9_val=0x7fbbe1bbbbc0)
    (data10_val=0x7fbbe1bbbbc0)
    (data11_val=0x7fbbe1bbbbc0)
target=14, linearSearch=[14, 191]
target=30
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bfe790)
    (data1_def=0x7fbbe1bfe790)
    (data2_def=0x7fbbe1bfe790)
    (data3_def=0x7fbbe1bfe790)
    (data4_def=0x7fbbe1bfe790)
    (data5_def=0x7fbbe1bfe790)
    (data8_def=0x7fbbe1bfe790)
    (data9_def=0x7fbbe1bfe790)
    (data10_def=0x7fbbe1bfe790)
    (data11_def=0x7fbbe1bfe790)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1bfe790)
    (data1=0x7fbbe1bfe790)
    (data2=0x7fbbe1bfe790)
    (data3=0x7fbbe1bfe790)
    (data4=0x7fbbe1bfe790)
    (data5=0x7fbbe1bfe790)
    (data8=0x7fbbe1bfe790)
    (data9=0x7fbbe1bfe790)
    (data10=0x7fbbe1bfe790)
    (data11=0x7fbbe1bfe790)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1bfe790)
    (data1_val=0x7fbbe1bfe790)
    (data2_val=0x7fbbe1bfe790)
    (data3_val=0x7fbbe1bfe790)
    (data4_val=0x7fbbe1bfe790)
    (data5_val=0x7fbbe1bfe790)
    (data8_val=0x7fbbe1bfe790)
    (data9_val=0x7fbbe1bfe790)
    (data10_val=0x7fbbe1bfe790)
    (data11_val=0x7fbbe1bfe790)
target=30, linearSearch=[30, 3608]
target=62
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1be3710)
    (data1_def=0x7fbbe1be3710)
    (data2_def=0x7fbbe1be3710)
    (data3_def=0x7fbbe1be3710)
    (data4_def=0x7fbbe1be3710)
    (data5_def=0x7fbbe1be3710)
    (data8_def=0x7fbbe1be3710)
    (data9_def=0x7fbbe1be3710)
    (data10_def=0x7fbbe1be3710)
    (data11_def=0x7fbbe1be3710)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1be3710)
    (data1=0x7fbbe1be3710)
    (data2=0x7fbbe1be3710)
    (data3=0x7fbbe1be3710)
    (data4=0x7fbbe1be3710)
    (data5=0x7fbbe1be3710)
    (data8=0x7fbbe1be3710)
    (data9=0x7fbbe1be3710)
    (data10=0x7fbbe1be3710)
    (data11=0x7fbbe1be3710)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1be3710)
    (data1_val=0x7fbbe1be3710)
    (data2_val=0x7fbbe1be3710)
    (data3_val=0x7fbbe1be3710)
    (data4_val=0x7fbbe1be3710)
    (data5_val=0x7fbbe1be3710)
    (data8_val=0x7fbbe1be3710)
    (data9_val=0x7fbbe1be3710)
    (data10_val=0x7fbbe1be3710)
    (data11_val=0x7fbbe1be3710)
target=62, linearSearch=[62, 2224]
target=126
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bd6c40)
    (data1_def=0x7fbbe1bd6c40)
    (data2_def=0x7fbbe1bd6c40)
    (data3_def=0x7fbbe1bd6c40)
    (data4_def=0x7fbbe1bd6c40)
    (data5_def=0x7fbbe1bd6c40)
    (data8_def=0x7fbbe1bd6c40)
    (data9_def=0x7fbbe1bd6c40)
    (data10_def=0x7fbbe1bd6c40)
    (data11_def=0x7fbbe1bd6c40)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1bd6c40)
    (data1=0x7fbbe1bd6c40)
    (data2=0x7fbbe1bd6c40)
    (data3=0x7fbbe1bd6c40)
    (data4=0x7fbbe1bd6c40)
    (data5=0x7fbbe1bd6c40)
    (data8=0x7fbbe1bd6c40)
    (data9=0x7fbbe1bd6c40)
    (data10=0x7fbbe1bd6c40)
    (data11=0x7fbbe1bd6c40)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1bd6c40)
    (data1_val=0x7fbbe1bd6c40)
    (data2_val=0x7fbbe1bd6c40)
    (data3_val=0x7fbbe1bd6c40)
    (data4_val=0x7fbbe1bd6c40)
    (data5_val=0x7fbbe1bd6c40)
    (data8_val=0x7fbbe1bd6c40)
    (data9_val=0x7fbbe1bd6c40)
    (data10_val=0x7fbbe1bd6c40)
    (data11_val=0x7fbbe1bd6c40)
target=126, linearSearch=[126, 1575]
target=254
  linearSearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1c2c2d0)
    (data1_def=0x7fbbe1c2c2d0)
    (data2_def=0x7fbbe1c2c2d0)
    (data3_def=0x7fbbe1c2c2d0)
    (data4_def=0x7fbbe1c2c2d0)
    (data5_def=0x7fbbe1c2c2d0)
    (data8_def=0x7fbbe1c2c2d0)
    (data9_def=0x7fbbe1c2c2d0)
    (data10_def=0x7fbbe1c2c2d0)
    (data11_def=0x7fbbe1c2c2d0)
  linearSearch(*array_shuffle1, search_predicate);
    (data=0x7fbbe1c2c2d0)
    (data1=0x7fbbe1c2c2d0)
    (data2=0x7fbbe1c2c2d0)
    (data3=0x7fbbe1c2c2d0)
    (data4=0x7fbbe1c2c2d0)
    (data5=0x7fbbe1c2c2d0)
    (data8=0x7fbbe1c2c2d0)
    (data9=0x7fbbe1c2c2d0)
    (data10=0x7fbbe1c2c2d0)
    (data11=0x7fbbe1c2c2d0)
  linearSearchValue(*array_shuffle1, target, search_predicate_val);
    (data_val=0x7fbbe1c2c2d0)
    (data1_val=0x7fbbe1c2c2d0)
    (data2_val=0x7fbbe1c2c2d0)
    (data3_val=0x7fbbe1c2c2d0)
    (data4_val=0x7fbbe1c2c2d0)
    (data5_val=0x7fbbe1c2c2d0)
    (data8_val=0x7fbbe1c2c2d0)
    (data9_val=0x7fbbe1c2c2d0)
    (data10_val=0x7fbbe1c2c2d0)
    (data11_val=0x7fbbe1c2c2d0)
target=254, linearSearch=[254, 5948]

[Variation test for binary-search]
target=-1
  binarySearchValue(*array_shuffle1, target);
    (data_def=(nil))
    (data1_def=(nil))
    (data2_def=(nil))
    (data3_def=(nil))
    (data4_def=(nil))
    (data5_def=(nil))
    (data8_def=(nil))
    (data9_def=(nil))
   (data10_def=(nil))
    (data11_def=(nil))
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=(nil))
    (data1=(nil))
    (data2=(nil))
    (data3=(nil))
    (data4=(nil))
    (data5=(nil))
    (data8=(nil))
    (data9=(nil))
    (data10=(nil))
    (data11=(nil))
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=(nil))
    (data1_val=(nil))
    (data2_val=(nil))
    (data3_val=(nil))
    (data4_val=(nil))
    (data5_val=(nil))
    (data8_val=(nil))
    (data9_val=(nil))
    (data10_val=(nil))
    (data11_val=(nil))
target=-1, binarySearch=nullptr
target=0
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bb8010)
    (data1_def=0x7fbbe1bb8010)
    (data2_def=0x7fbbe1bb8010)
    (data3_def=0x7fbbe1bb8010)
    (data4_def=0x7fbbe1bb8010)
    (data5_def=0x7fbbe1bb8010)
    (data8_def=0x7fbbe1bb8010)
    (data9_def=0x7fbbe1bb8010)
   (data10_def=0x7fbbe1bb8010)
    (data11_def=0x7fbbe1bb8010)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bb8010)
    (data1=0x7fbbe1bb8010)
    (data2=0x7fbbe1bb8010)
    (data3=0x7fbbe1bb8010)
    (data4=0x7fbbe1bb8010)
    (data5=0x7fbbe1bb8010)
    (data8=0x7fbbe1bb8010)
    (data9=0x7fbbe1bb8010)
    (data10=0x7fbbe1bb8010)
    (data11=0x7fbbe1bb8010)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bb8010)
    (data1_val=0x7fbbe1bb8010)
    (data2_val=0x7fbbe1bb8010)
    (data3_val=0x7fbbe1bb8010)
    (data4_val=0x7fbbe1bb8010)
    (data5_val=0x7fbbe1bb8010)
    (data8_val=0x7fbbe1bb8010)
    (data9_val=0x7fbbe1bb8010)
    (data10_val=0x7fbbe1bb8010)
    (data11_val=0x7fbbe1bb8010)
target=0, binarySearch=[0, 1276]
target=2
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bb81f0)
    (data1_def=0x7fbbe1bb81f0)
    (data2_def=0x7fbbe1bb81f0)
    (data3_def=0x7fbbe1bb81f0)
    (data4_def=0x7fbbe1bb81f0)
    (data5_def=0x7fbbe1bb81f0)
    (data8_def=0x7fbbe1bb81f0)
    (data9_def=0x7fbbe1bb81f0)
   (data10_def=0x7fbbe1bb81f0)
    (data11_def=0x7fbbe1bb81f0)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bb81f0)
    (data1=0x7fbbe1bb81f0)
    (data2=0x7fbbe1bb81f0)
    (data3=0x7fbbe1bb81f0)
    (data4=0x7fbbe1bb81f0)
    (data5=0x7fbbe1bb81f0)
    (data8=0x7fbbe1bb81f0)
    (data9=0x7fbbe1bb81f0)
    (data10=0x7fbbe1bb81f0)
    (data11=0x7fbbe1bb81f0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bb81f0)
    (data1_val=0x7fbbe1bb81f0)
    (data2_val=0x7fbbe1bb81f0)
    (data3_val=0x7fbbe1bb81f0)
    (data4_val=0x7fbbe1bb81f0)
    (data5_val=0x7fbbe1bb81f0)
    (data8_val=0x7fbbe1bb81f0)
    (data9_val=0x7fbbe1bb81f0)
    (data10_val=0x7fbbe1bb81f0)
    (data11_val=0x7fbbe1bb81f0)
target=2, binarySearch=[2, 4297]
target=6
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bb85b0)
    (data1_def=0x7fbbe1bb85b0)
    (data2_def=0x7fbbe1bb85b0)
    (data3_def=0x7fbbe1bb85b0)
    (data4_def=0x7fbbe1bb85b0)
    (data5_def=0x7fbbe1bb85b0)
    (data8_def=0x7fbbe1bb85b0)
    (data9_def=0x7fbbe1bb85b0)
   (data10_def=0x7fbbe1bb85b0)
    (data11_def=0x7fbbe1bb85b0)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bb85b0)
    (data1=0x7fbbe1bb85b0)
    (data2=0x7fbbe1bb85b0)
    (data3=0x7fbbe1bb85b0)
    (data4=0x7fbbe1bb85b0)
    (data5=0x7fbbe1bb85b0)
    (data8=0x7fbbe1bb85b0)
    (data9=0x7fbbe1bb85b0)
    (data10=0x7fbbe1bb85b0)
    (data11=0x7fbbe1bb85b0)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bb85b0)
    (data1_val=0x7fbbe1bb85b0)
    (data2_val=0x7fbbe1bb85b0)
    (data3_val=0x7fbbe1bb85b0)
    (data4_val=0x7fbbe1bb85b0)
    (data5_val=0x7fbbe1bb85b0)
    (data8_val=0x7fbbe1bb85b0)
    (data9_val=0x7fbbe1bb85b0)
    (data10_val=0x7fbbe1bb85b0)
    (data11_val=0x7fbbe1bb85b0)
target=6, binarySearch=[6, 1745]
target=14
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bb8d30)
    (data1_def=0x7fbbe1bb8d30)
    (data2_def=0x7fbbe1bb8d30)
    (data3_def=0x7fbbe1bb8d30)
    (data4_def=0x7fbbe1bb8d30)
    (data5_def=0x7fbbe1bb8d30)
    (data8_def=0x7fbbe1bb8d30)
    (data9_def=0x7fbbe1bb8d30)
   (data10_def=0x7fbbe1bb8d30)
    (data11_def=0x7fbbe1bb8d30)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bb8d30)
    (data1=0x7fbbe1bb8d30)
    (data2=0x7fbbe1bb8d30)
    (data3=0x7fbbe1bb8d30)
    (data4=0x7fbbe1bb8d30)
    (data5=0x7fbbe1bb8d30)
    (data8=0x7fbbe1bb8d30)
    (data9=0x7fbbe1bb8d30)
    (data10=0x7fbbe1bb8d30)
    (data11=0x7fbbe1bb8d30)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bb8d30)
    (data1_val=0x7fbbe1bb8d30)
    (data2_val=0x7fbbe1bb8d30)
    (data3_val=0x7fbbe1bb8d30)
    (data4_val=0x7fbbe1bb8d30)
    (data5_val=0x7fbbe1bb8d30)
    (data8_val=0x7fbbe1bb8d30)
    (data9_val=0x7fbbe1bb8d30)
    (data10_val=0x7fbbe1bb8d30)
    (data11_val=0x7fbbe1bb8d30)
target=14, binarySearch=[14, 191]
target=30
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bb9c30)
    (data1_def=0x7fbbe1bb9c30)
    (data2_def=0x7fbbe1bb9c30)
    (data3_def=0x7fbbe1bb9c30)
    (data4_def=0x7fbbe1bb9c30)
    (data5_def=0x7fbbe1bb9c30)
    (data8_def=0x7fbbe1bb9c30)
    (data9_def=0x7fbbe1bb9c30)
   (data10_def=0x7fbbe1bb9c30)
    (data11_def=0x7fbbe1bb9c30)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bb9c30)
    (data1=0x7fbbe1bb9c30)
    (data2=0x7fbbe1bb9c30)
    (data3=0x7fbbe1bb9c30)
    (data4=0x7fbbe1bb9c30)
    (data5=0x7fbbe1bb9c30)
    (data8=0x7fbbe1bb9c30)
    (data9=0x7fbbe1bb9c30)
    (data10=0x7fbbe1bb9c30)
    (data11=0x7fbbe1bb9c30)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bb9c30)
    (data1_val=0x7fbbe1bb9c30)
    (data2_val=0x7fbbe1bb9c30)
    (data3_val=0x7fbbe1bb9c30)
    (data4_val=0x7fbbe1bb9c30)
    (data5_val=0x7fbbe1bb9c30)
    (data8_val=0x7fbbe1bb9c30)
    (data9_val=0x7fbbe1bb9c30)
    (data10_val=0x7fbbe1bb9c30)
    (data11_val=0x7fbbe1bb9c30)
target=30, binarySearch=[30, 6168]
target=62
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bbba30)
    (data1_def=0x7fbbe1bbba30)
    (data2_def=0x7fbbe1bbba30)
    (data3_def=0x7fbbe1bbba30)
    (data4_def=0x7fbbe1bbba30)
    (data5_def=0x7fbbe1bbba30)
    (data8_def=0x7fbbe1bbba30)
    (data9_def=0x7fbbe1bbba30)
   (data10_def=0x7fbbe1bbba30)
    (data11_def=0x7fbbe1bbba30)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bbba30)
    (data1=0x7fbbe1bbba30)
    (data2=0x7fbbe1bbba30)
    (data3=0x7fbbe1bbba30)
    (data4=0x7fbbe1bbba30)
    (data5=0x7fbbe1bbba30)
    (data8=0x7fbbe1bbba30)
    (data9=0x7fbbe1bbba30)
    (data10=0x7fbbe1bbba30)
    (data11=0x7fbbe1bbba30)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bbba30)
    (data1_val=0x7fbbe1bbba30)
    (data2_val=0x7fbbe1bbba30)
    (data3_val=0x7fbbe1bbba30)
    (data4_val=0x7fbbe1bbba30)
    (data5_val=0x7fbbe1bbba30)
    (data8_val=0x7fbbe1bbba30)
    (data9_val=0x7fbbe1bbba30)
    (data10_val=0x7fbbe1bbba30)
    (data11_val=0x7fbbe1bbba30)
target=62, binarySearch=[62, 4717]
target=126
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bbf630)
    (data1_def=0x7fbbe1bbf630)
    (data2_def=0x7fbbe1bbf630)
    (data3_def=0x7fbbe1bbf630)
    (data4_def=0x7fbbe1bbf630)
    (data5_def=0x7fbbe1bbf630)
    (data8_def=0x7fbbe1bbf630)
    (data9_def=0x7fbbe1bbf630)
   (data10_def=0x7fbbe1bbf630)
    (data11_def=0x7fbbe1bbf630)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bbf630)
    (data1=0x7fbbe1bbf630)
    (data2=0x7fbbe1bbf630)
    (data3=0x7fbbe1bbf630)
    (data4=0x7fbbe1bbf630)
    (data5=0x7fbbe1bbf630)
    (data8=0x7fbbe1bbf630)
    (data9=0x7fbbe1bbf630)
    (data10=0x7fbbe1bbf630)
    (data11=0x7fbbe1bbf630)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bbf630)
    (data1_val=0x7fbbe1bbf630)
    (data2_val=0x7fbbe1bbf630)
    (data3_val=0x7fbbe1bbf630)
    (data4_val=0x7fbbe1bbf630)
    (data5_val=0x7fbbe1bbf630)
    (data8_val=0x7fbbe1bbf630)
    (data9_val=0x7fbbe1bbf630)
    (data10_val=0x7fbbe1bbf630)
    (data11_val=0x7fbbe1bbf630)
target=126, binarySearch=[126, 2512]
target=254
  binarySearchValue(*array_shuffle1, target);
    (data_def=0x7fbbe1bc6e30)
    (data1_def=0x7fbbe1bc6e30)
    (data2_def=0x7fbbe1bc6e30)
    (data3_def=0x7fbbe1bc6e30)
    (data4_def=0x7fbbe1bc6e30)
    (data5_def=0x7fbbe1bc6e30)
    (data8_def=0x7fbbe1bc6e30)
    (data9_def=0x7fbbe1bc6e30)
   (data10_def=0x7fbbe1bc6e30)
    (data11_def=0x7fbbe1bc6e30)
  binarySearch(*array_shuffle1, comparisonForSearch);
    (data=0x7fbbe1bc6e30)
    (data1=0x7fbbe1bc6e30)
    (data2=0x7fbbe1bc6e30)
    (data3=0x7fbbe1bc6e30)
    (data4=0x7fbbe1bc6e30)
    (data5=0x7fbbe1bc6e30)
    (data8=0x7fbbe1bc6e30)
    (data9=0x7fbbe1bc6e30)
    (data10=0x7fbbe1bc6e30)
    (data11=0x7fbbe1bc6e30)
  binarySearchValue(*array_shuffle1, target, search_comparison_val);
    (data_val=0x7fbbe1bc6e30)
    (data1_val=0x7fbbe1bc6e30)
    (data2_val=0x7fbbe1bc6e30)
    (data3_val=0x7fbbe1bc6e30)
    (data4_val=0x7fbbe1bc6e30)
    (data5_val=0x7fbbe1bc6e30)
    (data8_val=0x7fbbe1bc6e30)
    (data9_val=0x7fbbe1bc6e30)
    (data10_val=0x7fbbe1bc6e30)
    (data11_val=0x7fbbe1bc6e30)
target=254, binarySearch=[254, 8995]
============================================================
Finalize
============================================================
----- Delete array(shuffle1) -----
----- Delete array(shuffle2) -----
----- Delete array(shuffle3) -----
----- Delete array(ordered) -----
----- Delete array(reversed) -----
----- Delete array(ordered_without_both_ends) -----
----- Delete array(hard_with_quick_sort) -----


============================================================
End
============================================================
*elapsed time=11.197057036 sec.
